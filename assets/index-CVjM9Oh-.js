(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
* @vue/shared v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function Id(i){const e=Object.create(null);for(const t of i.split(","))e[t]=1;return t=>t in e}const Et={},fo=[],Li=()=>{},mb=()=>!1,Eu=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&(i.charCodeAt(2)>122||i.charCodeAt(2)<97),Pd=i=>i.startsWith("onUpdate:"),mn=Object.assign,Ld=(i,e)=>{const t=i.indexOf(e);t>-1&&i.splice(t,1)},gb=Object.prototype.hasOwnProperty,_t=(i,e)=>gb.call(i,e),tt=Array.isArray,ha=i=>Au(i)==="[object Map]",vb=i=>Au(i)==="[object Set]",et=i=>typeof i=="function",tn=i=>typeof i=="string",Us=i=>typeof i=="symbol",Ht=i=>i!==null&&typeof i=="object",h_=i=>(Ht(i)||et(i))&&et(i.then)&&et(i.catch),_b=Object.prototype.toString,Au=i=>_b.call(i),xb=i=>Au(i).slice(8,-1),yb=i=>Au(i)==="[object Object]",Dd=i=>tn(i)&&i!=="NaN"&&i[0]!=="-"&&""+parseInt(i,10)===i,fa=Id(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Ru=i=>{const e=Object.create(null);return t=>e[t]||(e[t]=i(t))},bb=/-(\w)/g,ii=Ru(i=>i.replace(bb,(e,t)=>t?t.toUpperCase():"")),Mb=/\B([A-Z])/g,Os=Ru(i=>i.replace(Mb,"-$1").toLowerCase()),Cu=Ru(i=>i.charAt(0).toUpperCase()+i.slice(1)),Ah=Ru(i=>i?`on${Cu(i)}`:""),Cr=(i,e)=>!Object.is(i,e),Rh=(i,...e)=>{for(let t=0;t<i.length;t++)i[t](...e)},f_=(i,e,t,n=!1)=>{Object.defineProperty(i,e,{configurable:!0,enumerable:!1,writable:n,value:t})},Sb=i=>{const e=parseFloat(i);return isNaN(e)?i:e};let tm;const Iu=()=>tm||(tm=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Pu(i){if(tt(i)){const e={};for(let t=0;t<i.length;t++){const n=i[t],r=tn(n)?Ab(n):Pu(n);if(r)for(const s in r)e[s]=r[s]}return e}else if(tn(i)||Ht(i))return i}const wb=/;(?![^(]*\))/g,Tb=/:([^]+)/,Eb=/\/\*[^]*?\*\//g;function Ab(i){const e={};return i.replace(Eb,"").split(wb).forEach(t=>{if(t){const n=t.split(Tb);n.length>1&&(e[n[0].trim()]=n[1].trim())}}),e}function Lu(i){let e="";if(tn(i))e=i;else if(tt(i))for(let t=0;t<i.length;t++){const n=Lu(i[t]);n&&(e+=n+" ")}else if(Ht(i))for(const t in i)i[t]&&(e+=t+" ");return e.trim()}const Rb="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Cb=Id(Rb);function d_(i){return!!i||i===""}/**
* @vue/reactivity v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Mn;class p_{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=Mn,!e&&Mn&&(this.index=(Mn.scopes||(Mn.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].pause();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].resume();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].resume()}}run(e){if(this._active){const t=Mn;try{return Mn=this,e()}finally{Mn=t}}}on(){Mn=this}off(){Mn=this.parent}stop(e){if(this._active){this._active=!1;let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(this.effects.length=0,t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.cleanups.length=0,this.scopes){for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0}}}function Ib(i){return new p_(i)}function Nd(){return Mn}function m_(i,e=!1){Mn&&Mn.cleanups.push(i)}let Tt;const Ch=new WeakSet;class g_{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,Mn&&Mn.active&&Mn.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Ch.has(this)&&(Ch.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||__(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,nm(this),x_(this);const e=Tt,t=pi;Tt=this,pi=!0;try{return this.fn()}finally{y_(this),Tt=e,pi=t,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)Fd(e);this.deps=this.depsTail=void 0,nm(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Ch.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){Wf(this)&&this.run()}get dirty(){return Wf(this)}}let v_=0,da,pa;function __(i,e=!1){if(i.flags|=8,e){i.next=pa,pa=i;return}i.next=da,da=i}function Ud(){v_++}function Od(){if(--v_>0)return;if(pa){let e=pa;for(pa=void 0;e;){const t=e.next;e.next=void 0,e.flags&=-9,e=t}}let i;for(;da;){let e=da;for(da=void 0;e;){const t=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(n){i||(i=n)}e=t}}if(i)throw i}function x_(i){for(let e=i.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function y_(i){let e,t=i.depsTail,n=t;for(;n;){const r=n.prevDep;n.version===-1?(n===t&&(t=r),Fd(n),Pb(n)):e=n,n.dep.activeLink=n.prevActiveLink,n.prevActiveLink=void 0,n=r}i.deps=e,i.depsTail=t}function Wf(i){for(let e=i.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(b_(e.dep.computed)||e.dep.version!==e.version))return!0;return!!i._dirty}function b_(i){if(i.flags&4&&!(i.flags&16)||(i.flags&=-17,i.globalVersion===La))return;i.globalVersion=La;const e=i.dep;if(i.flags|=2,e.version>0&&!i.isSSR&&i.deps&&!Wf(i)){i.flags&=-3;return}const t=Tt,n=pi;Tt=i,pi=!0;try{x_(i);const r=i.fn(i._value);(e.version===0||Cr(r,i._value))&&(i._value=r,e.version++)}catch(r){throw e.version++,r}finally{Tt=t,pi=n,y_(i),i.flags&=-3}}function Fd(i,e=!1){const{dep:t,prevSub:n,nextSub:r}=i;if(n&&(n.nextSub=r,i.prevSub=void 0),r&&(r.prevSub=n,i.nextSub=void 0),t.subs===i&&(t.subs=n,!n&&t.computed)){t.computed.flags&=-5;for(let s=t.computed.deps;s;s=s.nextDep)Fd(s,!0)}!e&&!--t.sc&&t.map&&t.map.delete(t.key)}function Pb(i){const{prevDep:e,nextDep:t}=i;e&&(e.nextDep=t,i.prevDep=void 0),t&&(t.prevDep=e,i.nextDep=void 0)}let pi=!0;const M_=[];function Ur(){M_.push(pi),pi=!1}function Or(){const i=M_.pop();pi=i===void 0?!0:i}function nm(i){const{cleanup:e}=i;if(i.cleanup=void 0,e){const t=Tt;Tt=void 0;try{e()}finally{Tt=t}}}let La=0;class Lb{constructor(e,t){this.sub=e,this.dep=t,this.version=t.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class Du{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(e){if(!Tt||!pi||Tt===this.computed)return;let t=this.activeLink;if(t===void 0||t.sub!==Tt)t=this.activeLink=new Lb(Tt,this),Tt.deps?(t.prevDep=Tt.depsTail,Tt.depsTail.nextDep=t,Tt.depsTail=t):Tt.deps=Tt.depsTail=t,S_(t);else if(t.version===-1&&(t.version=this.version,t.nextDep)){const n=t.nextDep;n.prevDep=t.prevDep,t.prevDep&&(t.prevDep.nextDep=n),t.prevDep=Tt.depsTail,t.nextDep=void 0,Tt.depsTail.nextDep=t,Tt.depsTail=t,Tt.deps===t&&(Tt.deps=n)}return t}trigger(e){this.version++,La++,this.notify(e)}notify(e){Ud();try{for(let t=this.subs;t;t=t.prevSub)t.sub.notify()&&t.sub.dep.notify()}finally{Od()}}}function S_(i){if(i.dep.sc++,i.sub.flags&4){const e=i.dep.computed;if(e&&!i.dep.subs){e.flags|=20;for(let n=e.deps;n;n=n.nextDep)S_(n)}const t=i.dep.subs;t!==i&&(i.prevSub=t,t&&(t.nextSub=i)),i.dep.subs=i}}const Rc=new WeakMap,ms=Symbol(""),Xf=Symbol(""),Da=Symbol("");function fn(i,e,t){if(pi&&Tt){let n=Rc.get(i);n||Rc.set(i,n=new Map);let r=n.get(t);r||(n.set(t,r=new Du),r.map=n,r.key=t),r.track()}}function Ji(i,e,t,n,r,s){const o=Rc.get(i);if(!o){La++;return}const a=l=>{l&&l.trigger()};if(Ud(),e==="clear")o.forEach(a);else{const l=tt(i),c=l&&Dd(t);if(l&&t==="length"){const u=Number(n);o.forEach((h,f)=>{(f==="length"||f===Da||!Us(f)&&f>=u)&&a(h)})}else switch((t!==void 0||o.has(void 0))&&a(o.get(t)),c&&a(o.get(Da)),e){case"add":l?c&&a(o.get("length")):(a(o.get(ms)),ha(i)&&a(o.get(Xf)));break;case"delete":l||(a(o.get(ms)),ha(i)&&a(o.get(Xf)));break;case"set":ha(i)&&a(o.get(ms));break}}Od()}function Db(i,e){const t=Rc.get(i);return t&&t.get(e)}function Vs(i){const e=pt(i);return e===i?e:(fn(e,"iterate",Da),mi(i)?e:e.map(Sn))}function Bd(i){return fn(i=pt(i),"iterate",Da),i}const Nb={__proto__:null,[Symbol.iterator](){return Ih(this,Symbol.iterator,Sn)},concat(...i){return Vs(this).concat(...i.map(e=>tt(e)?Vs(e):e))},entries(){return Ih(this,"entries",i=>(i[1]=Sn(i[1]),i))},every(i,e){return Vi(this,"every",i,e,void 0,arguments)},filter(i,e){return Vi(this,"filter",i,e,t=>t.map(Sn),arguments)},find(i,e){return Vi(this,"find",i,e,Sn,arguments)},findIndex(i,e){return Vi(this,"findIndex",i,e,void 0,arguments)},findLast(i,e){return Vi(this,"findLast",i,e,Sn,arguments)},findLastIndex(i,e){return Vi(this,"findLastIndex",i,e,void 0,arguments)},forEach(i,e){return Vi(this,"forEach",i,e,void 0,arguments)},includes(...i){return Ph(this,"includes",i)},indexOf(...i){return Ph(this,"indexOf",i)},join(i){return Vs(this).join(i)},lastIndexOf(...i){return Ph(this,"lastIndexOf",i)},map(i,e){return Vi(this,"map",i,e,void 0,arguments)},pop(){return Vo(this,"pop")},push(...i){return Vo(this,"push",i)},reduce(i,...e){return im(this,"reduce",i,e)},reduceRight(i,...e){return im(this,"reduceRight",i,e)},shift(){return Vo(this,"shift")},some(i,e){return Vi(this,"some",i,e,void 0,arguments)},splice(...i){return Vo(this,"splice",i)},toReversed(){return Vs(this).toReversed()},toSorted(i){return Vs(this).toSorted(i)},toSpliced(...i){return Vs(this).toSpliced(...i)},unshift(...i){return Vo(this,"unshift",i)},values(){return Ih(this,"values",Sn)}};function Ih(i,e,t){const n=Bd(i),r=n[e]();return n!==i&&!mi(i)&&(r._next=r.next,r.next=()=>{const s=r._next();return s.value&&(s.value=t(s.value)),s}),r}const Ub=Array.prototype;function Vi(i,e,t,n,r,s){const o=Bd(i),a=o!==i&&!mi(i),l=o[e];if(l!==Ub[e]){const h=l.apply(i,s);return a?Sn(h):h}let c=t;o!==i&&(a?c=function(h,f){return t.call(this,Sn(h),f,i)}:t.length>2&&(c=function(h,f){return t.call(this,h,f,i)}));const u=l.call(o,c,n);return a&&r?r(u):u}function im(i,e,t,n){const r=Bd(i);let s=t;return r!==i&&(mi(i)?t.length>3&&(s=function(o,a,l){return t.call(this,o,a,l,i)}):s=function(o,a,l){return t.call(this,o,Sn(a),l,i)}),r[e](s,...n)}function Ph(i,e,t){const n=pt(i);fn(n,"iterate",Da);const r=n[e](...t);return(r===-1||r===!1)&&Vd(t[0])?(t[0]=pt(t[0]),n[e](...t)):r}function Vo(i,e,t=[]){Ur(),Ud();const n=pt(i)[e].apply(i,t);return Od(),Or(),n}const Ob=Id("__proto__,__v_isRef,__isVue"),w_=new Set(Object.getOwnPropertyNames(Symbol).filter(i=>i!=="arguments"&&i!=="caller").map(i=>Symbol[i]).filter(Us));function Fb(i){Us(i)||(i=String(i));const e=pt(this);return fn(e,"has",i),e.hasOwnProperty(i)}class T_{constructor(e=!1,t=!1){this._isReadonly=e,this._isShallow=t}get(e,t,n){if(t==="__v_skip")return e.__v_skip;const r=this._isReadonly,s=this._isShallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return s;if(t==="__v_raw")return n===(r?s?Yb:C_:s?R_:A_).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(n)?e:void 0;const o=tt(e);if(!r){let l;if(o&&(l=Nb[t]))return l;if(t==="hasOwnProperty")return Fb}const a=Reflect.get(e,t,kt(e)?e:n);return(Us(t)?w_.has(t):Ob(t))||(r||fn(e,"get",t),s)?a:kt(a)?o&&Dd(t)?a:a.value:Ht(a)?r?Ms(a):Za(a):a}}class E_ extends T_{constructor(e=!1){super(!1,e)}set(e,t,n,r){let s=e[t];if(!this._isShallow){const l=Ss(s);if(!mi(n)&&!Ss(n)&&(s=pt(s),n=pt(n)),!tt(e)&&kt(s)&&!kt(n))return l?!1:(s.value=n,!0)}const o=tt(e)&&Dd(t)?Number(t)<e.length:_t(e,t),a=Reflect.set(e,t,n,kt(e)?e:r);return e===pt(r)&&(o?Cr(n,s)&&Ji(e,"set",t,n):Ji(e,"add",t,n)),a}deleteProperty(e,t){const n=_t(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&n&&Ji(e,"delete",t,void 0),r}has(e,t){const n=Reflect.has(e,t);return(!Us(t)||!w_.has(t))&&fn(e,"has",t),n}ownKeys(e){return fn(e,"iterate",tt(e)?"length":ms),Reflect.ownKeys(e)}}class Bb extends T_{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const zb=new E_,kb=new Bb,Vb=new E_(!0);const jf=i=>i,_l=i=>Reflect.getPrototypeOf(i);function Hb(i,e,t){return function(...n){const r=this.__v_raw,s=pt(r),o=ha(s),a=i==="entries"||i===Symbol.iterator&&o,l=i==="keys"&&o,c=r[i](...n),u=t?jf:e?Yf:Sn;return!e&&fn(s,"iterate",l?Xf:ms),{next(){const{value:h,done:f}=c.next();return f?{value:h,done:f}:{value:a?[u(h[0]),u(h[1])]:u(h),done:f}},[Symbol.iterator](){return this}}}}function xl(i){return function(...e){return i==="delete"?!1:i==="clear"?void 0:this}}function Gb(i,e){const t={get(r){const s=this.__v_raw,o=pt(s),a=pt(r);i||(Cr(r,a)&&fn(o,"get",r),fn(o,"get",a));const{has:l}=_l(o),c=e?jf:i?Yf:Sn;if(l.call(o,r))return c(s.get(r));if(l.call(o,a))return c(s.get(a));s!==o&&s.get(r)},get size(){const r=this.__v_raw;return!i&&fn(pt(r),"iterate",ms),Reflect.get(r,"size",r)},has(r){const s=this.__v_raw,o=pt(s),a=pt(r);return i||(Cr(r,a)&&fn(o,"has",r),fn(o,"has",a)),r===a?s.has(r):s.has(r)||s.has(a)},forEach(r,s){const o=this,a=o.__v_raw,l=pt(a),c=e?jf:i?Yf:Sn;return!i&&fn(l,"iterate",ms),a.forEach((u,h)=>r.call(s,c(u),c(h),o))}};return mn(t,i?{add:xl("add"),set:xl("set"),delete:xl("delete"),clear:xl("clear")}:{add(r){!e&&!mi(r)&&!Ss(r)&&(r=pt(r));const s=pt(this);return _l(s).has.call(s,r)||(s.add(r),Ji(s,"add",r,r)),this},set(r,s){!e&&!mi(s)&&!Ss(s)&&(s=pt(s));const o=pt(this),{has:a,get:l}=_l(o);let c=a.call(o,r);c||(r=pt(r),c=a.call(o,r));const u=l.call(o,r);return o.set(r,s),c?Cr(s,u)&&Ji(o,"set",r,s):Ji(o,"add",r,s),this},delete(r){const s=pt(this),{has:o,get:a}=_l(s);let l=o.call(s,r);l||(r=pt(r),l=o.call(s,r)),a&&a.call(s,r);const c=s.delete(r);return l&&Ji(s,"delete",r,void 0),c},clear(){const r=pt(this),s=r.size!==0,o=r.clear();return s&&Ji(r,"clear",void 0,void 0),o}}),["keys","values","entries",Symbol.iterator].forEach(r=>{t[r]=Hb(r,i,e)}),t}function zd(i,e){const t=Gb(i,e);return(n,r,s)=>r==="__v_isReactive"?!i:r==="__v_isReadonly"?i:r==="__v_raw"?n:Reflect.get(_t(t,r)&&r in n?t:n,r,s)}const Wb={get:zd(!1,!1)},Xb={get:zd(!1,!0)},jb={get:zd(!0,!1)};const A_=new WeakMap,R_=new WeakMap,C_=new WeakMap,Yb=new WeakMap;function qb(i){switch(i){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function $b(i){return i.__v_skip||!Object.isExtensible(i)?0:qb(xb(i))}function Za(i){return Ss(i)?i:kd(i,!1,zb,Wb,A_)}function I_(i){return kd(i,!1,Vb,Xb,R_)}function Ms(i){return kd(i,!0,kb,jb,C_)}function kd(i,e,t,n,r){if(!Ht(i)||i.__v_raw&&!(e&&i.__v_isReactive))return i;const s=r.get(i);if(s)return s;const o=$b(i);if(o===0)return i;const a=new Proxy(i,o===2?n:t);return r.set(i,a),a}function ma(i){return Ss(i)?ma(i.__v_raw):!!(i&&i.__v_isReactive)}function Ss(i){return!!(i&&i.__v_isReadonly)}function mi(i){return!!(i&&i.__v_isShallow)}function Vd(i){return i?!!i.__v_raw:!1}function pt(i){const e=i&&i.__v_raw;return e?pt(e):i}function Hd(i){return!_t(i,"__v_skip")&&Object.isExtensible(i)&&f_(i,"__v_skip",!0),i}const Sn=i=>Ht(i)?Za(i):i,Yf=i=>Ht(i)?Ms(i):i;function kt(i){return i?i.__v_isRef===!0:!1}function Pt(i){return P_(i,!1)}function ft(i){return P_(i,!0)}function P_(i,e){return kt(i)?i:new Kb(i,e)}class Kb{constructor(e,t){this.dep=new Du,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=t?e:pt(e),this._value=t?e:Sn(e),this.__v_isShallow=t}get value(){return this.dep.track(),this._value}set value(e){const t=this._rawValue,n=this.__v_isShallow||mi(e)||Ss(e);e=n?e:pt(e),Cr(e,t)&&(this._rawValue=e,this._value=n?e:Sn(e),this.dep.trigger())}}function Ve(i){return kt(i)?i.value:i}function Fn(i){return et(i)?i():Ve(i)}const Zb={get:(i,e,t)=>e==="__v_raw"?i:Ve(Reflect.get(i,e,t)),set:(i,e,t,n)=>{const r=i[e];return kt(r)&&!kt(t)?(r.value=t,!0):Reflect.set(i,e,t,n)}};function L_(i){return ma(i)?i:new Proxy(i,Zb)}class Jb{constructor(e){this.__v_isRef=!0,this._value=void 0;const t=this.dep=new Du,{get:n,set:r}=e(t.track.bind(t),t.trigger.bind(t));this._get=n,this._set=r}get value(){return this._value=this._get()}set value(e){this._set(e)}}function Qb(i){return new Jb(i)}function Nu(i){const e=tt(i)?new Array(i.length):{};for(const t in i)e[t]=tM(i,t);return e}class eM{constructor(e,t,n){this._object=e,this._key=t,this._defaultValue=n,this.__v_isRef=!0,this._value=void 0}get value(){const e=this._object[this._key];return this._value=e===void 0?this._defaultValue:e}set value(e){this._object[this._key]=e}get dep(){return Db(pt(this._object),this._key)}}function tM(i,e,t){const n=i[e];return kt(n)?n:new eM(i,e,t)}class nM{constructor(e,t,n){this.fn=e,this.setter=t,this._value=void 0,this.dep=new Du(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=La-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!t,this.isSSR=n}notify(){if(this.flags|=16,!(this.flags&8)&&Tt!==this)return __(this,!0),!0}get value(){const e=this.dep.track();return b_(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function iM(i,e,t=!1){let n,r;return et(i)?n=i:(n=i.get,r=i.set),new nM(n,r,t)}const yl={},Cc=new WeakMap;let os;function rM(i,e=!1,t=os){if(t){let n=Cc.get(t);n||Cc.set(t,n=[]),n.push(i)}}function sM(i,e,t=Et){const{immediate:n,deep:r,once:s,scheduler:o,augmentJob:a,call:l}=t,c=y=>r?y:mi(y)||r===!1||r===0?wr(y,1):wr(y);let u,h,f,d,p=!1,v=!1;if(kt(i)?(h=()=>i.value,p=mi(i)):ma(i)?(h=()=>c(i),p=!0):tt(i)?(v=!0,p=i.some(y=>ma(y)||mi(y)),h=()=>i.map(y=>{if(kt(y))return y.value;if(ma(y))return c(y);if(et(y))return l?l(y,2):y()})):et(i)?e?h=l?()=>l(i,2):i:h=()=>{if(f){Ur();try{f()}finally{Or()}}const y=os;os=u;try{return l?l(i,3,[d]):i(d)}finally{os=y}}:h=Li,e&&r){const y=h,C=r===!0?1/0:r;h=()=>wr(y(),C)}const m=Nd(),g=()=>{u.stop(),m&&m.active&&Ld(m.effects,u)};if(s&&e){const y=e;e=(...C)=>{y(...C),g()}}let M=v?new Array(i.length).fill(yl):yl;const b=y=>{if(!(!(u.flags&1)||!u.dirty&&!y))if(e){const C=u.run();if(r||p||(v?C.some((w,E)=>Cr(w,M[E])):Cr(C,M))){f&&f();const w=os;os=u;try{const E=[C,M===yl?void 0:v&&M[0]===yl?[]:M,d];l?l(e,3,E):e(...E),M=C}finally{os=w}}}else u.run()};return a&&a(b),u=new g_(h),u.scheduler=o?()=>o(b,!1):b,d=y=>rM(y,!1,u),f=u.onStop=()=>{const y=Cc.get(u);if(y){if(l)l(y,4);else for(const C of y)C();Cc.delete(u)}},e?n?b(!0):M=u.run():o?o(b.bind(null,!0),!0):u.run(),g.pause=u.pause.bind(u),g.resume=u.resume.bind(u),g.stop=g,g}function wr(i,e=1/0,t){if(e<=0||!Ht(i)||i.__v_skip||(t=t||new Set,t.has(i)))return i;if(t.add(i),e--,kt(i))wr(i.value,e,t);else if(tt(i))for(let n=0;n<i.length;n++)wr(i[n],e,t);else if(vb(i)||ha(i))i.forEach(n=>{wr(n,e,t)});else if(yb(i)){for(const n in i)wr(i[n],e,t);for(const n of Object.getOwnPropertySymbols(i))Object.prototype.propertyIsEnumerable.call(i,n)&&wr(i[n],e,t)}return i}/**
* @vue/runtime-core v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Ja(i,e,t,n){try{return n?i(...n):i()}catch(r){Uu(r,e,t)}}function Ni(i,e,t,n){if(et(i)){const r=Ja(i,e,t,n);return r&&h_(r)&&r.catch(s=>{Uu(s,e,t)}),r}if(tt(i)){const r=[];for(let s=0;s<i.length;s++)r.push(Ni(i[s],e,t,n));return r}}function Uu(i,e,t,n=!0){const r=e?e.vnode:null,{errorHandler:s,throwUnhandledErrorInProduction:o}=e&&e.appContext.config||Et;if(e){let a=e.parent;const l=e.proxy,c=`https://vuejs.org/error-reference/#runtime-${t}`;for(;a;){const u=a.ec;if(u){for(let h=0;h<u.length;h++)if(u[h](i,l,c)===!1)return}a=a.parent}if(s){Ur(),Ja(s,null,10,[i,l,c]),Or();return}}oM(i,t,r,n,o)}function oM(i,e,t,n=!0,r=!1){if(r)throw i;console.error(i)}const wn=[];let Ai=-1;const po=[];let br=null,lo=0;const D_=Promise.resolve();let Ic=null;function Gd(i){const e=Ic||D_;return i?e.then(this?i.bind(this):i):e}function aM(i){let e=Ai+1,t=wn.length;for(;e<t;){const n=e+t>>>1,r=wn[n],s=Na(r);s<i||s===i&&r.flags&2?e=n+1:t=n}return e}function Wd(i){if(!(i.flags&1)){const e=Na(i),t=wn[wn.length-1];!t||!(i.flags&2)&&e>=Na(t)?wn.push(i):wn.splice(aM(e),0,i),i.flags|=1,N_()}}function N_(){Ic||(Ic=D_.then(O_))}function lM(i){tt(i)?po.push(...i):br&&i.id===-1?br.splice(lo+1,0,i):i.flags&1||(po.push(i),i.flags|=1),N_()}function rm(i,e,t=Ai+1){for(;t<wn.length;t++){const n=wn[t];if(n&&n.flags&2){if(i&&n.id!==i.uid)continue;wn.splice(t,1),t--,n.flags&4&&(n.flags&=-2),n(),n.flags&4||(n.flags&=-2)}}}function U_(i){if(po.length){const e=[...new Set(po)].sort((t,n)=>Na(t)-Na(n));if(po.length=0,br){br.push(...e);return}for(br=e,lo=0;lo<br.length;lo++){const t=br[lo];t.flags&4&&(t.flags&=-2),t.flags&8||t(),t.flags&=-2}br=null,lo=0}}const Na=i=>i.id==null?i.flags&2?-1:1/0:i.id;function O_(i){try{for(Ai=0;Ai<wn.length;Ai++){const e=wn[Ai];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),Ja(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;Ai<wn.length;Ai++){const e=wn[Ai];e&&(e.flags&=-2)}Ai=-1,wn.length=0,U_(),Ic=null,(wn.length||po.length)&&O_()}}let sn=null,F_=null;function Pc(i){const e=sn;return sn=i,F_=i&&i.type.__scopeId||null,e}function B_(i,e=sn,t){if(!e||i._n)return i;const n=(...r)=>{n._d&&pm(-1);const s=Pc(e);let o;try{o=i(...r)}finally{Pc(s),n._d&&pm(1)}return o};return n._n=!0,n._c=!0,n._d=!0,n}function Wr(i,e,t,n){const r=i.dirs,s=e&&e.dirs;for(let o=0;o<r.length;o++){const a=r[o];s&&(a.oldValue=s[o].value);let l=a.dir[n];l&&(Ur(),Ni(l,t,8,[i.el,a,i,e]),Or())}}const cM=Symbol("_vte"),uM=i=>i.__isTeleport;function Xd(i,e){i.shapeFlag&6&&i.component?(i.transition=e,Xd(i.component.subTree,e)):i.shapeFlag&128?(i.ssContent.transition=e.clone(i.ssContent),i.ssFallback.transition=e.clone(i.ssFallback)):i.transition=e}/*! #__NO_SIDE_EFFECTS__ */function Ui(i,e){return et(i)?mn({name:i.name},e,{setup:i}):i}function z_(i){i.ids=[i.ids[0]+i.ids[2]+++"-",0,0]}function Lc(i,e,t,n,r=!1){if(tt(i)){i.forEach((p,v)=>Lc(p,e&&(tt(e)?e[v]:e),t,n,r));return}if(mo(n)&&!r){n.shapeFlag&512&&n.type.__asyncResolved&&n.component.subTree.component&&Lc(i,e,t,n.component.subTree);return}const s=n.shapeFlag&4?$d(n.component):n.el,o=r?null:s,{i:a,r:l}=i,c=e&&e.r,u=a.refs===Et?a.refs={}:a.refs,h=a.setupState,f=pt(h),d=h===Et?()=>!1:p=>_t(f,p);if(c!=null&&c!==l&&(tn(c)?(u[c]=null,d(c)&&(h[c]=null)):kt(c)&&(c.value=null)),et(l))Ja(l,a,12,[o,u]);else{const p=tn(l),v=kt(l);if(p||v){const m=()=>{if(i.f){const g=p?d(l)?h[l]:u[l]:l.value;r?tt(g)&&Ld(g,s):tt(g)?g.includes(s)||g.push(s):p?(u[l]=[s],d(l)&&(h[l]=u[l])):(l.value=[s],i.k&&(u[i.k]=l.value))}else p?(u[l]=o,d(l)&&(h[l]=o)):v&&(l.value=o,i.k&&(u[i.k]=o))};o?(m.id=-1,Vn(m,t)):m()}}}Iu().requestIdleCallback;Iu().cancelIdleCallback;const mo=i=>!!i.type.__asyncLoader,k_=i=>i.type.__isKeepAlive;function hM(i,e){V_(i,"a",e)}function fM(i,e){V_(i,"da",e)}function V_(i,e,t=Zt){const n=i.__wdc||(i.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return i()});if(Ou(e,n,t),t){let r=t.parent;for(;r&&r.parent;)k_(r.parent.vnode)&&dM(n,e,t,r),r=r.parent}}function dM(i,e,t,n){const r=Ou(e,i,n,!0);Oi(()=>{Ld(n[e],r)},t)}function Ou(i,e,t=Zt,n=!1){if(t){const r=t[i]||(t[i]=[]),s=e.__weh||(e.__weh=(...o)=>{Ur();const a=el(t),l=Ni(e,t,i,o);return a(),Or(),l});return n?r.unshift(s):r.push(s),s}}const lr=i=>(e,t=Zt)=>{(!Ba||i==="sp")&&Ou(i,(...n)=>e(...n),t)},pM=lr("bm"),Qa=lr("m"),mM=lr("bu"),gM=lr("u"),vM=lr("bum"),Oi=lr("um"),_M=lr("sp"),xM=lr("rtg"),yM=lr("rtc");function bM(i,e=Zt){Ou("ec",i,e)}const MM="components";function SM(i,e){return TM(MM,i,!0,e)||i}const wM=Symbol.for("v-ndc");function TM(i,e,t=!0,n=!1){const r=sn||Zt;if(r){const s=r.type;{const a=fS(s,!1);if(a&&(a===e||a===ii(e)||a===Cu(ii(e))))return s}const o=sm(r[i]||s[i],e)||sm(r.appContext[i],e);return!o&&n?s:o}}function sm(i,e){return i&&(i[e]||i[ii(e)]||i[Cu(ii(e))])}function EM(i,e,t={},n,r){if(sn.ce||sn.parent&&mo(sn.parent)&&sn.parent.ce)return dn(),Oa(Tn,null,[zt("slot",t,n&&n())],64);let s=i[e];s&&s._c&&(s._d=!1),dn();const o=s&&H_(s(t)),a=t.key||o&&o.key,l=Oa(Tn,{key:(a&&!Us(a)?a:`_${e}`)+(!o&&n?"_fb":"")},o||(n?n():[]),o&&i._===1?64:-2);return l.scopeId&&(l.slotScopeIds=[l.scopeId+"-s"]),s&&s._c&&(s._d=!0),l}function H_(i){return i.some(e=>Fa(e)?!(e.type===Lr||e.type===Tn&&!H_(e.children)):!0)?i:null}const qf=i=>i?d0(i)?$d(i):qf(i.parent):null,ga=mn(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>qf(i.parent),$root:i=>qf(i.root),$host:i=>i.ce,$emit:i=>i.emit,$options:i=>j_(i),$forceUpdate:i=>i.f||(i.f=()=>{Wd(i.update)}),$nextTick:i=>i.n||(i.n=Gd.bind(i.proxy)),$watch:i=>YM.bind(i)}),Lh=(i,e)=>i!==Et&&!i.__isScriptSetup&&_t(i,e),AM={get({_:i},e){if(e==="__v_skip")return!0;const{ctx:t,setupState:n,data:r,props:s,accessCache:o,type:a,appContext:l}=i;let c;if(e[0]!=="$"){const d=o[e];if(d!==void 0)switch(d){case 1:return n[e];case 2:return r[e];case 4:return t[e];case 3:return s[e]}else{if(Lh(n,e))return o[e]=1,n[e];if(r!==Et&&_t(r,e))return o[e]=2,r[e];if((c=i.propsOptions[0])&&_t(c,e))return o[e]=3,s[e];if(t!==Et&&_t(t,e))return o[e]=4,t[e];$f&&(o[e]=0)}}const u=ga[e];let h,f;if(u)return e==="$attrs"&&fn(i.attrs,"get",""),u(i);if((h=a.__cssModules)&&(h=h[e]))return h;if(t!==Et&&_t(t,e))return o[e]=4,t[e];if(f=l.config.globalProperties,_t(f,e))return f[e]},set({_:i},e,t){const{data:n,setupState:r,ctx:s}=i;return Lh(r,e)?(r[e]=t,!0):n!==Et&&_t(n,e)?(n[e]=t,!0):_t(i.props,e)||e[0]==="$"&&e.slice(1)in i?!1:(s[e]=t,!0)},has({_:{data:i,setupState:e,accessCache:t,ctx:n,appContext:r,propsOptions:s}},o){let a;return!!t[o]||i!==Et&&_t(i,o)||Lh(e,o)||(a=s[0])&&_t(a,o)||_t(n,o)||_t(ga,o)||_t(r.config.globalProperties,o)},defineProperty(i,e,t){return t.get!=null?i._.accessCache[e]=0:_t(t,"value")&&this.set(i,e,t.value,null),Reflect.defineProperty(i,e,t)}};function G_(){return W_().slots}function RM(){return W_().attrs}function W_(){const i=xo();return i.setupContext||(i.setupContext=m0(i))}function om(i){return tt(i)?i.reduce((e,t)=>(e[t]=null,e),{}):i}let $f=!0;function CM(i){const e=j_(i),t=i.proxy,n=i.ctx;$f=!1,e.beforeCreate&&am(e.beforeCreate,i,"bc");const{data:r,computed:s,methods:o,watch:a,provide:l,inject:c,created:u,beforeMount:h,mounted:f,beforeUpdate:d,updated:p,activated:v,deactivated:m,beforeDestroy:g,beforeUnmount:M,destroyed:b,unmounted:y,render:C,renderTracked:w,renderTriggered:E,errorCaptured:S,serverPrefetch:x,expose:_,inheritAttrs:A,components:N,directives:B,filters:V}=e;if(c&&IM(c,n,null),o)for(const te in o){const J=o[te];et(J)&&(n[te]=J.bind(t))}if(r){const te=r.call(t,t);Ht(te)&&(i.data=Za(te))}if($f=!0,s)for(const te in s){const J=s[te],ue=et(J)?J.bind(t,t):et(J.get)?J.get.bind(t,t):Li,de=!et(J)&&et(J.set)?J.set.bind(t):Li,oe=xt({get:ue,set:de});Object.defineProperty(n,te,{enumerable:!0,configurable:!0,get:()=>oe.value,set:ye=>oe.value=ye})}if(a)for(const te in a)X_(a[te],n,t,te);if(l){const te=et(l)?l.call(t):l;Reflect.ownKeys(te).forEach(J=>{Ir(J,te[J])})}u&&am(u,i,"c");function z(te,J){tt(J)?J.forEach(ue=>te(ue.bind(t))):J&&te(J.bind(t))}if(z(pM,h),z(Qa,f),z(mM,d),z(gM,p),z(hM,v),z(fM,m),z(bM,S),z(yM,w),z(xM,E),z(vM,M),z(Oi,y),z(_M,x),tt(_))if(_.length){const te=i.exposed||(i.exposed={});_.forEach(J=>{Object.defineProperty(te,J,{get:()=>t[J],set:ue=>t[J]=ue})})}else i.exposed||(i.exposed={});C&&i.render===Li&&(i.render=C),A!=null&&(i.inheritAttrs=A),N&&(i.components=N),B&&(i.directives=B),x&&z_(i)}function IM(i,e,t=Li){tt(i)&&(i=Kf(i));for(const n in i){const r=i[n];let s;Ht(r)?"default"in r?s=ti(r.from||n,r.default,!0):s=ti(r.from||n):s=ti(r),kt(s)?Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:()=>s.value,set:o=>s.value=o}):e[n]=s}}function am(i,e,t){Ni(tt(i)?i.map(n=>n.bind(e.proxy)):i.bind(e.proxy),e,t)}function X_(i,e,t,n){let r=n.includes(".")?a0(t,n):()=>t[n];if(tn(i)){const s=e[i];et(s)&&Vt(r,s)}else if(et(i))Vt(r,i.bind(t));else if(Ht(i))if(tt(i))i.forEach(s=>X_(s,e,t,n));else{const s=et(i.handler)?i.handler.bind(t):e[i.handler];et(s)&&Vt(r,s,i)}}function j_(i){const e=i.type,{mixins:t,extends:n}=e,{mixins:r,optionsCache:s,config:{optionMergeStrategies:o}}=i.appContext,a=s.get(e);let l;return a?l=a:!r.length&&!t&&!n?l=e:(l={},r.length&&r.forEach(c=>Dc(l,c,o,!0)),Dc(l,e,o)),Ht(e)&&s.set(e,l),l}function Dc(i,e,t,n=!1){const{mixins:r,extends:s}=e;s&&Dc(i,s,t,!0),r&&r.forEach(o=>Dc(i,o,t,!0));for(const o in e)if(!(n&&o==="expose")){const a=PM[o]||t&&t[o];i[o]=a?a(i[o],e[o]):e[o]}return i}const PM={data:lm,props:cm,emits:cm,methods:sa,computed:sa,beforeCreate:yn,created:yn,beforeMount:yn,mounted:yn,beforeUpdate:yn,updated:yn,beforeDestroy:yn,beforeUnmount:yn,destroyed:yn,unmounted:yn,activated:yn,deactivated:yn,errorCaptured:yn,serverPrefetch:yn,components:sa,directives:sa,watch:DM,provide:lm,inject:LM};function lm(i,e){return e?i?function(){return mn(et(i)?i.call(this,this):i,et(e)?e.call(this,this):e)}:e:i}function LM(i,e){return sa(Kf(i),Kf(e))}function Kf(i){if(tt(i)){const e={};for(let t=0;t<i.length;t++)e[i[t]]=i[t];return e}return i}function yn(i,e){return i?[...new Set([].concat(i,e))]:e}function sa(i,e){return i?mn(Object.create(null),i,e):e}function cm(i,e){return i?tt(i)&&tt(e)?[...new Set([...i,...e])]:mn(Object.create(null),om(i),om(e??{})):e}function DM(i,e){if(!i)return e;if(!e)return i;const t=mn(Object.create(null),i);for(const n in e)t[n]=yn(i[n],e[n]);return t}function Y_(){return{app:null,config:{isNativeTag:mb,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let NM=0;function UM(i,e){return function(n,r=null){et(n)||(n=mn({},n)),r!=null&&!Ht(r)&&(r=null);const s=Y_(),o=new WeakSet,a=[];let l=!1;const c=s.app={_uid:NM++,_component:n,_props:r,_container:null,_context:s,_instance:null,version:pS,get config(){return s.config},set config(u){},use(u,...h){return o.has(u)||(u&&et(u.install)?(o.add(u),u.install(c,...h)):et(u)&&(o.add(u),u(c,...h))),c},mixin(u){return s.mixins.includes(u)||s.mixins.push(u),c},component(u,h){return h?(s.components[u]=h,c):s.components[u]},directive(u,h){return h?(s.directives[u]=h,c):s.directives[u]},mount(u,h,f){if(!l){const d=c._ceVNode||zt(n,r);return d.appContext=s,f===!0?f="svg":f===!1&&(f=void 0),i(d,u,f),l=!0,c._container=u,u.__vue_app__=c,$d(d.component)}},onUnmount(u){a.push(u)},unmount(){l&&(Ni(a,c._instance,16),i(null,c._container),delete c._container.__vue_app__)},provide(u,h){return s.provides[u]=h,c},runWithContext(u){const h=gs;gs=c;try{return u()}finally{gs=h}}};return c}}let gs=null;function Ir(i,e){if(Zt){let t=Zt.provides;const n=Zt.parent&&Zt.parent.provides;n===t&&(t=Zt.provides=Object.create(n)),t[i]=e}}function ti(i,e,t=!1){const n=Zt||sn;if(n||gs){const r=gs?gs._context.provides:n?n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:void 0;if(r&&i in r)return r[i];if(arguments.length>1)return t&&et(e)?e.call(n&&n.proxy):e}}function q_(){return!!(Zt||sn||gs)}const $_={},K_=()=>Object.create($_),Z_=i=>Object.getPrototypeOf(i)===$_;function OM(i,e,t,n=!1){const r={},s=K_();i.propsDefaults=Object.create(null),J_(i,e,r,s);for(const o in i.propsOptions[0])o in r||(r[o]=void 0);t?i.props=n?r:I_(r):i.type.props?i.props=r:i.props=s,i.attrs=s}function FM(i,e,t,n){const{props:r,attrs:s,vnode:{patchFlag:o}}=i,a=pt(r),[l]=i.propsOptions;let c=!1;if((n||o>0)&&!(o&16)){if(o&8){const u=i.vnode.dynamicProps;for(let h=0;h<u.length;h++){let f=u[h];if(Fu(i.emitsOptions,f))continue;const d=e[f];if(l)if(_t(s,f))d!==s[f]&&(s[f]=d,c=!0);else{const p=ii(f);r[p]=Zf(l,a,p,d,i,!1)}else d!==s[f]&&(s[f]=d,c=!0)}}}else{J_(i,e,r,s)&&(c=!0);let u;for(const h in a)(!e||!_t(e,h)&&((u=Os(h))===h||!_t(e,u)))&&(l?t&&(t[h]!==void 0||t[u]!==void 0)&&(r[h]=Zf(l,a,h,void 0,i,!0)):delete r[h]);if(s!==a)for(const h in s)(!e||!_t(e,h))&&(delete s[h],c=!0)}c&&Ji(i.attrs,"set","")}function J_(i,e,t,n){const[r,s]=i.propsOptions;let o=!1,a;if(e)for(let l in e){if(fa(l))continue;const c=e[l];let u;r&&_t(r,u=ii(l))?!s||!s.includes(u)?t[u]=c:(a||(a={}))[u]=c:Fu(i.emitsOptions,l)||(!(l in n)||c!==n[l])&&(n[l]=c,o=!0)}if(s){const l=pt(t),c=a||Et;for(let u=0;u<s.length;u++){const h=s[u];t[h]=Zf(r,l,h,c[h],i,!_t(c,h))}}return o}function Zf(i,e,t,n,r,s){const o=i[t];if(o!=null){const a=_t(o,"default");if(a&&n===void 0){const l=o.default;if(o.type!==Function&&!o.skipFactory&&et(l)){const{propsDefaults:c}=r;if(t in c)n=c[t];else{const u=el(r);n=c[t]=l.call(null,e),u()}}else n=l;r.ce&&r.ce._setProp(t,n)}o[0]&&(s&&!a?n=!1:o[1]&&(n===""||n===Os(t))&&(n=!0))}return n}const BM=new WeakMap;function Q_(i,e,t=!1){const n=t?BM:e.propsCache,r=n.get(i);if(r)return r;const s=i.props,o={},a=[];let l=!1;if(!et(i)){const u=h=>{l=!0;const[f,d]=Q_(h,e,!0);mn(o,f),d&&a.push(...d)};!t&&e.mixins.length&&e.mixins.forEach(u),i.extends&&u(i.extends),i.mixins&&i.mixins.forEach(u)}if(!s&&!l)return Ht(i)&&n.set(i,fo),fo;if(tt(s))for(let u=0;u<s.length;u++){const h=ii(s[u]);um(h)&&(o[h]=Et)}else if(s)for(const u in s){const h=ii(u);if(um(h)){const f=s[u],d=o[h]=tt(f)||et(f)?{type:f}:mn({},f),p=d.type;let v=!1,m=!0;if(tt(p))for(let g=0;g<p.length;++g){const M=p[g],b=et(M)&&M.name;if(b==="Boolean"){v=!0;break}else b==="String"&&(m=!1)}else v=et(p)&&p.name==="Boolean";d[0]=v,d[1]=m,(v||_t(d,"default"))&&a.push(h)}}const c=[o,a];return Ht(i)&&n.set(i,c),c}function um(i){return i[0]!=="$"&&!fa(i)}const e0=i=>i[0]==="_"||i==="$stable",jd=i=>tt(i)?i.map(Ci):[Ci(i)],zM=(i,e,t)=>{if(e._n)return e;const n=B_((...r)=>jd(e(...r)),t);return n._c=!1,n},t0=(i,e,t)=>{const n=i._ctx;for(const r in i){if(e0(r))continue;const s=i[r];if(et(s))e[r]=zM(r,s,n);else if(s!=null){const o=jd(s);e[r]=()=>o}}},n0=(i,e)=>{const t=jd(e);i.slots.default=()=>t},i0=(i,e,t)=>{for(const n in e)(t||n!=="_")&&(i[n]=e[n])},kM=(i,e,t)=>{const n=i.slots=K_();if(i.vnode.shapeFlag&32){const r=e._;r?(i0(n,e,t),t&&f_(n,"_",r,!0)):t0(e,n)}else e&&n0(i,e)},VM=(i,e,t)=>{const{vnode:n,slots:r}=i;let s=!0,o=Et;if(n.shapeFlag&32){const a=e._;a?t&&a===1?s=!1:i0(r,e,t):(s=!e.$stable,t0(e,r)),o=e}else e&&(n0(i,e),o={default:1});if(s)for(const a in r)!e0(a)&&o[a]==null&&delete r[a]},Vn=eS;function r0(i){return HM(i)}function HM(i,e){const t=Iu();t.__VUE__=!0;const{insert:n,remove:r,patchProp:s,createElement:o,createText:a,createComment:l,setText:c,setElementText:u,parentNode:h,nextSibling:f,setScopeId:d=Li,insertStaticContent:p}=i,v=(D,L,T,H=null,W=null,j=null,Y=void 0,re=null,Q=!!L.dynamicChildren)=>{if(D===L)return;D&&!Ho(D,L)&&(H=Z(D),ye(D,W,j,!0),D=null),L.patchFlag===-2&&(Q=!1,L.dynamicChildren=null);const{type:P,ref:R,shapeFlag:k}=L;switch(P){case Bu:m(D,L,T,H);break;case Lr:g(D,L,T,H);break;case Nh:D==null&&M(L,T,H,Y);break;case Tn:N(D,L,T,H,W,j,Y,re,Q);break;default:k&1?C(D,L,T,H,W,j,Y,re,Q):k&6?B(D,L,T,H,W,j,Y,re,Q):(k&64||k&128)&&P.process(D,L,T,H,W,j,Y,re,Q,U)}R!=null&&W&&Lc(R,D&&D.ref,j,L||D,!L)},m=(D,L,T,H)=>{if(D==null)n(L.el=a(L.children),T,H);else{const W=L.el=D.el;L.children!==D.children&&c(W,L.children)}},g=(D,L,T,H)=>{D==null?n(L.el=l(L.children||""),T,H):L.el=D.el},M=(D,L,T,H)=>{[D.el,D.anchor]=p(D.children,L,T,H,D.el,D.anchor)},b=({el:D,anchor:L},T,H)=>{let W;for(;D&&D!==L;)W=f(D),n(D,T,H),D=W;n(L,T,H)},y=({el:D,anchor:L})=>{let T;for(;D&&D!==L;)T=f(D),r(D),D=T;r(L)},C=(D,L,T,H,W,j,Y,re,Q)=>{L.type==="svg"?Y="svg":L.type==="math"&&(Y="mathml"),D==null?w(L,T,H,W,j,Y,re,Q):x(D,L,W,j,Y,re,Q)},w=(D,L,T,H,W,j,Y,re)=>{let Q,P;const{props:R,shapeFlag:k,transition:ee,dirs:ae}=D;if(Q=D.el=o(D.type,j,R&&R.is,R),k&8?u(Q,D.children):k&16&&S(D.children,Q,null,H,W,Dh(D,j),Y,re),ae&&Wr(D,null,H,"created"),E(Q,D,D.scopeId,Y,H),R){for(const Me in R)Me!=="value"&&!fa(Me)&&s(Q,Me,null,R[Me],j,H);"value"in R&&s(Q,"value",null,R.value,j),(P=R.onVnodeBeforeMount)&&wi(P,H,D)}ae&&Wr(D,null,H,"beforeMount");const se=GM(W,ee);se&&ee.beforeEnter(Q),n(Q,L,T),((P=R&&R.onVnodeMounted)||se||ae)&&Vn(()=>{P&&wi(P,H,D),se&&ee.enter(Q),ae&&Wr(D,null,H,"mounted")},W)},E=(D,L,T,H,W)=>{if(T&&d(D,T),H)for(let j=0;j<H.length;j++)d(D,H[j]);if(W){let j=W.subTree;if(L===j||c0(j.type)&&(j.ssContent===L||j.ssFallback===L)){const Y=W.vnode;E(D,Y,Y.scopeId,Y.slotScopeIds,W.parent)}}},S=(D,L,T,H,W,j,Y,re,Q=0)=>{for(let P=Q;P<D.length;P++){const R=D[P]=re?Mr(D[P]):Ci(D[P]);v(null,R,L,T,H,W,j,Y,re)}},x=(D,L,T,H,W,j,Y)=>{const re=L.el=D.el;let{patchFlag:Q,dynamicChildren:P,dirs:R}=L;Q|=D.patchFlag&16;const k=D.props||Et,ee=L.props||Et;let ae;if(T&&Xr(T,!1),(ae=ee.onVnodeBeforeUpdate)&&wi(ae,T,L,D),R&&Wr(L,D,T,"beforeUpdate"),T&&Xr(T,!0),(k.innerHTML&&ee.innerHTML==null||k.textContent&&ee.textContent==null)&&u(re,""),P?_(D.dynamicChildren,P,re,T,H,Dh(L,W),j):Y||J(D,L,re,null,T,H,Dh(L,W),j,!1),Q>0){if(Q&16)A(re,k,ee,T,W);else if(Q&2&&k.class!==ee.class&&s(re,"class",null,ee.class,W),Q&4&&s(re,"style",k.style,ee.style,W),Q&8){const se=L.dynamicProps;for(let Me=0;Me<se.length;Me++){const _e=se[Me],Ie=k[_e],Ue=ee[_e];(Ue!==Ie||_e==="value")&&s(re,_e,Ie,Ue,W,T)}}Q&1&&D.children!==L.children&&u(re,L.children)}else!Y&&P==null&&A(re,k,ee,T,W);((ae=ee.onVnodeUpdated)||R)&&Vn(()=>{ae&&wi(ae,T,L,D),R&&Wr(L,D,T,"updated")},H)},_=(D,L,T,H,W,j,Y)=>{for(let re=0;re<L.length;re++){const Q=D[re],P=L[re],R=Q.el&&(Q.type===Tn||!Ho(Q,P)||Q.shapeFlag&70)?h(Q.el):T;v(Q,P,R,null,H,W,j,Y,!0)}},A=(D,L,T,H,W)=>{if(L!==T){if(L!==Et)for(const j in L)!fa(j)&&!(j in T)&&s(D,j,L[j],null,W,H);for(const j in T){if(fa(j))continue;const Y=T[j],re=L[j];Y!==re&&j!=="value"&&s(D,j,re,Y,W,H)}"value"in T&&s(D,"value",L.value,T.value,W)}},N=(D,L,T,H,W,j,Y,re,Q)=>{const P=L.el=D?D.el:a(""),R=L.anchor=D?D.anchor:a("");let{patchFlag:k,dynamicChildren:ee,slotScopeIds:ae}=L;ae&&(re=re?re.concat(ae):ae),D==null?(n(P,T,H),n(R,T,H),S(L.children||[],T,R,W,j,Y,re,Q)):k>0&&k&64&&ee&&D.dynamicChildren?(_(D.dynamicChildren,ee,T,W,j,Y,re),(L.key!=null||W&&L===W.subTree)&&s0(D,L,!0)):J(D,L,T,R,W,j,Y,re,Q)},B=(D,L,T,H,W,j,Y,re,Q)=>{L.slotScopeIds=re,D==null?L.shapeFlag&512?W.ctx.activate(L,T,H,Y,Q):V(L,T,H,W,j,Y,Q):X(D,L,Q)},V=(D,L,T,H,W,j,Y)=>{const re=D.component=lS(D,H,W);if(k_(D)&&(re.ctx.renderer=U),cS(re,!1,Y),re.asyncDep){if(W&&W.registerDep(re,z,Y),!D.el){const Q=re.subTree=zt(Lr);g(null,Q,L,T)}}else z(re,D,L,T,W,j,Y)},X=(D,L,T)=>{const H=L.component=D.component;if(JM(D,L,T))if(H.asyncDep&&!H.asyncResolved){te(H,L,T);return}else H.next=L,H.update();else L.el=D.el,H.vnode=L},z=(D,L,T,H,W,j,Y)=>{const re=()=>{if(D.isMounted){let{next:k,bu:ee,u:ae,parent:se,vnode:Me}=D;{const Re=o0(D);if(Re){k&&(k.el=Me.el,te(D,k,Y)),Re.asyncDep.then(()=>{D.isUnmounted||re()});return}}let _e=k,Ie;Xr(D,!1),k?(k.el=Me.el,te(D,k,Y)):k=Me,ee&&Rh(ee),(Ie=k.props&&k.props.onVnodeBeforeUpdate)&&wi(Ie,se,k,Me),Xr(D,!0);const Ue=fm(D),xe=D.subTree;D.subTree=Ue,v(xe,Ue,h(xe.el),Z(xe),D,W,j),k.el=Ue.el,_e===null&&QM(D,Ue.el),ae&&Vn(ae,W),(Ie=k.props&&k.props.onVnodeUpdated)&&Vn(()=>wi(Ie,se,k,Me),W)}else{let k;const{el:ee,props:ae}=L,{bm:se,m:Me,parent:_e,root:Ie,type:Ue}=D,xe=mo(L);Xr(D,!1),se&&Rh(se),!xe&&(k=ae&&ae.onVnodeBeforeMount)&&wi(k,_e,L),Xr(D,!0);{Ie.ce&&Ie.ce._injectChildStyle(Ue);const Re=D.subTree=fm(D);v(null,Re,T,H,D,W,j),L.el=Re.el}if(Me&&Vn(Me,W),!xe&&(k=ae&&ae.onVnodeMounted)){const Re=L;Vn(()=>wi(k,_e,Re),W)}(L.shapeFlag&256||_e&&mo(_e.vnode)&&_e.vnode.shapeFlag&256)&&D.a&&Vn(D.a,W),D.isMounted=!0,L=T=H=null}};D.scope.on();const Q=D.effect=new g_(re);D.scope.off();const P=D.update=Q.run.bind(Q),R=D.job=Q.runIfDirty.bind(Q);R.i=D,R.id=D.uid,Q.scheduler=()=>Wd(R),Xr(D,!0),P()},te=(D,L,T)=>{L.component=D;const H=D.vnode.props;D.vnode=L,D.next=null,FM(D,L.props,H,T),VM(D,L.children,T),Ur(),rm(D),Or()},J=(D,L,T,H,W,j,Y,re,Q=!1)=>{const P=D&&D.children,R=D?D.shapeFlag:0,k=L.children,{patchFlag:ee,shapeFlag:ae}=L;if(ee>0){if(ee&128){de(P,k,T,H,W,j,Y,re,Q);return}else if(ee&256){ue(P,k,T,H,W,j,Y,re,Q);return}}ae&8?(R&16&&be(P,W,j),k!==P&&u(T,k)):R&16?ae&16?de(P,k,T,H,W,j,Y,re,Q):be(P,W,j,!0):(R&8&&u(T,""),ae&16&&S(k,T,H,W,j,Y,re,Q))},ue=(D,L,T,H,W,j,Y,re,Q)=>{D=D||fo,L=L||fo;const P=D.length,R=L.length,k=Math.min(P,R);let ee;for(ee=0;ee<k;ee++){const ae=L[ee]=Q?Mr(L[ee]):Ci(L[ee]);v(D[ee],ae,T,null,W,j,Y,re,Q)}P>R?be(D,W,j,!0,!1,k):S(L,T,H,W,j,Y,re,Q,k)},de=(D,L,T,H,W,j,Y,re,Q)=>{let P=0;const R=L.length;let k=D.length-1,ee=R-1;for(;P<=k&&P<=ee;){const ae=D[P],se=L[P]=Q?Mr(L[P]):Ci(L[P]);if(Ho(ae,se))v(ae,se,T,null,W,j,Y,re,Q);else break;P++}for(;P<=k&&P<=ee;){const ae=D[k],se=L[ee]=Q?Mr(L[ee]):Ci(L[ee]);if(Ho(ae,se))v(ae,se,T,null,W,j,Y,re,Q);else break;k--,ee--}if(P>k){if(P<=ee){const ae=ee+1,se=ae<R?L[ae].el:H;for(;P<=ee;)v(null,L[P]=Q?Mr(L[P]):Ci(L[P]),T,se,W,j,Y,re,Q),P++}}else if(P>ee)for(;P<=k;)ye(D[P],W,j,!0),P++;else{const ae=P,se=P,Me=new Map;for(P=se;P<=ee;P++){const Ee=L[P]=Q?Mr(L[P]):Ci(L[P]);Ee.key!=null&&Me.set(Ee.key,P)}let _e,Ie=0;const Ue=ee-se+1;let xe=!1,Re=0;const ze=new Array(Ue);for(P=0;P<Ue;P++)ze[P]=0;for(P=ae;P<=k;P++){const Ee=D[P];if(Ie>=Ue){ye(Ee,W,j,!0);continue}let q;if(Ee.key!=null)q=Me.get(Ee.key);else for(_e=se;_e<=ee;_e++)if(ze[_e-se]===0&&Ho(Ee,L[_e])){q=_e;break}q===void 0?ye(Ee,W,j,!0):(ze[q-se]=P+1,q>=Re?Re=q:xe=!0,v(Ee,L[q],T,null,W,j,Y,re,Q),Ie++)}const We=xe?WM(ze):fo;for(_e=We.length-1,P=Ue-1;P>=0;P--){const Ee=se+P,q=L[Ee],me=Ee+1<R?L[Ee+1].el:H;ze[P]===0?v(null,q,T,me,W,j,Y,re,Q):xe&&(_e<0||P!==We[_e]?oe(q,T,me,2):_e--)}}},oe=(D,L,T,H,W=null)=>{const{el:j,type:Y,transition:re,children:Q,shapeFlag:P}=D;if(P&6){oe(D.component.subTree,L,T,H);return}if(P&128){D.suspense.move(L,T,H);return}if(P&64){Y.move(D,L,T,U);return}if(Y===Tn){n(j,L,T);for(let k=0;k<Q.length;k++)oe(Q[k],L,T,H);n(D.anchor,L,T);return}if(Y===Nh){b(D,L,T);return}if(H!==2&&P&1&&re)if(H===0)re.beforeEnter(j),n(j,L,T),Vn(()=>re.enter(j),W);else{const{leave:k,delayLeave:ee,afterLeave:ae}=re,se=()=>n(j,L,T),Me=()=>{k(j,()=>{se(),ae&&ae()})};ee?ee(j,se,Me):Me()}else n(j,L,T)},ye=(D,L,T,H=!1,W=!1)=>{const{type:j,props:Y,ref:re,children:Q,dynamicChildren:P,shapeFlag:R,patchFlag:k,dirs:ee,cacheIndex:ae}=D;if(k===-2&&(W=!1),re!=null&&Lc(re,null,T,D,!0),ae!=null&&(L.renderCache[ae]=void 0),R&256){L.ctx.deactivate(D);return}const se=R&1&&ee,Me=!mo(D);let _e;if(Me&&(_e=Y&&Y.onVnodeBeforeUnmount)&&wi(_e,L,D),R&6)ge(D.component,T,H);else{if(R&128){D.suspense.unmount(T,H);return}se&&Wr(D,null,L,"beforeUnmount"),R&64?D.type.remove(D,L,T,U,H):P&&!P.hasOnce&&(j!==Tn||k>0&&k&64)?be(P,L,T,!1,!0):(j===Tn&&k&384||!W&&R&16)&&be(Q,L,T),H&&Ce(D)}(Me&&(_e=Y&&Y.onVnodeUnmounted)||se)&&Vn(()=>{_e&&wi(_e,L,D),se&&Wr(D,null,L,"unmounted")},T)},Ce=D=>{const{type:L,el:T,anchor:H,transition:W}=D;if(L===Tn){le(T,H);return}if(L===Nh){y(D);return}const j=()=>{r(T),W&&!W.persisted&&W.afterLeave&&W.afterLeave()};if(D.shapeFlag&1&&W&&!W.persisted){const{leave:Y,delayLeave:re}=W,Q=()=>Y(T,j);re?re(D.el,j,Q):Q()}else j()},le=(D,L)=>{let T;for(;D!==L;)T=f(D),r(D),D=T;r(L)},ge=(D,L,T)=>{const{bum:H,scope:W,job:j,subTree:Y,um:re,m:Q,a:P}=D;hm(Q),hm(P),H&&Rh(H),W.stop(),j&&(j.flags|=8,ye(Y,D,L,T)),re&&Vn(re,L),Vn(()=>{D.isUnmounted=!0},L),L&&L.pendingBranch&&!L.isUnmounted&&D.asyncDep&&!D.asyncResolved&&D.suspenseId===L.pendingId&&(L.deps--,L.deps===0&&L.resolve())},be=(D,L,T,H=!1,W=!1,j=0)=>{for(let Y=j;Y<D.length;Y++)ye(D[Y],L,T,H,W)},Z=D=>{if(D.shapeFlag&6)return Z(D.component.subTree);if(D.shapeFlag&128)return D.suspense.next();const L=f(D.anchor||D.el),T=L&&L[cM];return T?f(T):L};let K=!1;const I=(D,L,T)=>{D==null?L._vnode&&ye(L._vnode,null,null,!0):v(L._vnode||null,D,L,null,null,null,T),L._vnode=D,K||(K=!0,rm(),U_(),K=!1)},U={p:v,um:ye,m:oe,r:Ce,mt:V,mc:S,pc:J,pbc:_,n:Z,o:i};return{render:I,hydrate:void 0,createApp:UM(I)}}function Dh({type:i,props:e},t){return t==="svg"&&i==="foreignObject"||t==="mathml"&&i==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function Xr({effect:i,job:e},t){t?(i.flags|=32,e.flags|=4):(i.flags&=-33,e.flags&=-5)}function GM(i,e){return(!i||i&&!i.pendingBranch)&&e&&!e.persisted}function s0(i,e,t=!1){const n=i.children,r=e.children;if(tt(n)&&tt(r))for(let s=0;s<n.length;s++){const o=n[s];let a=r[s];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=r[s]=Mr(r[s]),a.el=o.el),!t&&a.patchFlag!==-2&&s0(o,a)),a.type===Bu&&(a.el=o.el)}}function WM(i){const e=i.slice(),t=[0];let n,r,s,o,a;const l=i.length;for(n=0;n<l;n++){const c=i[n];if(c!==0){if(r=t[t.length-1],i[r]<c){e[n]=r,t.push(n);continue}for(s=0,o=t.length-1;s<o;)a=s+o>>1,i[t[a]]<c?s=a+1:o=a;c<i[t[s]]&&(s>0&&(e[n]=t[s-1]),t[s]=n)}}for(s=t.length,o=t[s-1];s-- >0;)t[s]=o,o=e[o];return t}function o0(i){const e=i.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:o0(e)}function hm(i){if(i)for(let e=0;e<i.length;e++)i[e].flags|=8}const XM=Symbol.for("v-scx"),jM=()=>ti(XM);function Lo(i,e){return Yd(i,null,e)}function Vt(i,e,t){return Yd(i,e,t)}function Yd(i,e,t=Et){const{immediate:n,deep:r,flush:s,once:o}=t,a=mn({},t),l=e&&n||!e&&s!=="post";let c;if(Ba){if(s==="sync"){const d=jM();c=d.__watcherHandles||(d.__watcherHandles=[])}else if(!l){const d=()=>{};return d.stop=Li,d.resume=Li,d.pause=Li,d}}const u=Zt;a.call=(d,p,v)=>Ni(d,u,p,v);let h=!1;s==="post"?a.scheduler=d=>{Vn(d,u&&u.suspense)}:s!=="sync"&&(h=!0,a.scheduler=(d,p)=>{p?d():Wd(d)}),a.augmentJob=d=>{e&&(d.flags|=4),h&&(d.flags|=2,u&&(d.id=u.uid,d.i=u))};const f=sM(i,e,a);return Ba&&(c?c.push(f):l&&f()),f}function YM(i,e,t){const n=this.proxy,r=tn(i)?i.includes(".")?a0(n,i):()=>n[i]:i.bind(n,n);let s;et(e)?s=e:(s=e.handler,t=e);const o=el(this),a=Yd(r,s.bind(n),t);return o(),a}function a0(i,e){const t=e.split(".");return()=>{let n=i;for(let r=0;r<t.length&&n;r++)n=n[t[r]];return n}}const qM=(i,e)=>e==="modelValue"||e==="model-value"?i.modelModifiers:i[`${e}Modifiers`]||i[`${ii(e)}Modifiers`]||i[`${Os(e)}Modifiers`];function $M(i,e,...t){if(i.isUnmounted)return;const n=i.vnode.props||Et;let r=t;const s=e.startsWith("update:"),o=s&&qM(n,e.slice(7));o&&(o.trim&&(r=t.map(u=>tn(u)?u.trim():u)),o.number&&(r=t.map(Sb)));let a,l=n[a=Ah(e)]||n[a=Ah(ii(e))];!l&&s&&(l=n[a=Ah(Os(e))]),l&&Ni(l,i,6,r);const c=n[a+"Once"];if(c){if(!i.emitted)i.emitted={};else if(i.emitted[a])return;i.emitted[a]=!0,Ni(c,i,6,r)}}function l0(i,e,t=!1){const n=e.emitsCache,r=n.get(i);if(r!==void 0)return r;const s=i.emits;let o={},a=!1;if(!et(i)){const l=c=>{const u=l0(c,e,!0);u&&(a=!0,mn(o,u))};!t&&e.mixins.length&&e.mixins.forEach(l),i.extends&&l(i.extends),i.mixins&&i.mixins.forEach(l)}return!s&&!a?(Ht(i)&&n.set(i,null),null):(tt(s)?s.forEach(l=>o[l]=null):mn(o,s),Ht(i)&&n.set(i,o),o)}function Fu(i,e){return!i||!Eu(e)?!1:(e=e.slice(2).replace(/Once$/,""),_t(i,e[0].toLowerCase()+e.slice(1))||_t(i,Os(e))||_t(i,e))}function fm(i){const{type:e,vnode:t,proxy:n,withProxy:r,propsOptions:[s],slots:o,attrs:a,emit:l,render:c,renderCache:u,props:h,data:f,setupState:d,ctx:p,inheritAttrs:v}=i,m=Pc(i);let g,M;try{if(t.shapeFlag&4){const y=r||n,C=y;g=Ci(c.call(C,y,u,h,d,f,p)),M=a}else{const y=e;g=Ci(y.length>1?y(h,{attrs:a,slots:o,emit:l}):y(h,null)),M=e.props?a:KM(a)}}catch(y){va.length=0,Uu(y,i,1),g=zt(Lr)}let b=g;if(M&&v!==!1){const y=Object.keys(M),{shapeFlag:C}=b;y.length&&C&7&&(s&&y.some(Pd)&&(M=ZM(M,s)),b=_o(b,M,!1,!0))}return t.dirs&&(b=_o(b,null,!1,!0),b.dirs=b.dirs?b.dirs.concat(t.dirs):t.dirs),t.transition&&Xd(b,t.transition),g=b,Pc(m),g}const KM=i=>{let e;for(const t in i)(t==="class"||t==="style"||Eu(t))&&((e||(e={}))[t]=i[t]);return e},ZM=(i,e)=>{const t={};for(const n in i)(!Pd(n)||!(n.slice(9)in e))&&(t[n]=i[n]);return t};function JM(i,e,t){const{props:n,children:r,component:s}=i,{props:o,children:a,patchFlag:l}=e,c=s.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return n?dm(n,o,c):!!o;if(l&8){const u=e.dynamicProps;for(let h=0;h<u.length;h++){const f=u[h];if(o[f]!==n[f]&&!Fu(c,f))return!0}}}else return(r||a)&&(!a||!a.$stable)?!0:n===o?!1:n?o?dm(n,o,c):!0:!!o;return!1}function dm(i,e,t){const n=Object.keys(e);if(n.length!==Object.keys(i).length)return!0;for(let r=0;r<n.length;r++){const s=n[r];if(e[s]!==i[s]&&!Fu(t,s))return!0}return!1}function QM({vnode:i,parent:e},t){for(;e;){const n=e.subTree;if(n.suspense&&n.suspense.activeBranch===i&&(n.el=i.el),n===i)(i=e.vnode).el=t,e=e.parent;else break}}const c0=i=>i.__isSuspense;function eS(i,e){e&&e.pendingBranch?tt(i)?e.effects.push(...i):e.effects.push(i):lM(i)}const Tn=Symbol.for("v-fgt"),Bu=Symbol.for("v-txt"),Lr=Symbol.for("v-cmt"),Nh=Symbol.for("v-stc"),va=[];let Gn=null;function dn(i=!1){va.push(Gn=i?null:[])}function tS(){va.pop(),Gn=va[va.length-1]||null}let Ua=1;function pm(i,e=!1){Ua+=i,i<0&&Gn&&e&&(Gn.hasOnce=!0)}function u0(i){return i.dynamicChildren=Ua>0?Gn||fo:null,tS(),Ua>0&&Gn&&Gn.push(i),i}function ui(i,e,t,n,r,s){return u0(Wn(i,e,t,n,r,s,!0))}function Oa(i,e,t,n,r){return u0(zt(i,e,t,n,r,!0))}function Fa(i){return i?i.__v_isVNode===!0:!1}function Ho(i,e){return i.type===e.type&&i.key===e.key}const h0=({key:i})=>i??null,xc=({ref:i,ref_key:e,ref_for:t})=>(typeof i=="number"&&(i=""+i),i!=null?tn(i)||kt(i)||et(i)?{i:sn,r:i,k:e,f:!!t}:i:null);function Wn(i,e=null,t=null,n=0,r=null,s=i===Tn?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:i,props:e,key:e&&h0(e),ref:e&&xc(e),scopeId:F_,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:n,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:sn};return a?(qd(l,t),s&128&&i.normalize(l)):t&&(l.shapeFlag|=tn(t)?8:16),Ua>0&&!o&&Gn&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&Gn.push(l),l}const zt=nS;function nS(i,e=null,t=null,n=0,r=null,s=!1){if((!i||i===wM)&&(i=Lr),Fa(i)){const a=_o(i,e,!0);return t&&qd(a,t),Ua>0&&!s&&Gn&&(a.shapeFlag&6?Gn[Gn.indexOf(i)]=a:Gn.push(a)),a.patchFlag=-2,a}if(dS(i)&&(i=i.__vccOpts),e){e=iS(e);let{class:a,style:l}=e;a&&!tn(a)&&(e.class=Lu(a)),Ht(l)&&(Vd(l)&&!tt(l)&&(l=mn({},l)),e.style=Pu(l))}const o=tn(i)?1:c0(i)?128:uM(i)?64:Ht(i)?4:et(i)?2:0;return Wn(i,e,t,n,r,o,s,!0)}function iS(i){return i?Vd(i)||Z_(i)?mn({},i):i:null}function _o(i,e,t=!1,n=!1){const{props:r,ref:s,patchFlag:o,children:a,transition:l}=i,c=e?sS(r||{},e):r,u={__v_isVNode:!0,__v_skip:!0,type:i.type,props:c,key:c&&h0(c),ref:e&&e.ref?t&&s?tt(s)?s.concat(xc(e)):[s,xc(e)]:xc(e):s,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:a,target:i.target,targetStart:i.targetStart,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:e&&i.type!==Tn?o===-1?16:o|16:o,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:l,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&_o(i.ssContent),ssFallback:i.ssFallback&&_o(i.ssFallback),el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce};return l&&n&&Xd(u,l.clone(u)),u}function rS(i=" ",e=0){return zt(Bu,null,i,e)}function f0(i="",e=!1){return e?(dn(),Oa(Lr,null,i)):zt(Lr,null,i)}function Ci(i){return i==null||typeof i=="boolean"?zt(Lr):tt(i)?zt(Tn,null,i.slice()):Fa(i)?Mr(i):zt(Bu,null,String(i))}function Mr(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:_o(i)}function qd(i,e){let t=0;const{shapeFlag:n}=i;if(e==null)e=null;else if(tt(e))t=16;else if(typeof e=="object")if(n&65){const r=e.default;r&&(r._c&&(r._d=!1),qd(i,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!Z_(e)?e._ctx=sn:r===3&&sn&&(sn.slots._===1?e._=1:(e._=2,i.patchFlag|=1024))}else et(e)?(e={default:e,_ctx:sn},t=32):(e=String(e),n&64?(t=16,e=[rS(e)]):t=8);i.children=e,i.shapeFlag|=t}function sS(...i){const e={};for(let t=0;t<i.length;t++){const n=i[t];for(const r in n)if(r==="class")e.class!==n.class&&(e.class=Lu([e.class,n.class]));else if(r==="style")e.style=Pu([e.style,n.style]);else if(Eu(r)){const s=e[r],o=n[r];o&&s!==o&&!(tt(s)&&s.includes(o))&&(e[r]=s?[].concat(s,o):o)}else r!==""&&(e[r]=n[r])}return e}function wi(i,e,t,n=null){Ni(i,e,7,[t,n])}const oS=Y_();let aS=0;function lS(i,e,t){const n=i.type,r=(e?e.appContext:i.appContext)||oS,s={uid:aS++,vnode:i,type:n,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new p_(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Q_(n,r),emitsOptions:l0(n,r),emit:null,emitted:null,propsDefaults:Et,inheritAttrs:n.inheritAttrs,ctx:Et,data:Et,props:Et,attrs:Et,slots:Et,refs:Et,setupState:Et,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=e?e.root:s,s.emit=$M.bind(null,s),i.ce&&i.ce(s),s}let Zt=null;const xo=()=>Zt||sn;let Nc,Jf;{const i=Iu(),e=(t,n)=>{let r;return(r=i[t])||(r=i[t]=[]),r.push(n),s=>{r.length>1?r.forEach(o=>o(s)):r[0](s)}};Nc=e("__VUE_INSTANCE_SETTERS__",t=>Zt=t),Jf=e("__VUE_SSR_SETTERS__",t=>Ba=t)}const el=i=>{const e=Zt;return Nc(i),i.scope.on(),()=>{i.scope.off(),Nc(e)}},mm=()=>{Zt&&Zt.scope.off(),Nc(null)};function d0(i){return i.vnode.shapeFlag&4}let Ba=!1;function cS(i,e=!1,t=!1){e&&Jf(e);const{props:n,children:r}=i.vnode,s=d0(i);OM(i,n,s,e),kM(i,r,t);const o=s?uS(i,e):void 0;return e&&Jf(!1),o}function uS(i,e){const t=i.type;i.accessCache=Object.create(null),i.proxy=new Proxy(i.ctx,AM);const{setup:n}=t;if(n){Ur();const r=i.setupContext=n.length>1?m0(i):null,s=el(i),o=Ja(n,i,0,[i.props,r]),a=h_(o);if(Or(),s(),(a||i.sp)&&!mo(i)&&z_(i),a){if(o.then(mm,mm),e)return o.then(l=>{gm(i,l)}).catch(l=>{Uu(l,i,0)});i.asyncDep=o}else gm(i,o)}else p0(i)}function gm(i,e,t){et(e)?i.type.__ssrInlineRender?i.ssrRender=e:i.render=e:Ht(e)&&(i.setupState=L_(e)),p0(i)}function p0(i,e,t){const n=i.type;i.render||(i.render=n.render||Li);{const r=el(i);Ur();try{CM(i)}finally{Or(),r()}}}const hS={get(i,e){return fn(i,"get",""),i[e]}};function m0(i){const e=t=>{i.exposed=t||{}};return{attrs:new Proxy(i.attrs,hS),slots:i.slots,emit:i.emit,expose:e}}function $d(i){return i.exposed?i.exposeProxy||(i.exposeProxy=new Proxy(L_(Hd(i.exposed)),{get(e,t){if(t in e)return e[t];if(t in ga)return ga[t](i)},has(e,t){return t in e||t in ga}})):i.proxy}function fS(i,e=!0){return et(i)?i.displayName||i.name:i.name||e&&i.__name}function dS(i){return et(i)&&"__vccOpts"in i}const xt=(i,e)=>iM(i,e,Ba);function Uc(i,e,t){const n=arguments.length;return n===2?Ht(e)&&!tt(e)?Fa(e)?zt(i,null,[e]):zt(i,e):zt(i,null,e):(n>3?t=Array.prototype.slice.call(arguments,2):n===3&&Fa(t)&&(t=[t]),zt(i,e,t))}const pS="3.5.13";/**
* @vue/runtime-dom v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Qf;const vm=typeof window<"u"&&window.trustedTypes;if(vm)try{Qf=vm.createPolicy("vue",{createHTML:i=>i})}catch{}const g0=Qf?i=>Qf.createHTML(i):i=>i,mS="http://www.w3.org/2000/svg",gS="http://www.w3.org/1998/Math/MathML",$i=typeof document<"u"?document:null,_m=$i&&$i.createElement("template"),vS={insert:(i,e,t)=>{e.insertBefore(i,t||null)},remove:i=>{const e=i.parentNode;e&&e.removeChild(i)},createElement:(i,e,t,n)=>{const r=e==="svg"?$i.createElementNS(mS,i):e==="mathml"?$i.createElementNS(gS,i):t?$i.createElement(i,{is:t}):$i.createElement(i);return i==="select"&&n&&n.multiple!=null&&r.setAttribute("multiple",n.multiple),r},createText:i=>$i.createTextNode(i),createComment:i=>$i.createComment(i),setText:(i,e)=>{i.nodeValue=e},setElementText:(i,e)=>{i.textContent=e},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,querySelector:i=>$i.querySelector(i),setScopeId(i,e){i.setAttribute(e,"")},insertStaticContent(i,e,t,n,r,s){const o=t?t.previousSibling:e.lastChild;if(r&&(r===s||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===s||!(r=r.nextSibling)););else{_m.innerHTML=g0(n==="svg"?`<svg>${i}</svg>`:n==="mathml"?`<math>${i}</math>`:i);const a=_m.content;if(n==="svg"||n==="mathml"){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,t)}return[o?o.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},_S=Symbol("_vtc");function xS(i,e,t){const n=i[_S];n&&(e=(e?[e,...n]:[...n]).join(" ")),e==null?i.removeAttribute("class"):t?i.setAttribute("class",e):i.className=e}const xm=Symbol("_vod"),yS=Symbol("_vsh"),bS=Symbol(""),MS=/(^|;)\s*display\s*:/;function SS(i,e,t){const n=i.style,r=tn(t);let s=!1;if(t&&!r){if(e)if(tn(e))for(const o of e.split(";")){const a=o.slice(0,o.indexOf(":")).trim();t[a]==null&&yc(n,a,"")}else for(const o in e)t[o]==null&&yc(n,o,"");for(const o in t)o==="display"&&(s=!0),yc(n,o,t[o])}else if(r){if(e!==t){const o=n[bS];o&&(t+=";"+o),n.cssText=t,s=MS.test(t)}}else e&&i.removeAttribute("style");xm in i&&(i[xm]=s?n.display:"",i[yS]&&(n.display="none"))}const ym=/\s*!important$/;function yc(i,e,t){if(tt(t))t.forEach(n=>yc(i,e,n));else if(t==null&&(t=""),e.startsWith("--"))i.setProperty(e,t);else{const n=wS(i,e);ym.test(t)?i.setProperty(Os(n),t.replace(ym,""),"important"):i[n]=t}}const bm=["Webkit","Moz","ms"],Uh={};function wS(i,e){const t=Uh[e];if(t)return t;let n=ii(e);if(n!=="filter"&&n in i)return Uh[e]=n;n=Cu(n);for(let r=0;r<bm.length;r++){const s=bm[r]+n;if(s in i)return Uh[e]=s}return e}const Mm="http://www.w3.org/1999/xlink";function Sm(i,e,t,n,r,s=Cb(e)){n&&e.startsWith("xlink:")?t==null?i.removeAttributeNS(Mm,e.slice(6,e.length)):i.setAttributeNS(Mm,e,t):t==null||s&&!d_(t)?i.removeAttribute(e):i.setAttribute(e,s?"":Us(t)?String(t):t)}function wm(i,e,t,n,r){if(e==="innerHTML"||e==="textContent"){t!=null&&(i[e]=e==="innerHTML"?g0(t):t);return}const s=i.tagName;if(e==="value"&&s!=="PROGRESS"&&!s.includes("-")){const a=s==="OPTION"?i.getAttribute("value")||"":i.value,l=t==null?i.type==="checkbox"?"on":"":String(t);(a!==l||!("_value"in i))&&(i.value=l),t==null&&i.removeAttribute(e),i._value=t;return}let o=!1;if(t===""||t==null){const a=typeof i[e];a==="boolean"?t=d_(t):t==null&&a==="string"?(t="",o=!0):a==="number"&&(t=0,o=!0)}try{i[e]=t}catch{}o&&i.removeAttribute(r||e)}function TS(i,e,t,n){i.addEventListener(e,t,n)}function ES(i,e,t,n){i.removeEventListener(e,t,n)}const Tm=Symbol("_vei");function AS(i,e,t,n,r=null){const s=i[Tm]||(i[Tm]={}),o=s[e];if(n&&o)o.value=n;else{const[a,l]=RS(e);if(n){const c=s[e]=PS(n,r);TS(i,a,c,l)}else o&&(ES(i,a,o,l),s[e]=void 0)}}const Em=/(?:Once|Passive|Capture)$/;function RS(i){let e;if(Em.test(i)){e={};let n;for(;n=i.match(Em);)i=i.slice(0,i.length-n[0].length),e[n[0].toLowerCase()]=!0}return[i[2]===":"?i.slice(3):Os(i.slice(2)),e]}let Oh=0;const CS=Promise.resolve(),IS=()=>Oh||(CS.then(()=>Oh=0),Oh=Date.now());function PS(i,e){const t=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=t.attached)return;Ni(LS(n,t.value),e,5,[n])};return t.value=i,t.attached=IS(),t}function LS(i,e){if(tt(e)){const t=i.stopImmediatePropagation;return i.stopImmediatePropagation=()=>{t.call(i),i._stopped=!0},e.map(n=>r=>!r._stopped&&n&&n(r))}else return e}const Am=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&i.charCodeAt(2)>96&&i.charCodeAt(2)<123,DS=(i,e,t,n,r,s)=>{const o=r==="svg";e==="class"?xS(i,n,o):e==="style"?SS(i,t,n):Eu(e)?Pd(e)||AS(i,e,t,n,s):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):NS(i,e,n,o))?(wm(i,e,n),!i.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&Sm(i,e,n,o,s,e!=="value")):i._isVueCE&&(/[A-Z]/.test(e)||!tn(n))?wm(i,ii(e),n,s,e):(e==="true-value"?i._trueValue=n:e==="false-value"&&(i._falseValue=n),Sm(i,e,n,o))};function NS(i,e,t,n){if(n)return!!(e==="innerHTML"||e==="textContent"||e in i&&Am(e)&&et(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&i.tagName==="INPUT"||e==="type"&&i.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const r=i.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return Am(e)&&tn(t)?!1:e in i}const US=mn({patchProp:DS},vS);let Rm;function v0(){return Rm||(Rm=r0(US))}const OS=(...i)=>{v0().render(...i)},FS=(...i)=>{const e=v0().createApp(...i),{mount:t}=e;return e.mount=n=>{const r=zS(n);if(!r)return;const s=e._component;!et(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.nodeType===1&&(r.textContent="");const o=t(r,!1,BS(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),o},e};function BS(i){if(i instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&i instanceof MathMLElement)return"mathml"}function zS(i){return tn(i)?document.querySelector(i):i}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Do="176",Hn={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Zi={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},_0=0,ed=1,x0=2,kS=3,VS=0,Kd=1,Zd=2,Ri=3,Fi=0,pn=1,En=2,nr=0,vs=1,Oc=2,td=3,nd=4,y0=5,Tr=100,b0=101,M0=102,S0=103,w0=104,T0=200,E0=201,A0=202,R0=203,Fc=204,Bc=205,C0=206,I0=207,P0=208,L0=209,D0=210,N0=211,U0=212,O0=213,F0=214,zc=0,kc=1,Vc=2,ws=3,Hc=4,Gc=5,Wc=6,Xc=7,tl=0,B0=1,z0=2,gi=0,k0=1,V0=2,H0=3,zu=4,G0=5,W0=6,X0=7,id="attached",j0="detached",ku=300,rr=301,Dr=302,yo=303,za=304,No=306,sr=1e3,Jt=1001,Ts=1002,Lt=1003,nl=1004,HS=1004,Er=1005,GS=1005,Ct=1006,_s=1007,WS=1007,Xn=1008,XS=1008,vi=1009,Jd=1010,Qd=1011,bo=1012,Vu=1013,or=1014,on=1015,hi=1016,Hu=1017,Gu=1018,Mo=1020,ep=35902,tp=1021,np=1022,Qt=1023,So=1026,wo=1027,Wu=1028,il=1029,ip=1030,Xu=1031,jS=1032,ju=1033,_a=33776,xa=33777,ya=33778,ba=33779,jc=35840,Yc=35841,qc=35842,$c=35843,Kc=36196,Zc=37492,Jc=37496,Qc=37808,eu=37809,tu=37810,nu=37811,iu=37812,ru=37813,su=37814,ou=37815,au=37816,lu=37817,cu=37818,uu=37819,hu=37820,fu=37821,Ma=36492,du=36494,pu=36495,rp=36283,mu=36284,gu=36285,vu=36286,Y0=2200,q0=2201,$0=2202,Es=2300,As=2301,bc=2302,fs=2400,ds=2401,ka=2402,Yu=2500,sp=2501,K0=0,op=1,_u=2,Z0=3200,J0=3201,YS=3202,qS=3203,Fr=0,Q0=1,Pi="",Bt="srgb",an="srgb-linear",Va="linear",yt="srgb",$S=0,as=7680,KS=7681,ZS=7682,JS=7683,QS=34055,ew=34056,tw=5386,nw=512,iw=513,rw=514,sw=515,ow=516,aw=517,lw=518,rd=519,ex=512,tx=513,nx=514,ap=515,ix=516,rx=517,sx=518,ox=519,Ha=35044,cw=35048,uw=35040,hw=35045,fw=35049,dw=35041,pw=35046,mw=35050,gw=35042,vw="100",sd="300 es",ei=2e3,Ga=2001,_w={COMPUTE:"compute",RENDER:"render"},xw={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},yw={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FLAT_FIRST:"flat first",FLAT_EITHER:"flat either"};class bi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const r=n[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const cn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Cm=1234567;const xs=Math.PI/180,To=180/Math.PI;function Yn(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(cn[i&255]+cn[i>>8&255]+cn[i>>16&255]+cn[i>>24&255]+"-"+cn[e&255]+cn[e>>8&255]+"-"+cn[e>>16&15|64]+cn[e>>24&255]+"-"+cn[t&63|128]+cn[t>>8&255]+"-"+cn[t>>16&255]+cn[t>>24&255]+cn[n&255]+cn[n>>8&255]+cn[n>>16&255]+cn[n>>24&255]).toLowerCase()}function Ke(i,e,t){return Math.max(e,Math.min(t,i))}function lp(i,e){return(i%e+e)%e}function bw(i,e,t,n,r){return n+(i-e)*(r-n)/(t-e)}function Mw(i,e,t){return i!==e?(t-i)/(e-i):0}function Sa(i,e,t){return(1-t)*i+t*e}function Sw(i,e,t,n){return Sa(i,e,1-Math.exp(-t*n))}function ww(i,e=1){return e-Math.abs(lp(i,e*2)-e)}function Tw(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*(3-2*i))}function Ew(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*i*(i*(i*6-15)+10))}function Aw(i,e){return i+Math.floor(Math.random()*(e-i+1))}function Rw(i,e){return i+Math.random()*(e-i)}function Cw(i){return i*(.5-Math.random())}function Iw(i){i!==void 0&&(Cm=i);let e=Cm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Pw(i){return i*xs}function Lw(i){return i*To}function Dw(i){return(i&i-1)===0&&i!==0}function Nw(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function Uw(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function Ow(i,e,t,n,r){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+n)/2),u=o((e+n)/2),h=s((e-n)/2),f=o((e-n)/2),d=s((n-e)/2),p=o((n-e)/2);switch(r){case"XYX":i.set(a*u,l*h,l*f,a*c);break;case"YZY":i.set(l*f,a*u,l*h,a*c);break;case"ZXZ":i.set(l*h,l*f,a*u,a*c);break;case"XZX":i.set(a*u,l*p,l*d,a*c);break;case"YXY":i.set(l*d,a*u,l*p,a*c);break;case"ZYZ":i.set(l*p,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function An(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function Qe(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const Bi={DEG2RAD:xs,RAD2DEG:To,generateUUID:Yn,clamp:Ke,euclideanModulo:lp,mapLinear:bw,inverseLerp:Mw,lerp:Sa,damp:Sw,pingpong:ww,smoothstep:Tw,smootherstep:Ew,randInt:Aw,randFloat:Rw,randFloatSpread:Cw,seededRandom:Iw,degToRad:Pw,radToDeg:Lw,isPowerOfTwo:Dw,ceilPowerOfTwo:Nw,floorPowerOfTwo:Uw,setQuaternionFromProperEuler:Ow,normalize:Qe,denormalize:An};class pe{constructor(e=0,t=0){pe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Ke(this.x,e.x,t.x),this.y=Ke(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Ke(this.x,e,t),this.y=Ke(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Ke(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Ke(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*r+e.x,this.y=s*r+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Je{constructor(e,t,n,r,s,o,a,l,c){Je.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,a,l,c)}set(e,t,n,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],f=n[2],d=n[5],p=n[8],v=r[0],m=r[3],g=r[6],M=r[1],b=r[4],y=r[7],C=r[2],w=r[5],E=r[8];return s[0]=o*v+a*M+l*C,s[3]=o*m+a*b+l*w,s[6]=o*g+a*y+l*E,s[1]=c*v+u*M+h*C,s[4]=c*m+u*b+h*w,s[7]=c*g+u*y+h*E,s[2]=f*v+d*M+p*C,s[5]=f*m+d*b+p*w,s[8]=f*g+d*y+p*E,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*s*u+n*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,f=a*l-u*s,d=c*s-o*l,p=t*h+n*f+r*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/p;return e[0]=h*v,e[1]=(r*c-u*n)*v,e[2]=(a*n-r*o)*v,e[3]=f*v,e[4]=(u*t-r*l)*v,e[5]=(r*s-a*t)*v,e[6]=d*v,e[7]=(n*l-c*t)*v,e[8]=(o*t-n*s)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(Fh.makeScale(e,t)),this}rotate(e){return this.premultiply(Fh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Fh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Fh=new Je;function ax(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}const Fw={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function uo(i,e){return new Fw[i](e)}function Wa(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function lx(){const i=Wa("canvas");return i.style.display="block",i}const Im={};function Mc(i){i in Im||(Im[i]=!0,console.warn(i))}function Bw(i,e,t){return new Promise(function(n,r){function s(){switch(i.clientWaitSync(e,i.SYNC_FLUSH_COMMANDS_BIT,0)){case i.WAIT_FAILED:r();break;case i.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}function zw(i){const e=i.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function kw(i){const e=i.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Pm=new Je().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Lm=new Je().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Vw(){const i={enabled:!0,workingColorSpace:an,spaces:{},convert:function(r,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===yt&&(r.r=ir(r.r),r.g=ir(r.g),r.b=ir(r.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(r.applyMatrix3(this.spaces[s].toXYZ),r.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===yt&&(r.r=go(r.r),r.g=go(r.g),r.b=go(r.b))),r},fromWorkingColorSpace:function(r,s){return this.convert(r,this.workingColorSpace,s)},toWorkingColorSpace:function(r,s){return this.convert(r,s,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===Pi?Va:this.spaces[r].transfer},getLuminanceCoefficients:function(r,s=this.workingColorSpace){return r.fromArray(this.spaces[s].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,s,o){return r.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return i.define({[an]:{primaries:e,whitePoint:n,transfer:Va,toXYZ:Pm,fromXYZ:Lm,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Bt},outputColorSpaceConfig:{drawingBufferColorSpace:Bt}},[Bt]:{primaries:e,whitePoint:n,transfer:yt,toXYZ:Pm,fromXYZ:Lm,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Bt}}}),i}const at=Vw();function ir(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function go(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let Hs;class cx{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{Hs===void 0&&(Hs=Wa("canvas")),Hs.width=e.width,Hs.height=e.height;const r=Hs.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),n=Hs}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Wa("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=ir(s[o]/255)*255;return n.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(ir(t[n]/255)*255):t[n]=ir(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Hw=0;class Ar{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Hw++}),this.uuid=Yn(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(Bh(r[o].image)):s.push(Bh(r[o]))}else s=Bh(r);n.url=s}return t||(e.images[this.uuid]=n),n}}function Bh(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?cx.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Gw=0;class At extends bi{constructor(e=At.DEFAULT_IMAGE,t=At.DEFAULT_MAPPING,n=Jt,r=Jt,s=Ct,o=Xn,a=Qt,l=vi,c=At.DEFAULT_ANISOTROPY,u=Pi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Gw++}),this.uuid=Yn(),this.name="",this.source=new Ar(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new pe(0,0),this.repeat=new pe(1,1),this.center=new pe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Je,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isTextureArray=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isTextureArray=e.isTextureArray,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ku)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case sr:e.x=e.x-Math.floor(e.x);break;case Jt:e.x=e.x<0?0:1;break;case Ts:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case sr:e.y=e.y-Math.floor(e.y);break;case Jt:e.y=e.y<0?0:1;break;case Ts:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}At.DEFAULT_IMAGE=null;At.DEFAULT_MAPPING=ku;At.DEFAULT_ANISOTROPY=1;class it{constructor(e=0,t=0,n=0,r=1){it.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*r+o[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],p=l[9],v=l[2],m=l[6],g=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-v)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+v)<.1&&Math.abs(p+m)<.1&&Math.abs(c+d+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const b=(c+1)/2,y=(d+1)/2,C=(g+1)/2,w=(u+f)/4,E=(h+v)/4,S=(p+m)/4;return b>y&&b>C?b<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(b),r=w/n,s=E/n):y>C?y<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(y),n=w/r,s=S/r):C<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(C),n=E/s,r=S/s),this.set(n,r,s,t),this}let M=Math.sqrt((m-p)*(m-p)+(h-v)*(h-v)+(f-u)*(f-u));return Math.abs(M)<.001&&(M=1),this.x=(m-p)/M,this.y=(h-v)/M,this.z=(f-u)/M,this.w=Math.acos((c+d+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Ke(this.x,e.x,t.x),this.y=Ke(this.y,e.y,t.y),this.z=Ke(this.z,e.z,t.z),this.w=Ke(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Ke(this.x,e,t),this.y=Ke(this.y,e,t),this.z=Ke(this.z,e,t),this.w=Ke(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Ke(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class qu extends bi{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth?n.depth:1,this.scissor=new it(0,0,e,t),this.scissorTest=!1,this.viewport=new it(0,0,e,t);const r={width:e,height:t,depth:this.depth};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Ct,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,multiview:!1},n);const s=new At(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const r=Object.assign({},e.textures[t].image);this.textures[t].source=new Ar(r)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class _i extends qu{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class rl extends At{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=Lt,this.minFilter=Lt,this.wrapR=Jt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Ww extends _i{constructor(e=1,t=1,n=1,r={}){super(e,t,r),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new rl(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class $u extends At{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=Lt,this.minFilter=Lt,this.wrapR=Jt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Xw extends _i{constructor(e=1,t=1,n=1,r={}){super(e,t,r),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new $u(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class en{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,s,o,a){let l=n[r+0],c=n[r+1],u=n[r+2],h=n[r+3];const f=s[o+0],d=s[o+1],p=s[o+2],v=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=f,e[t+1]=d,e[t+2]=p,e[t+3]=v;return}if(h!==v||l!==f||c!==d||u!==p){let m=1-a;const g=l*f+c*d+u*p+h*v,M=g>=0?1:-1,b=1-g*g;if(b>Number.EPSILON){const C=Math.sqrt(b),w=Math.atan2(C,g*M);m=Math.sin(m*w)/C,a=Math.sin(a*w)/C}const y=a*M;if(l=l*m+f*y,c=c*m+d*y,u=u*m+p*y,h=h*m+v*y,m===1-a){const C=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=C,c*=C,u*=C,h*=C}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,r,s,o){const a=n[r],l=n[r+1],c=n[r+2],u=n[r+3],h=s[o],f=s[o+1],d=s[o+2],p=s[o+3];return e[t]=a*p+u*h+l*d-c*f,e[t+1]=l*p+u*f+c*h-a*d,e[t+2]=c*p+u*d+a*f-l*h,e[t+3]=u*p-a*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(r/2),h=a(s/2),f=l(n/2),d=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"YZX":this._x=f*u*h+c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h-f*d*p;break;case"XZY":this._x=f*u*h-c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=n+a+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-r)*d}else if(n>a&&n>h){const d=2*Math.sqrt(1+n-a-h);this._w=(u-l)/d,this._x=.25*d,this._y=(r+o)/d,this._z=(s+c)/d}else if(a>h){const d=2*Math.sqrt(1+a-n-h);this._w=(s-c)/d,this._x=(r+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-n-a);this._w=(o-r)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ke(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-r*a,this._w=o*u-n*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*n+t*this._x,this._y=d*r+t*this._y,this._z=d*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=o*h+this._w*f,this._x=n*h+this._x*f,this._y=r*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),r=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class F{constructor(e=0,t=0,n=0){F.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Dm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Dm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*r-a*n),u=2*(a*t-s*r),h=2*(s*n-o*t);return this.x=t+l*c+o*h-a*u,this.y=n+l*u+a*c-s*h,this.z=r+l*h+s*u-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Ke(this.x,e.x,t.x),this.y=Ke(this.y,e.y,t.y),this.z=Ke(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Ke(this.x,e,t),this.y=Ke(this.y,e,t),this.z=Ke(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Ke(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-n*l,this.z=n*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return zh.copy(this).projectOnVector(e),this.sub(zh)}reflect(e){return this.sub(zh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Ke(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const zh=new F,Dm=new en;class Xt{constructor(e=new F(1/0,1/0,1/0),t=new F(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(oi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(oi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=oi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,oi):oi.fromBufferAttribute(s,o),oi.applyMatrix4(e.matrixWorld),this.expandByPoint(oi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),bl.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),bl.copy(n.boundingBox)),bl.applyMatrix4(e.matrixWorld),this.union(bl)}const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,oi),oi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Go),Ml.subVectors(this.max,Go),Gs.subVectors(e.a,Go),Ws.subVectors(e.b,Go),Xs.subVectors(e.c,Go),hr.subVectors(Ws,Gs),fr.subVectors(Xs,Ws),jr.subVectors(Gs,Xs);let t=[0,-hr.z,hr.y,0,-fr.z,fr.y,0,-jr.z,jr.y,hr.z,0,-hr.x,fr.z,0,-fr.x,jr.z,0,-jr.x,-hr.y,hr.x,0,-fr.y,fr.x,0,-jr.y,jr.x,0];return!kh(t,Gs,Ws,Xs,Ml)||(t=[1,0,0,0,1,0,0,0,1],!kh(t,Gs,Ws,Xs,Ml))?!1:(Sl.crossVectors(hr,fr),t=[Sl.x,Sl.y,Sl.z],kh(t,Gs,Ws,Xs,Ml))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,oi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(oi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Hi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Hi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Hi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Hi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Hi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Hi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Hi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Hi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Hi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Hi=[new F,new F,new F,new F,new F,new F,new F,new F],oi=new F,bl=new Xt,Gs=new F,Ws=new F,Xs=new F,hr=new F,fr=new F,jr=new F,Go=new F,Ml=new F,Sl=new F,Yr=new F;function kh(i,e,t,n,r){for(let s=0,o=i.length-3;s<=o;s+=3){Yr.fromArray(i,s);const a=r.x*Math.abs(Yr.x)+r.y*Math.abs(Yr.y)+r.z*Math.abs(Yr.z),l=e.dot(Yr),c=t.dot(Yr),u=n.dot(Yr);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const jw=new Xt,Wo=new F,Vh=new F;class jt{constructor(e=new F,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):jw.setFromPoints(e).getCenter(n);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Wo.subVectors(e,this.center);const t=Wo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.addScaledVector(Wo,r/n),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Vh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Wo.copy(e.center).add(Vh)),this.expandByPoint(Wo.copy(e.center).sub(Vh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Gi=new F,Hh=new F,wl=new F,dr=new F,Gh=new F,Tl=new F,Wh=new F;class Fs{constructor(e=new F,t=new F(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Gi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Gi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Gi.copy(this.origin).addScaledVector(this.direction,t),Gi.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){Hh.copy(e).add(t).multiplyScalar(.5),wl.copy(t).sub(e).normalize(),dr.copy(this.origin).sub(Hh);const s=e.distanceTo(t)*.5,o=-this.direction.dot(wl),a=dr.dot(this.direction),l=-dr.dot(wl),c=dr.lengthSq(),u=Math.abs(1-o*o);let h,f,d,p;if(u>0)if(h=o*l-a,f=o*a-l,p=s*u,h>=0)if(f>=-p)if(f<=p){const v=1/u;h*=v,f*=v,d=h*(h+o*f+2*a)+f*(o*h+f+2*l)+c}else f=s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-o*s+a)),f=h>0?-s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(h=Math.max(0,-(o*s+a)),f=h>0?s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c);else f=o>0?-s:s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,h),r&&r.copy(Hh).addScaledVector(wl,f),d}intersectSphere(e,t){Gi.subVectors(e.center,this.origin);const n=Gi.dot(this.direction),r=Gi.dot(Gi)-n*n,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=n-o,l=n+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(n=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(n=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),n>o||s>r||((s>n||isNaN(n))&&(n=s),(o<r||isNaN(r))&&(r=o),h>=0?(a=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(a=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),n>l||a>r)||((a>n||n!==n)&&(n=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,Gi)!==null}intersectTriangle(e,t,n,r,s){Gh.subVectors(t,e),Tl.subVectors(n,e),Wh.crossVectors(Gh,Tl);let o=this.direction.dot(Wh),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;dr.subVectors(this.origin,e);const l=a*this.direction.dot(Tl.crossVectors(dr,Tl));if(l<0)return null;const c=a*this.direction.dot(Gh.cross(dr));if(c<0||l+c>o)return null;const u=-a*dr.dot(Wh);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ke{constructor(e,t,n,r,s,o,a,l,c,u,h,f,d,p,v,m){ke.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,a,l,c,u,h,f,d,p,v,m)}set(e,t,n,r,s,o,a,l,c,u,h,f,d,p,v,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=s,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=u,g[10]=h,g[14]=f,g[3]=d,g[7]=p,g[11]=v,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ke().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/js.setFromMatrixColumn(e,0).length(),s=1/js.setFromMatrixColumn(e,1).length(),o=1/js.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=o*u,d=o*h,p=a*u,v=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=d+p*c,t[5]=f-v*c,t[9]=-a*l,t[2]=v-f*c,t[6]=p+d*c,t[10]=o*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,p=c*u,v=c*h;t[0]=f+v*a,t[4]=p*a-d,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=d*a-p,t[6]=v+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,p=c*u,v=c*h;t[0]=f-v*a,t[4]=-o*h,t[8]=p+d*a,t[1]=d+p*a,t[5]=o*u,t[9]=v-f*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*u,d=o*h,p=a*u,v=a*h;t[0]=l*u,t[4]=p*c-d,t[8]=f*c+v,t[1]=l*h,t[5]=v*c+f,t[9]=d*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,d=o*c,p=a*l,v=a*c;t[0]=l*u,t[4]=v-f*h,t[8]=p*h+d,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=d*h+p,t[10]=f-v*h}else if(e.order==="XZY"){const f=o*l,d=o*c,p=a*l,v=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+v,t[5]=o*u,t[9]=d*h-p,t[2]=p*h-d,t[6]=a*u,t[10]=v*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Yw,e,qw)}lookAt(e,t,n){const r=this.elements;return zn.subVectors(e,t),zn.lengthSq()===0&&(zn.z=1),zn.normalize(),pr.crossVectors(n,zn),pr.lengthSq()===0&&(Math.abs(n.z)===1?zn.x+=1e-4:zn.z+=1e-4,zn.normalize(),pr.crossVectors(n,zn)),pr.normalize(),El.crossVectors(zn,pr),r[0]=pr.x,r[4]=El.x,r[8]=zn.x,r[1]=pr.y,r[5]=El.y,r[9]=zn.y,r[2]=pr.z,r[6]=El.z,r[10]=zn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],f=n[9],d=n[13],p=n[2],v=n[6],m=n[10],g=n[14],M=n[3],b=n[7],y=n[11],C=n[15],w=r[0],E=r[4],S=r[8],x=r[12],_=r[1],A=r[5],N=r[9],B=r[13],V=r[2],X=r[6],z=r[10],te=r[14],J=r[3],ue=r[7],de=r[11],oe=r[15];return s[0]=o*w+a*_+l*V+c*J,s[4]=o*E+a*A+l*X+c*ue,s[8]=o*S+a*N+l*z+c*de,s[12]=o*x+a*B+l*te+c*oe,s[1]=u*w+h*_+f*V+d*J,s[5]=u*E+h*A+f*X+d*ue,s[9]=u*S+h*N+f*z+d*de,s[13]=u*x+h*B+f*te+d*oe,s[2]=p*w+v*_+m*V+g*J,s[6]=p*E+v*A+m*X+g*ue,s[10]=p*S+v*N+m*z+g*de,s[14]=p*x+v*B+m*te+g*oe,s[3]=M*w+b*_+y*V+C*J,s[7]=M*E+b*A+y*X+C*ue,s[11]=M*S+b*N+y*z+C*de,s[15]=M*x+b*B+y*te+C*oe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],p=e[3],v=e[7],m=e[11],g=e[15];return p*(+s*l*h-r*c*h-s*a*f+n*c*f+r*a*d-n*l*d)+v*(+t*l*d-t*c*f+s*o*f-r*o*d+r*c*u-s*l*u)+m*(+t*c*h-t*a*d-s*o*h+n*o*d+s*a*u-n*c*u)+g*(-r*a*u-t*l*h+t*a*f+r*o*h-n*o*f+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],p=e[12],v=e[13],m=e[14],g=e[15],M=h*m*c-v*f*c+v*l*d-a*m*d-h*l*g+a*f*g,b=p*f*c-u*m*c-p*l*d+o*m*d+u*l*g-o*f*g,y=u*v*c-p*h*c+p*a*d-o*v*d-u*a*g+o*h*g,C=p*h*l-u*v*l-p*a*f+o*v*f+u*a*m-o*h*m,w=t*M+n*b+r*y+s*C;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/w;return e[0]=M*E,e[1]=(v*f*s-h*m*s-v*r*d+n*m*d+h*r*g-n*f*g)*E,e[2]=(a*m*s-v*l*s+v*r*c-n*m*c-a*r*g+n*l*g)*E,e[3]=(h*l*s-a*f*s-h*r*c+n*f*c+a*r*d-n*l*d)*E,e[4]=b*E,e[5]=(u*m*s-p*f*s+p*r*d-t*m*d-u*r*g+t*f*g)*E,e[6]=(p*l*s-o*m*s-p*r*c+t*m*c+o*r*g-t*l*g)*E,e[7]=(o*f*s-u*l*s+u*r*c-t*f*c-o*r*d+t*l*d)*E,e[8]=y*E,e[9]=(p*h*s-u*v*s-p*n*d+t*v*d+u*n*g-t*h*g)*E,e[10]=(o*v*s-p*a*s+p*n*c-t*v*c-o*n*g+t*a*g)*E,e[11]=(u*a*s-o*h*s-u*n*c+t*h*c+o*n*d-t*a*d)*E,e[12]=C*E,e[13]=(u*v*r-p*h*r+p*n*f-t*v*f-u*n*m+t*h*m)*E,e[14]=(p*a*r-o*v*r-p*n*l+t*v*l+o*n*m-t*a*m)*E,e[15]=(o*h*r-u*a*r+u*n*l-t*h*l-o*n*f+t*a*f)*E,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+n,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,o){return this.set(1,n,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,f=s*c,d=s*u,p=s*h,v=o*u,m=o*h,g=a*h,M=l*c,b=l*u,y=l*h,C=n.x,w=n.y,E=n.z;return r[0]=(1-(v+g))*C,r[1]=(d+y)*C,r[2]=(p-b)*C,r[3]=0,r[4]=(d-y)*w,r[5]=(1-(f+g))*w,r[6]=(m+M)*w,r[7]=0,r[8]=(p+b)*E,r[9]=(m-M)*E,r[10]=(1-(f+v))*E,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=js.set(r[0],r[1],r[2]).length();const o=js.set(r[4],r[5],r[6]).length(),a=js.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],ai.copy(this);const c=1/s,u=1/o,h=1/a;return ai.elements[0]*=c,ai.elements[1]*=c,ai.elements[2]*=c,ai.elements[4]*=u,ai.elements[5]*=u,ai.elements[6]*=u,ai.elements[8]*=h,ai.elements[9]*=h,ai.elements[10]*=h,t.setFromRotationMatrix(ai),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,r,s,o,a=ei){const l=this.elements,c=2*s/(t-e),u=2*s/(n-r),h=(t+e)/(t-e),f=(n+r)/(n-r);let d,p;if(a===ei)d=-(o+s)/(o-s),p=-2*o*s/(o-s);else if(a===Ga)d=-o/(o-s),p=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=u,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=d,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,r,s,o,a=ei){const l=this.elements,c=1/(t-e),u=1/(n-r),h=1/(o-s),f=(t+e)*c,d=(n+r)*u;let p,v;if(a===ei)p=(o+s)*h,v=-2*h;else if(a===Ga)p=s*h,v=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-f,l[1]=0,l[5]=2*u,l[9]=0,l[13]=-d,l[2]=0,l[6]=0,l[10]=v,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const js=new F,ai=new ke,Yw=new F(0,0,0),qw=new F(1,1,1),pr=new F,El=new F,zn=new F,Nm=new ke,Um=new en;class In{constructor(e=0,t=0,n=0,r=In.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],h=r[2],f=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(Ke(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ke(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(Ke(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Ke(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Ke(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Ke(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Nm.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Nm,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Um.setFromEuler(this),this.setFromQuaternion(Um,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}In.DEFAULT_ORDER="XYZ";class Ku{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let $w=0;const Om=new F,Ys=new en,Wi=new ke,Al=new F,Xo=new F,Kw=new F,Zw=new en,Fm=new F(1,0,0),Bm=new F(0,1,0),zm=new F(0,0,1),km={type:"added"},Jw={type:"removed"},qs={type:"childadded",child:null},Xh={type:"childremoved",child:null};class ct extends bi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:$w++}),this.uuid=Yn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ct.DEFAULT_UP.clone();const e=new F,t=new In,n=new en,r=new F(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new ke},normalMatrix:{value:new Je}}),this.matrix=new ke,this.matrixWorld=new ke,this.matrixAutoUpdate=ct.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ku,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ys.setFromAxisAngle(e,t),this.quaternion.multiply(Ys),this}rotateOnWorldAxis(e,t){return Ys.setFromAxisAngle(e,t),this.quaternion.premultiply(Ys),this}rotateX(e){return this.rotateOnAxis(Fm,e)}rotateY(e){return this.rotateOnAxis(Bm,e)}rotateZ(e){return this.rotateOnAxis(zm,e)}translateOnAxis(e,t){return Om.copy(e).applyQuaternion(this.quaternion),this.position.add(Om.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Fm,e)}translateY(e){return this.translateOnAxis(Bm,e)}translateZ(e){return this.translateOnAxis(zm,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Wi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Al.copy(e):Al.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Xo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Wi.lookAt(Xo,Al,this.up):Wi.lookAt(Al,Xo,this.up),this.quaternion.setFromRotationMatrix(Wi),r&&(Wi.extractRotation(r.matrixWorld),Ys.setFromRotationMatrix(Wi),this.quaternion.premultiply(Ys.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(km),qs.child=e,this.dispatchEvent(qs),qs.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Jw),Xh.child=e,this.dispatchEvent(Xh),Xh.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Wi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Wi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Wi),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(km),qs.child=e,this.dispatchEvent(qs),qs.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Xo,e,Kw),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Xo,Zw,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?{min:a.boundingBox.min.toArray(),max:a.boundingBox.max.toArray()}:void 0,boundingSphere:a.boundingSphere?{radius:a.boundingSphere.radius,center:a.boundingSphere.center.toArray()}:void 0})),r.instanceInfo=this._instanceInfo.map(a=>({...a})),r.availableInstanceIds=this._availableInstanceIds.slice(),r.availableGeometryIds=this._availableGeometryIds.slice(),r.nextIndexStart=this._nextIndexStart,r.nextVertexStart=this._nextVertexStart,r.geometryCount=this._geometryCount,r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.matricesTexture=this._matricesTexture.toJSON(e),r.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere={center:this.boundingSphere.center.toArray(),radius:this.boundingSphere.radius}),this.boundingBox!==null&&(r.boundingBox={min:this.boundingBox.min.toArray(),max:this.boundingBox.max.toArray()}));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),f=o(e.skeletons),d=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),p.length>0&&(n.nodes=p)}return n.object=r,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}}ct.DEFAULT_UP=new F(0,1,0);ct.DEFAULT_MATRIX_AUTO_UPDATE=!0;ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const li=new F,Xi=new F,jh=new F,ji=new F,$s=new F,Ks=new F,Vm=new F,Yh=new F,qh=new F,$h=new F,Kh=new it,Zh=new it,Jh=new it;class Rn{constructor(e=new F,t=new F,n=new F){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),li.subVectors(e,t),r.cross(li);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){li.subVectors(r,t),Xi.subVectors(n,t),jh.subVectors(e,t);const o=li.dot(li),a=li.dot(Xi),l=li.dot(jh),c=Xi.dot(Xi),u=Xi.dot(jh),h=o*c-a*a;if(h===0)return s.set(0,0,0),null;const f=1/h,d=(c*l-a*u)*f,p=(o*u-a*l)*f;return s.set(1-d-p,p,d)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,ji)===null?!1:ji.x>=0&&ji.y>=0&&ji.x+ji.y<=1}static getInterpolation(e,t,n,r,s,o,a,l){return this.getBarycoord(e,t,n,r,ji)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,ji.x),l.addScaledVector(o,ji.y),l.addScaledVector(a,ji.z),l)}static getInterpolatedAttribute(e,t,n,r,s,o){return Kh.setScalar(0),Zh.setScalar(0),Jh.setScalar(0),Kh.fromBufferAttribute(e,t),Zh.fromBufferAttribute(e,n),Jh.fromBufferAttribute(e,r),o.setScalar(0),o.addScaledVector(Kh,s.x),o.addScaledVector(Zh,s.y),o.addScaledVector(Jh,s.z),o}static isFrontFacing(e,t,n,r){return li.subVectors(n,t),Xi.subVectors(e,t),li.cross(Xi).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return li.subVectors(this.c,this.b),Xi.subVectors(this.a,this.b),li.cross(Xi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Rn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Rn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,r,s){return Rn.getInterpolation(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return Rn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Rn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let o,a;$s.subVectors(r,n),Ks.subVectors(s,n),Yh.subVectors(e,n);const l=$s.dot(Yh),c=Ks.dot(Yh);if(l<=0&&c<=0)return t.copy(n);qh.subVectors(e,r);const u=$s.dot(qh),h=Ks.dot(qh);if(u>=0&&h<=u)return t.copy(r);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector($s,o);$h.subVectors(e,s);const d=$s.dot($h),p=Ks.dot($h);if(p>=0&&d<=p)return t.copy(s);const v=d*c-l*p;if(v<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(n).addScaledVector(Ks,a);const m=u*p-d*h;if(m<=0&&h-u>=0&&d-p>=0)return Vm.subVectors(s,r),a=(h-u)/(h-u+(d-p)),t.copy(r).addScaledVector(Vm,a);const g=1/(m+v+f);return o=v*g,a=f*g,t.copy(n).addScaledVector($s,o).addScaledVector(Ks,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const ux={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},mr={h:0,s:0,l:0},Rl={h:0,s:0,l:0};function Qh(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}class we{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Bt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,at.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=at.workingColorSpace){return this.r=e,this.g=t,this.b=n,at.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=at.workingColorSpace){if(e=lp(e,1),t=Ke(t,0,1),n=Ke(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=Qh(o,s,e+1/3),this.g=Qh(o,s,e),this.b=Qh(o,s,e-1/3)}return at.toWorkingColorSpace(this,r),this}setStyle(e,t=Bt){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Bt){const n=ux[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ir(e.r),this.g=ir(e.g),this.b=ir(e.b),this}copyLinearToSRGB(e){return this.r=go(e.r),this.g=go(e.g),this.b=go(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Bt){return at.fromWorkingColorSpace(un.copy(this),e),Math.round(Ke(un.r*255,0,255))*65536+Math.round(Ke(un.g*255,0,255))*256+Math.round(Ke(un.b*255,0,255))}getHexString(e=Bt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=at.workingColorSpace){at.fromWorkingColorSpace(un.copy(this),t);const n=un.r,r=un.g,s=un.b,o=Math.max(n,r,s),a=Math.min(n,r,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(r-s)/h+(r<s?6:0);break;case r:l=(s-n)/h+2;break;case s:l=(n-r)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=at.workingColorSpace){return at.fromWorkingColorSpace(un.copy(this),t),e.r=un.r,e.g=un.g,e.b=un.b,e}getStyle(e=Bt){at.fromWorkingColorSpace(un.copy(this),e);const t=un.r,n=un.g,r=un.b;return e!==Bt?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(r*255)})`}offsetHSL(e,t,n){return this.getHSL(mr),this.setHSL(mr.h+e,mr.s+t,mr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(mr),e.getHSL(Rl);const n=Sa(mr.h,Rl.h,t),r=Sa(mr.s,Rl.s,t),s=Sa(mr.l,Rl.l,t);return this.setHSL(n,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*r,this.g=s[1]*t+s[4]*n+s[7]*r,this.b=s[2]*t+s[5]*n+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const un=new we;we.NAMES=ux;let Qw=0;class Yt extends bi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Qw++}),this.uuid=Yn(),this.name="",this.type="Material",this.blending=vs,this.side=Fi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Fc,this.blendDst=Bc,this.blendEquation=Tr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new we(0,0,0),this.blendAlpha=0,this.depthFunc=ws,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=rd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=as,this.stencilZFail=as,this.stencilZPass=as,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==vs&&(n.blending=this.blending),this.side!==Fi&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Fc&&(n.blendSrc=this.blendSrc),this.blendDst!==Bc&&(n.blendDst=this.blendDst),this.blendEquation!==Tr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ws&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==rd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==as&&(n.stencilFail=this.stencilFail),this.stencilZFail!==as&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==as&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Cn extends Yt{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new we(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new In,this.combine=tl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Qi=eT();function eT(){const i=new ArrayBuffer(4),e=new Float32Array(i),t=new Uint32Array(i),n=new Uint32Array(512),r=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,r[l]=24,r[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,r[l]=-c-1,r[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,r[l]=13,r[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,r[l]=24,r[l|256]=24):(n[l]=31744,n[l|256]=64512,r[l]=13,r[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,u=0;for(;(c&8388608)===0;)c<<=1,u-=8388608;c&=-8388609,u+=947912704,s[l]=c|u}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:r,mantissaTable:s,exponentTable:o,offsetTable:a}}function On(i){Math.abs(i)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),i=Ke(i,-65504,65504),Qi.floatView[0]=i;const e=Qi.uint32View[0],t=e>>23&511;return Qi.baseTable[t]+((e&8388607)>>Qi.shiftTable[t])}function oa(i){const e=i>>10;return Qi.uint32View[0]=Qi.mantissaTable[Qi.offsetTable[e]+(i&1023)]+Qi.exponentTable[e],Qi.floatView[0]}class aa{static toHalfFloat(e){return On(e)}static fromHalfFloat(e){return oa(e)}}const Wt=new F,Cl=new pe;let tT=0;class lt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:tT++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Ha,this.updateRanges=[],this.gpuType=on,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Cl.fromBufferAttribute(this,t),Cl.applyMatrix3(e),this.setXY(t,Cl.x,Cl.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.applyMatrix3(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.applyMatrix4(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.applyNormalMatrix(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.transformDirection(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=An(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Qe(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=An(t,this.array)),t}setX(e,t){return this.normalized&&(t=Qe(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=An(t,this.array)),t}setY(e,t){return this.normalized&&(t=Qe(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=An(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Qe(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=An(t,this.array)),t}setW(e,t){return this.normalized&&(t=Qe(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Qe(t,this.array),n=Qe(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=Qe(t,this.array),n=Qe(n,this.array),r=Qe(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=Qe(t,this.array),n=Qe(n,this.array),r=Qe(r,this.array),s=Qe(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ha&&(e.usage=this.usage),e}}class nT extends lt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class iT extends lt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class rT extends lt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class sT extends lt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class cp extends lt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class oT extends lt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class up extends lt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class aT extends lt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=oa(this.array[e*this.itemSize]);return this.normalized&&(t=An(t,this.array)),t}setX(e,t){return this.normalized&&(t=Qe(t,this.array)),this.array[e*this.itemSize]=On(t),this}getY(e){let t=oa(this.array[e*this.itemSize+1]);return this.normalized&&(t=An(t,this.array)),t}setY(e,t){return this.normalized&&(t=Qe(t,this.array)),this.array[e*this.itemSize+1]=On(t),this}getZ(e){let t=oa(this.array[e*this.itemSize+2]);return this.normalized&&(t=An(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Qe(t,this.array)),this.array[e*this.itemSize+2]=On(t),this}getW(e){let t=oa(this.array[e*this.itemSize+3]);return this.normalized&&(t=An(t,this.array)),t}setW(e,t){return this.normalized&&(t=Qe(t,this.array)),this.array[e*this.itemSize+3]=On(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Qe(t,this.array),n=Qe(n,this.array)),this.array[e+0]=On(t),this.array[e+1]=On(n),this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=Qe(t,this.array),n=Qe(n,this.array),r=Qe(r,this.array)),this.array[e+0]=On(t),this.array[e+1]=On(n),this.array[e+2]=On(r),this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=Qe(t,this.array),n=Qe(n,this.array),r=Qe(r,this.array),s=Qe(s,this.array)),this.array[e+0]=On(t),this.array[e+1]=On(n),this.array[e+2]=On(r),this.array[e+3]=On(s),this}}class Fe extends lt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let lT=0;const Zn=new ke,ef=new ct,Zs=new F,kn=new Xt,jo=new Xt,Kt=new F;class Ze extends bi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:lT++}),this.uuid=Yn(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(ax(e)?up:cp)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Je().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Zn.makeRotationFromQuaternion(e),this.applyMatrix4(Zn),this}rotateX(e){return Zn.makeRotationX(e),this.applyMatrix4(Zn),this}rotateY(e){return Zn.makeRotationY(e),this.applyMatrix4(Zn),this}rotateZ(e){return Zn.makeRotationZ(e),this.applyMatrix4(Zn),this}translate(e,t,n){return Zn.makeTranslation(e,t,n),this.applyMatrix4(Zn),this}scale(e,t,n){return Zn.makeScale(e,t,n),this.applyMatrix4(Zn),this}lookAt(e){return ef.lookAt(e),ef.updateMatrix(),this.applyMatrix4(ef.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Zs).negate(),this.translate(Zs.x,Zs.y,Zs.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let r=0,s=e.length;r<s;r++){const o=e[r];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new Fe(n,3))}else{const n=Math.min(e.length,t.count);for(let r=0;r<n;r++){const s=e[r];t.setXYZ(r,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Xt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new F(-1/0,-1/0,-1/0),new F(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const s=t[n];kn.setFromBufferAttribute(s),this.morphTargetsRelative?(Kt.addVectors(this.boundingBox.min,kn.min),this.boundingBox.expandByPoint(Kt),Kt.addVectors(this.boundingBox.max,kn.max),this.boundingBox.expandByPoint(Kt)):(this.boundingBox.expandByPoint(kn.min),this.boundingBox.expandByPoint(kn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new jt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new F,1/0);return}if(e){const n=this.boundingSphere.center;if(kn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];jo.setFromBufferAttribute(a),this.morphTargetsRelative?(Kt.addVectors(kn.min,jo.min),kn.expandByPoint(Kt),Kt.addVectors(kn.max,jo.max),kn.expandByPoint(Kt)):(kn.expandByPoint(jo.min),kn.expandByPoint(jo.max))}kn.getCenter(n);let r=0;for(let s=0,o=e.count;s<o;s++)Kt.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared(Kt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Kt.fromBufferAttribute(a,c),l&&(Zs.fromBufferAttribute(e,c),Kt.add(Zs)),r=Math.max(r,n.distanceToSquared(Kt))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new lt(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let S=0;S<n.count;S++)a[S]=new F,l[S]=new F;const c=new F,u=new F,h=new F,f=new pe,d=new pe,p=new pe,v=new F,m=new F;function g(S,x,_){c.fromBufferAttribute(n,S),u.fromBufferAttribute(n,x),h.fromBufferAttribute(n,_),f.fromBufferAttribute(s,S),d.fromBufferAttribute(s,x),p.fromBufferAttribute(s,_),u.sub(c),h.sub(c),d.sub(f),p.sub(f);const A=1/(d.x*p.y-p.x*d.y);isFinite(A)&&(v.copy(u).multiplyScalar(p.y).addScaledVector(h,-d.y).multiplyScalar(A),m.copy(h).multiplyScalar(d.x).addScaledVector(u,-p.x).multiplyScalar(A),a[S].add(v),a[x].add(v),a[_].add(v),l[S].add(m),l[x].add(m),l[_].add(m))}let M=this.groups;M.length===0&&(M=[{start:0,count:e.count}]);for(let S=0,x=M.length;S<x;++S){const _=M[S],A=_.start,N=_.count;for(let B=A,V=A+N;B<V;B+=3)g(e.getX(B+0),e.getX(B+1),e.getX(B+2))}const b=new F,y=new F,C=new F,w=new F;function E(S){C.fromBufferAttribute(r,S),w.copy(C);const x=a[S];b.copy(x),b.sub(C.multiplyScalar(C.dot(x))).normalize(),y.crossVectors(w,x);const A=y.dot(l[S])<0?-1:1;o.setXYZW(S,b.x,b.y,b.z,A)}for(let S=0,x=M.length;S<x;++S){const _=M[S],A=_.start,N=_.count;for(let B=A,V=A+N;B<V;B+=3)E(e.getX(B+0)),E(e.getX(B+1)),E(e.getX(B+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new lt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const r=new F,s=new F,o=new F,a=new F,l=new F,c=new F,u=new F,h=new F;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),v=e.getX(f+1),m=e.getX(f+2);r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,v),o.fromBufferAttribute(t,m),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,v),c.fromBufferAttribute(n,m),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(v,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let f=0,d=t.count;f<d;f+=3)r.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Kt.fromBufferAttribute(e,t),Kt.normalize(),e.setXYZ(t,Kt.x,Kt.y,Kt.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,f=new c.constructor(l.length*u);let d=0,p=0;for(let v=0,m=l.length;v<m;v++){a.isInterleavedBufferAttribute?d=l[v]*a.data.stride+a.offset:d=l[v]*u;for(let g=0;g<u;g++)f[p++]=c[d++]}return new lt(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Ze,n=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=e(f,n);l.push(d)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Hm=new ke,qr=new Fs,Il=new jt,Gm=new F,Pl=new F,Ll=new F,Dl=new F,tf=new F,Nl=new F,Wm=new F,Ul=new F;class wt extends ct{constructor(e=new Ze,t=new Cn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const n=this.geometry,r=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(r,e);const a=this.morphTargetInfluences;if(s&&a){Nl.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=a[l],h=s[l];u!==0&&(tf.fromBufferAttribute(h,e),o?Nl.addScaledVector(tf,u):Nl.addScaledVector(tf.sub(t),u))}t.add(Nl)}return t}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Il.copy(n.boundingSphere),Il.applyMatrix4(s),qr.copy(e.ray).recast(e.near),!(Il.containsPoint(qr.origin)===!1&&(qr.intersectSphere(Il,Gm)===null||qr.origin.distanceToSquared(Gm)>(e.far-e.near)**2))&&(Hm.copy(s).invert(),qr.copy(e.ray).applyMatrix4(Hm),!(n.boundingBox!==null&&qr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,qr)))}_computeIntersections(e,t,n){let r;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,f=s.groups,d=s.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,v=f.length;p<v;p++){const m=f[p],g=o[m.materialIndex],M=Math.max(m.start,d.start),b=Math.min(a.count,Math.min(m.start+m.count,d.start+d.count));for(let y=M,C=b;y<C;y+=3){const w=a.getX(y),E=a.getX(y+1),S=a.getX(y+2);r=Ol(this,g,e,n,c,u,h,w,E,S),r&&(r.faceIndex=Math.floor(y/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const p=Math.max(0,d.start),v=Math.min(a.count,d.start+d.count);for(let m=p,g=v;m<g;m+=3){const M=a.getX(m),b=a.getX(m+1),y=a.getX(m+2);r=Ol(this,o,e,n,c,u,h,M,b,y),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,v=f.length;p<v;p++){const m=f[p],g=o[m.materialIndex],M=Math.max(m.start,d.start),b=Math.min(l.count,Math.min(m.start+m.count,d.start+d.count));for(let y=M,C=b;y<C;y+=3){const w=y,E=y+1,S=y+2;r=Ol(this,g,e,n,c,u,h,w,E,S),r&&(r.faceIndex=Math.floor(y/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const p=Math.max(0,d.start),v=Math.min(l.count,d.start+d.count);for(let m=p,g=v;m<g;m+=3){const M=m,b=m+1,y=m+2;r=Ol(this,o,e,n,c,u,h,M,b,y),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}}}function cT(i,e,t,n,r,s,o,a){let l;if(e.side===pn?l=n.intersectTriangle(o,s,r,!0,a):l=n.intersectTriangle(r,s,o,e.side===Fi,a),l===null)return null;Ul.copy(a),Ul.applyMatrix4(i.matrixWorld);const c=t.ray.origin.distanceTo(Ul);return c<t.near||c>t.far?null:{distance:c,point:Ul.clone(),object:i}}function Ol(i,e,t,n,r,s,o,a,l,c){i.getVertexPosition(a,Pl),i.getVertexPosition(l,Ll),i.getVertexPosition(c,Dl);const u=cT(i,e,t,n,Pl,Ll,Dl,Wm);if(u){const h=new F;Rn.getBarycoord(Wm,Pl,Ll,Dl,h),r&&(u.uv=Rn.getInterpolatedAttribute(r,a,l,c,h,new pe)),s&&(u.uv1=Rn.getInterpolatedAttribute(s,a,l,c,h,new pe)),o&&(u.normal=Rn.getInterpolatedAttribute(o,a,l,c,h,new F),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const f={a,b:l,c,normal:new F,materialIndex:0};Rn.getNormal(Pl,Ll,Dl,f.normal),u.face=f,u.barycoord=h}return u}class Br extends Ze{constructor(e=1,t=1,n=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,n,t,e,o,s,0),p("z","y","x",1,-1,n,t,-e,o,s,1),p("x","z","y",1,1,e,n,t,r,o,2),p("x","z","y",1,-1,e,n,-t,r,o,3),p("x","y","z",1,-1,e,t,n,r,s,4),p("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(l),this.setAttribute("position",new Fe(c,3)),this.setAttribute("normal",new Fe(u,3)),this.setAttribute("uv",new Fe(h,2));function p(v,m,g,M,b,y,C,w,E,S,x){const _=y/E,A=C/S,N=y/2,B=C/2,V=w/2,X=E+1,z=S+1;let te=0,J=0;const ue=new F;for(let de=0;de<z;de++){const oe=de*A-B;for(let ye=0;ye<X;ye++){const Ce=ye*_-N;ue[v]=Ce*M,ue[m]=oe*b,ue[g]=V,c.push(ue.x,ue.y,ue.z),ue[v]=0,ue[m]=0,ue[g]=w>0?1:-1,u.push(ue.x,ue.y,ue.z),h.push(ye/E),h.push(1-de/S),te+=1}}for(let de=0;de<S;de++)for(let oe=0;oe<E;oe++){const ye=f+oe+X*de,Ce=f+oe+X*(de+1),le=f+(oe+1)+X*(de+1),ge=f+(oe+1)+X*de;l.push(ye,Ce,ge),l.push(Ce,le,ge),J+=6}a.addGroup(d,J,x),d+=J,f+=te}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Br(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Eo(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function bn(i){const e={};for(let t=0;t<i.length;t++){const n=Eo(i[t]);for(const r in n)e[r]=n[r]}return e}function uT(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}function hx(i){const e=i.getRenderTarget();return e===null?i.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:at.workingColorSpace}const sl={clone:Eo,merge:bn};var hT=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,fT=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class gn extends Yt{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=hT,this.fragmentShader=fT,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Eo(e.uniforms),this.uniformsGroups=uT(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class ol extends ct{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ke,this.projectionMatrix=new ke,this.projectionMatrixInverse=new ke,this.coordinateSystem=ei}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const gr=new F,Xm=new pe,jm=new pe;class St extends ol{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=To*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(xs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return To*2*Math.atan(Math.tan(xs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){gr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(gr.x,gr.y).multiplyScalar(-e/gr.z),gr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(gr.x,gr.y).multiplyScalar(-e/gr.z)}getViewSize(e,t){return this.getViewBounds(e,Xm,jm),t.subVectors(jm,Xm)}setViewOffset(e,t,n,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(xs*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*n/c,r*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Js=-90,Qs=1;class fx extends ct{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new St(Js,Qs,e,t);r.layers=this.layers,this.add(r);const s=new St(Js,Qs,e,t);s.layers=this.layers,this.add(s);const o=new St(Js,Qs,e,t);o.layers=this.layers,this.add(o);const a=new St(Js,Qs,e,t);a.layers=this.layers,this.add(a);const l=new St(Js,Qs,e,t);l.layers=this.layers,this.add(l);const c=new St(Js,Qs,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,r,s,o,a,l]=t;for(const c of t)this.remove(c);if(e===ei)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Ga)n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,l,c,u]=this.children,h=e.getRenderTarget(),f=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,r),e.render(t,s),e.setRenderTarget(n,1,r),e.render(t,o),e.setRenderTarget(n,2,r),e.render(t,a),e.setRenderTarget(n,3,r),e.render(t,l),e.setRenderTarget(n,4,r),e.render(t,c),n.texture.generateMipmaps=v,e.setRenderTarget(n,5,r),e.render(t,u),e.setRenderTarget(h,f,d),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class al extends At{constructor(e=[],t=rr,n,r,s,o,a,l,c,u){super(e,t,n,r,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class dx extends _i{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new al(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Ct}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Br(5,5,5),s=new gn({name:"CubemapFromEquirect",uniforms:Eo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:pn,blending:nr});s.uniforms.tEquirect.value=t;const o=new wt(r,s),a=t.minFilter;return t.minFilter===Xn&&(t.minFilter=Ct),new fx(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,n=!0,r=!0){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,r);e.setRenderTarget(s)}}class er extends ct{constructor(){super(),this.isGroup=!0,this.type="Group"}}const dT={type:"move"};class Sc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new er,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new er,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new F,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new F),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new er,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new F,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new F),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const v of e.hand.values()){const m=t.getJointPose(v,n),g=this._getHandJoint(c,v);m!==null&&(g.matrix.fromArray(m.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=m.radius),g.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,n),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(dT)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new er;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Zu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new we(e),this.density=t}clone(){return new Zu(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Ju{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new we(e),this.near=t,this.far=n}clone(){return new Ju(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Rs extends ct{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new In,this.environmentIntensity=1,this.environmentRotation=new In,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class Uo{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ha,this.updateRanges=[],this.version=0,this.uuid=Yn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[n+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Yn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Yn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const xn=new F;class zi{constructor(e,t,n,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)xn.fromBufferAttribute(this,t),xn.applyMatrix4(e),this.setXYZ(t,xn.x,xn.y,xn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)xn.fromBufferAttribute(this,t),xn.applyNormalMatrix(e),this.setXYZ(t,xn.x,xn.y,xn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)xn.fromBufferAttribute(this,t),xn.transformDirection(e),this.setXYZ(t,xn.x,xn.y,xn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=An(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Qe(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=Qe(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Qe(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Qe(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Qe(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=An(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=An(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=An(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=An(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Qe(t,this.array),n=Qe(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Qe(t,this.array),n=Qe(n,this.array),r=Qe(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=Qe(t,this.array),n=Qe(n,this.array),r=Qe(r,this.array),s=Qe(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return new lt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new zi(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class hp extends Yt{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new we(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let eo;const Yo=new F,to=new F,no=new F,io=new pe,qo=new pe,px=new ke,Fl=new F,$o=new F,Bl=new F,Ym=new pe,nf=new pe,qm=new pe;class mx extends ct{constructor(e=new hp){if(super(),this.isSprite=!0,this.type="Sprite",eo===void 0){eo=new Ze;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Uo(t,5);eo.setIndex([0,1,2,0,2,3]),eo.setAttribute("position",new zi(n,3,0,!1)),eo.setAttribute("uv",new zi(n,2,3,!1))}this.geometry=eo,this.material=e,this.center=new pe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),to.setFromMatrixScale(this.matrixWorld),px.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),no.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&to.multiplyScalar(-no.z);const n=this.material.rotation;let r,s;n!==0&&(s=Math.cos(n),r=Math.sin(n));const o=this.center;zl(Fl.set(-.5,-.5,0),no,o,to,r,s),zl($o.set(.5,-.5,0),no,o,to,r,s),zl(Bl.set(.5,.5,0),no,o,to,r,s),Ym.set(0,0),nf.set(1,0),qm.set(1,1);let a=e.ray.intersectTriangle(Fl,$o,Bl,!1,Yo);if(a===null&&(zl($o.set(-.5,.5,0),no,o,to,r,s),nf.set(0,1),a=e.ray.intersectTriangle(Fl,Bl,$o,!1,Yo),a===null))return;const l=e.ray.origin.distanceTo(Yo);l<e.near||l>e.far||t.push({distance:l,point:Yo.clone(),uv:Rn.getInterpolation(Yo,Fl,$o,Bl,Ym,nf,qm,new pe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function zl(i,e,t,n,r,s){io.subVectors(i,t).addScalar(.5).multiply(n),r!==void 0?(qo.x=s*io.x-r*io.y,qo.y=r*io.x+s*io.y):qo.copy(io),i.copy(e),i.x+=qo.x,i.y+=qo.y,i.applyMatrix4(px)}const kl=new F,$m=new F;class gx extends ct{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,r=t.length;n<r;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const r=this.levels;let s;for(s=0;s<r.length&&!(t<r[s].distance);s++);return r.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const r=t.splice(n,1);return this.remove(r[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,r;for(n=1,r=t.length;n<r;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){kl.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(kl);this.getObjectForDistance(r).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){kl.setFromMatrixPosition(e.matrixWorld),$m.setFromMatrixPosition(this.matrixWorld);const n=kl.distanceTo($m)/e.zoom;t[0].object.visible=!0;let r,s;for(r=1,s=t.length;r<s;r++){let o=t[r].distance;if(t[r].object.visible&&(o-=o*t[r].hysteresis),n>=o)t[r-1].object.visible=!1,t[r].object.visible=!0;else break}for(this._currentLevel=r-1;r<s;r++)t[r].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let r=0,s=n.length;r<s;r++){const o=n[r];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const Km=new F,Zm=new it,Jm=new it,pT=new F,Qm=new ke,Vl=new F,rf=new jt,eg=new ke,sf=new Fs;class fp extends wt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=id,this.bindMatrix=new ke,this.bindMatrixInverse=new ke,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Xt),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Vl),this.boundingBox.expandByPoint(Vl)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new jt),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Vl),this.boundingSphere.expandByPoint(Vl)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,r=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),rf.copy(this.boundingSphere),rf.applyMatrix4(r),e.ray.intersectsSphere(rf)!==!1&&(eg.copy(r).invert(),sf.copy(e.ray).applyMatrix4(eg),!(this.boundingBox!==null&&sf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,sf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new it,t=this.geometry.attributes.skinWeight;for(let n=0,r=t.count;n<r;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===id?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===j0?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,r=this.geometry;Zm.fromBufferAttribute(r.attributes.skinIndex,e),Jm.fromBufferAttribute(r.attributes.skinWeight,e),Km.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=Jm.getComponent(s);if(o!==0){const a=Zm.getComponent(s);Qm.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(pT.copy(Km).applyMatrix4(Qm),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Qu extends ct{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ni extends At{constructor(e=null,t=1,n=1,r,s,o,a,l,c=Lt,u=Lt,h,f){super(null,o,a,l,c,u,r,s,h,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const tg=new ke,mT=new ke;class ll{constructor(e=[],t=[]){this.uuid=Yn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new ke)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new ke;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:mT;tg.multiplyMatrices(a,t[s]),tg.toArray(n,s*16)}r!==null&&(r.needsUpdate=!0)}clone(){return new ll(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new ni(t,e,e,Qt,on);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const r=this.bones[t];if(r.name===e)return r}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,r=e.bones.length;n<r;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new Qu),this.bones.push(o),this.boneInverses.push(new ke().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let r=0,s=t.length;r<s;r++){const o=t[r];e.bones.push(o.uuid);const a=n[r];e.boneInverses.push(a.toArray())}return e}}class Cs extends lt{constructor(e,t,n,r=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ro=new ke,ng=new ke,Hl=[],ig=new Xt,gT=new ke,Ko=new wt,Zo=new jt;class dp extends wt{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Cs(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let r=0;r<n;r++)this.setMatrixAt(r,gT)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Xt),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ro),ig.copy(e.boundingBox).applyMatrix4(ro),this.boundingBox.union(ig)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new jt),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ro),Zo.copy(e.boundingSphere).applyMatrix4(ro),this.boundingSphere.union(Zo)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,r=this.morphTexture.source.data.data,s=n.length+1,o=e*s+1;for(let a=0;a<n.length;a++)n[a]=r[o+a]}raycast(e,t){const n=this.matrixWorld,r=this.count;if(Ko.geometry=this.geometry,Ko.material=this.material,Ko.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Zo.copy(this.boundingSphere),Zo.applyMatrix4(n),e.ray.intersectsSphere(Zo)!==!1))for(let s=0;s<r;s++){this.getMatrixAt(s,ro),ng.multiplyMatrices(n,ro),Ko.matrixWorld=ng,Ko.raycast(e,Hl);for(let o=0,a=Hl.length;o<a;o++){const l=Hl[o];l.instanceId=s,l.object=this,t.push(l)}Hl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Cs(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,r=n.length+1;this.morphTexture===null&&(this.morphTexture=new ni(new Float32Array(r*this.count),r,this.count,Wu,on));const s=this.morphTexture.source.data.data;let o=0;for(let c=0;c<n.length;c++)o+=n[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=r*e;s[l]=a,s.set(n,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const of=new F,vT=new F,_T=new Je;class Ii{constructor(e=new F(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=of.subVectors(n,t).cross(vT.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(of),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||_T.getNormalMatrix(e),r=this.coplanarPoint(of).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const $r=new jt,Gl=new F;class Oo{constructor(e=new Ii,t=new Ii,n=new Ii,r=new Ii,s=new Ii,o=new Ii){this.planes=[e,t,n,r,s,o]}set(e,t,n,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=ei){const n=this.planes,r=e.elements,s=r[0],o=r[1],a=r[2],l=r[3],c=r[4],u=r[5],h=r[6],f=r[7],d=r[8],p=r[9],v=r[10],m=r[11],g=r[12],M=r[13],b=r[14],y=r[15];if(n[0].setComponents(l-s,f-c,m-d,y-g).normalize(),n[1].setComponents(l+s,f+c,m+d,y+g).normalize(),n[2].setComponents(l+o,f+u,m+p,y+M).normalize(),n[3].setComponents(l-o,f-u,m-p,y-M).normalize(),n[4].setComponents(l-a,f-h,m-v,y-b).normalize(),t===ei)n[5].setComponents(l+a,f+h,m+v,y+b).normalize();else if(t===Ga)n[5].setComponents(a,h,v,b).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),$r.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),$r.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere($r)}intersectsSprite(e){return $r.center.set(0,0,0),$r.radius=.7071067811865476,$r.applyMatrix4(e.matrixWorld),this.intersectsSphere($r)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Gl.x=r.normal.x>0?e.max.x:e.min.x,Gl.y=r.normal.y>0?e.max.y:e.min.y,Gl.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Gl)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const Ti=new ke,Ei=new Oo;class eh{constructor(){this.coordinateSystem=ei}intersectsObject(e,t){if(!t.isArrayCamera||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const r=t.cameras[n];if(Ti.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),Ei.setFromProjectionMatrix(Ti,this.coordinateSystem),Ei.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const r=t.cameras[n];if(Ti.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),Ei.setFromProjectionMatrix(Ti,this.coordinateSystem),Ei.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const r=t.cameras[n];if(Ti.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),Ei.setFromProjectionMatrix(Ti,this.coordinateSystem),Ei.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const r=t.cameras[n];if(Ti.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),Ei.setFromProjectionMatrix(Ti,this.coordinateSystem),Ei.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const r=t.cameras[n];if(Ti.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),Ei.setFromProjectionMatrix(Ti,this.coordinateSystem),Ei.containsPoint(e))return!0}return!1}clone(){return new eh}}function af(i,e){return i-e}function xT(i,e){return i.z-e.z}function yT(i,e){return e.z-i.z}class bT{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,r){const s=this.pool,o=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const a=s[this.index];o.push(a),this.index++,a.start=e,a.count=t,a.z=n,a.index=r}reset(){this.list.length=0,this.index=0}}const Dn=new ke,MT=new we(1,1,1),rg=new Oo,ST=new eh,Wl=new Xt,Kr=new jt,Jo=new F,sg=new F,wT=new F,lf=new bT,hn=new wt,Xl=[];function TT(i,e,t=0){const n=e.itemSize;if(i.isInterleavedBufferAttribute||i.array.constructor!==e.array.constructor){const r=i.count;for(let s=0;s<r;s++)for(let o=0;o<n;o++)e.setComponent(s+t,o,i.getComponent(s,o))}else e.array.set(i.array,t*n);e.needsUpdate=!0}function Zr(i,e){if(i.constructor!==e.constructor){const t=Math.min(i.length,e.length);for(let n=0;n<t;n++)e[n]=i[n]}else{const t=Math.min(i.length,e.length);e.set(new i.constructor(i.buffer,0,t))}}class vx extends wt{constructor(e,t,n=t*2,r){super(new Ze,r),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new ni(t,e,e,Qt,on);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new ni(t,e,e,il,or);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new ni(t,e,e,Qt,on);n.colorSpace=at.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,r=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in e.attributes){const o=e.getAttribute(s),{array:a,itemSize:l,normalized:c}=o,u=new a.constructor(n*l),h=new lt(u,l,c);t.setAttribute(s,h)}if(e.getIndex()!==null){const s=n>65535?new Uint32Array(r):new Uint16Array(r);t.setIndex(new lt(s,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const r=e.getAttribute(n),s=t.getAttribute(n);if(r.itemSize!==s.itemSize||r.normalized!==s.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Xt);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,r=t.length;n<r;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Dn),this.getBoundingBoxAt(s,Wl).applyMatrix4(Dn),e.union(Wl)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new jt);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,r=t.length;n<r;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Dn),this.getBoundingSphereAt(s,Kr).applyMatrix4(Dn),e.union(Kr)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let r=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(af),r=this._availableInstanceIds.shift(),this._instanceInfo[r]=n):(r=this._instanceInfo.length,this._instanceInfo.push(n));const s=this._matricesTexture;Dn.identity().toArray(s.image.data,r*16),s.needsUpdate=!0;const o=this._colorsTexture;return o&&(MT.toArray(o.image.data,r*4),o.needsUpdate=!0),this._visibilityChanged=!0,r}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const r={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;r.vertexStart=this._nextVertexStart,r.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const o=e.getIndex();if(o!==null&&(r.indexStart=this._nextIndexStart,r.reservedIndexCount=n===-1?o.count:n),r.indexStart!==-1&&r.indexStart+r.reservedIndexCount>this._maxIndexCount||r.vertexStart+r.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(af),l=this._availableGeometryIds.shift(),s[l]=r):(l=this._geometryCount,this._geometryCount++,s.push(r)),this.setGeometryAt(l,e),this._nextIndexStart=r.indexStart+r.reservedIndexCount,this._nextVertexStart=r.vertexStart+r.reservedVertexCount,l}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,r=n.getIndex()!==null,s=n.getIndex(),o=t.getIndex(),a=this._geometryInfo[e];if(r&&o.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const u in n.attributes){const h=t.getAttribute(u),f=n.getAttribute(u);TT(h,f,l);const d=h.itemSize;for(let p=h.count,v=c;p<v;p++){const m=l+p;for(let g=0;g<d;g++)f.setComponent(m,g,0)}f.needsUpdate=!0,f.addUpdateRange(l*d,c*d)}if(r){const u=a.indexStart,h=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let f=0;f<o.count;f++)s.setX(u+f,l+o.getX(f));for(let f=o.count,d=h;f<d;f++)s.setX(u+f,l);s.needsUpdate=!0,s.addUpdateRange(u,a.reservedIndexCount)}return a.start=r?a.indexStart:a.vertexStart,a.count=r?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let r=0,s=n.length;r<s;r++)n[r].active&&n[r].geometryIndex===e&&this.deleteInstance(r);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,r=n.map((o,a)=>a).sort((o,a)=>n[o].vertexStart-n[a].vertexStart),s=this.geometry;for(let o=0,a=n.length;o<a;o++){const l=r[o],c=n[l];if(c.active!==!1){if(s.index!==null){if(c.indexStart!==t){const{indexStart:u,vertexStart:h,reservedIndexCount:f}=c,d=s.index,p=d.array,v=e-h;for(let m=u;m<u+f;m++)p[m]=p[m]+v;d.array.copyWithin(t,u,u+f),d.addUpdateRange(t,f),c.indexStart=t}t+=c.reservedIndexCount}if(c.vertexStart!==e){const{vertexStart:u,reservedVertexCount:h}=c,f=s.attributes;for(const d in f){const p=f[d],{array:v,itemSize:m}=p;v.copyWithin(e*m,u*m,(u+h)*m),p.addUpdateRange(e*m,h*m)}c.vertexStart=e}e+=c.reservedVertexCount,c.start=s.index?c.indexStart:c.vertexStart,this._nextIndexStart=s.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,r=this._geometryInfo[e];if(r.boundingBox===null){const s=new Xt,o=n.index,a=n.attributes.position;for(let l=r.start,c=r.start+r.count;l<c;l++){let u=l;o&&(u=o.getX(u)),s.expandByPoint(Jo.fromBufferAttribute(a,u))}r.boundingBox=s}return t.copy(r.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,r=this._geometryInfo[e];if(r.boundingSphere===null){const s=new jt;this.getBoundingBoxAt(e,Wl),Wl.getCenter(s.center);const o=n.index,a=n.attributes.position;let l=0;for(let c=r.start,u=r.start+r.count;c<u;c++){let h=c;o&&(h=o.getX(h)),Jo.fromBufferAttribute(a,h),l=Math.max(l,s.center.distanceToSquared(Jo))}s.radius=Math.sqrt(l),r.boundingSphere=s}return t.copy(r.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,r=this._matricesTexture.image.data;return t.toArray(r,e*16),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(af);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const r=new Int32Array(e),s=new Int32Array(e);Zr(this._multiDrawCounts,r),Zr(this._multiDrawStarts,s),this._multiDrawCounts=r,this._multiDrawStarts=s,this._maxInstanceCount=e;const o=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;o.dispose(),this._initIndirectTexture(),Zr(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),Zr(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),Zr(l.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...n.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(l=>l.indexStart+l.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const s=this.geometry;s.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new Ze,this._initializeGeometry(s));const o=this.geometry;s.index&&Zr(s.index.array,o.index.array);for(const a in s.attributes)Zr(s.attributes[a].array,o.attributes[a].array)}raycast(e,t){const n=this._instanceInfo,r=this._geometryInfo,s=this.matrixWorld,o=this.geometry;hn.material=this.material,hn.geometry.index=o.index,hn.geometry.attributes=o.attributes,hn.geometry.boundingBox===null&&(hn.geometry.boundingBox=new Xt),hn.geometry.boundingSphere===null&&(hn.geometry.boundingSphere=new jt);for(let a=0,l=n.length;a<l;a++){if(!n[a].visible||!n[a].active)continue;const c=n[a].geometryIndex,u=r[c];hn.geometry.setDrawRange(u.start,u.count),this.getMatrixAt(a,hn.matrixWorld).premultiply(s),this.getBoundingBoxAt(c,hn.geometry.boundingBox),this.getBoundingSphereAt(c,hn.geometry.boundingSphere),hn.raycast(e,Xl);for(let h=0,f=Xl.length;h<f;h++){const d=Xl[h];d.object=this,d.batchId=a,t.push(d)}Xl.length=0}hn.material=null,hn.geometry.index=null,hn.geometry.attributes={},hn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._availableInstanceIds=e._availableInstanceIds.slice(),this._availableGeometryIds=e._availableGeometryIds.slice(),this._nextIndexStart=e._nextIndexStart,this._nextVertexStart=e._nextVertexStart,this._geometryCount=e._geometryCount,this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._indirectTexture=e._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,n,r,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=r.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,u=this._multiDrawCounts,h=this._geometryInfo,f=this.perObjectFrustumCulled,d=this._indirectTexture,p=d.image.data,v=n.isArrayCamera?ST:rg;f&&!n.isArrayCamera&&(Dn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),rg.setFromProjectionMatrix(Dn,e.coordinateSystem));let m=0;if(this.sortObjects){Dn.copy(this.matrixWorld).invert(),Jo.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Dn),sg.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Dn);for(let b=0,y=l.length;b<y;b++)if(l[b].visible&&l[b].active){const C=l[b].geometryIndex;this.getMatrixAt(b,Dn),this.getBoundingSphereAt(C,Kr).applyMatrix4(Dn);let w=!1;if(f&&(w=!v.intersectsSphere(Kr,n)),!w){const E=h[C],S=wT.subVectors(Kr.center,Jo).dot(sg);lf.push(E.start,E.count,S,b)}}const g=lf.list,M=this.customSort;M===null?g.sort(s.transparent?yT:xT):M.call(this,g,n);for(let b=0,y=g.length;b<y;b++){const C=g[b];c[m]=C.start*a,u[m]=C.count,p[m]=C.index,m++}lf.reset()}else for(let g=0,M=l.length;g<M;g++)if(l[g].visible&&l[g].active){const b=l[g].geometryIndex;let y=!1;if(f&&(this.getMatrixAt(g,Dn),this.getBoundingSphereAt(b,Kr).applyMatrix4(Dn),y=!v.intersectsSphere(Kr,n)),!y){const C=h[b];c[m]=C.start*a,u[m]=C.count,p[m]=g,m++}}d.needsUpdate=!0,this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(e,t,n,r,s,o){this.onBeforeRender(e,null,r,s,o)}}class vn extends Yt{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new we(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const xu=new F,yu=new F,og=new ke,Qo=new Fs,jl=new jt,cf=new F,ag=new F;class ar extends ct{constructor(e=new Ze,t=new vn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let r=1,s=t.count;r<s;r++)xu.fromBufferAttribute(t,r-1),yu.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=xu.distanceTo(yu);e.setAttribute("lineDistance",new Fe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),jl.copy(n.boundingSphere),jl.applyMatrix4(r),jl.radius+=s,e.ray.intersectsSphere(jl)===!1)return;og.copy(r).invert(),Qo.copy(e.ray).applyMatrix4(og);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,u=n.index,f=n.attributes.position;if(u!==null){const d=Math.max(0,o.start),p=Math.min(u.count,o.start+o.count);for(let v=d,m=p-1;v<m;v+=c){const g=u.getX(v),M=u.getX(v+1),b=Yl(this,e,Qo,l,g,M,v);b&&t.push(b)}if(this.isLineLoop){const v=u.getX(p-1),m=u.getX(d),g=Yl(this,e,Qo,l,v,m,p-1);g&&t.push(g)}}else{const d=Math.max(0,o.start),p=Math.min(f.count,o.start+o.count);for(let v=d,m=p-1;v<m;v+=c){const g=Yl(this,e,Qo,l,v,v+1,v);g&&t.push(g)}if(this.isLineLoop){const v=Yl(this,e,Qo,l,p-1,d,p-1);v&&t.push(v)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function Yl(i,e,t,n,r,s,o){const a=i.geometry.attributes.position;if(xu.fromBufferAttribute(a,r),yu.fromBufferAttribute(a,s),t.distanceSqToSegment(xu,yu,cf,ag)>n)return;cf.applyMatrix4(i.matrixWorld);const c=e.ray.origin.distanceTo(cf);if(!(c<e.near||c>e.far))return{distance:c,point:ag.clone().applyMatrix4(i.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:i}}const lg=new F,cg=new F;class Mi extends ar{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let r=0,s=t.count;r<s;r+=2)lg.fromBufferAttribute(t,r),cg.fromBufferAttribute(t,r+1),n[r]=r===0?0:n[r-1],n[r+1]=n[r]+lg.distanceTo(cg);e.setAttribute("lineDistance",new Fe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class pp extends ar{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class th extends Yt{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new we(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const ug=new ke,od=new Fs,ql=new jt,$l=new F;class mp extends ct{constructor(e=new Ze,t=new th){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ql.copy(n.boundingSphere),ql.applyMatrix4(r),ql.radius+=s,e.ray.intersectsSphere(ql)===!1)return;ug.copy(r).invert(),od.copy(e.ray).applyMatrix4(ug);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,h=n.attributes.position;if(c!==null){const f=Math.max(0,o.start),d=Math.min(c.count,o.start+o.count);for(let p=f,v=d;p<v;p++){const m=c.getX(p);$l.fromBufferAttribute(h,m),hg($l,m,l,r,e,t,this)}}else{const f=Math.max(0,o.start),d=Math.min(h.count,o.start+o.count);for(let p=f,v=d;p<v;p++)$l.fromBufferAttribute(h,p),hg($l,p,l,r,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function hg(i,e,t,n,r,s,o){const a=od.distanceSqToPoint(i);if(a<t){const l=new F;od.closestPointToPoint(i,l),l.applyMatrix4(n);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class _x extends At{constructor(e,t,n,r,s=Ct,o=Ct,a,l,c){super(e,t,n,r,s,o,a,l,c),this.isVideoTexture=!0,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class ET extends _x{constructor(e,t,n,r,s,o,a,l){super({},e,t,n,r,s,o,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class AT extends At{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Lt,this.minFilter=Lt,this.generateMipmaps=!1,this.needsUpdate=!0}}class ys extends At{constructor(e,t,n,r,s,o,a,l,c,u,h,f){super(null,o,a,l,c,u,r,s,h,f),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class RT extends ys{constructor(e,t,n,r,s,o){super(e,t,n,s,o),this.isCompressedArrayTexture=!0,this.image.depth=r,this.wrapR=Jt,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class CT extends ys{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,rr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class IT extends At{constructor(e,t,n,r,s,o,a,l,c){super(e,t,n,r,s,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class nh extends At{constructor(e,t,n=or,r,s,o,a=Lt,l=Lt,c,u=So){if(u!==So&&u!==wo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,r,s,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Ar(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class PT extends nh{constructor(e=1,t=1,n=1){super(e,t),this.isDepthArrayTexture=!0,this.image={width:e,height:t,depth:n},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class ih extends Ze{constructor(e=1,t=1,n=4,r=8,s=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:r,heightSegments:s},t=Math.max(0,t),n=Math.max(1,Math.floor(n)),r=Math.max(3,Math.floor(r)),s=Math.max(1,Math.floor(s));const o=[],a=[],l=[],c=[],u=t/2,h=Math.PI/2*e,f=t,d=2*h+f,p=n*2+s,v=r+1,m=new F,g=new F;for(let M=0;M<=p;M++){let b=0,y=0,C=0,w=0;if(M<=n){const x=M/n,_=x*Math.PI/2;y=-u-e*Math.cos(_),C=e*Math.sin(_),w=-e*Math.cos(_),b=x*h}else if(M<=n+s){const x=(M-n)/s;y=-u+x*t,C=e,w=0,b=h+x*f}else{const x=(M-n-s)/n,_=x*Math.PI/2;y=u+e*Math.sin(_),C=e*Math.cos(_),w=e*Math.sin(_),b=h+f+x*h}const E=Math.max(0,Math.min(1,b/d));let S=0;M===0?S=.5/r:M===p&&(S=-.5/r);for(let x=0;x<=r;x++){const _=x/r,A=_*Math.PI*2,N=Math.sin(A),B=Math.cos(A);g.x=-C*B,g.y=y,g.z=C*N,a.push(g.x,g.y,g.z),m.set(-C*B,w,C*N),m.normalize(),l.push(m.x,m.y,m.z),c.push(_+S,E)}if(M>0){const x=(M-1)*v;for(let _=0;_<r;_++){const A=x+_,N=x+_+1,B=M*v+_,V=M*v+_+1;o.push(A,N,B),o.push(N,V,B)}}}this.setIndex(o),this.setAttribute("position",new Fe(a,3)),this.setAttribute("normal",new Fe(l,3)),this.setAttribute("uv",new Fe(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ih(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class rh extends Ze{constructor(e=1,t=32,n=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},t=Math.max(3,t);const s=[],o=[],a=[],l=[],c=new F,u=new pe;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,f=3;h<=t;h++,f+=3){const d=n+h/t*r;c.x=e*Math.cos(d),c.y=e*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[f]/e+1)/2,u.y=(o[f+1]/e+1)/2,l.push(u.x,u.y)}for(let h=1;h<=t;h++)s.push(h,h+1,0);this.setIndex(s),this.setAttribute("position",new Fe(o,3)),this.setAttribute("normal",new Fe(a,3)),this.setAttribute("uv",new Fe(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rh(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class cl extends Ze{constructor(e=1,t=1,n=1,r=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const u=[],h=[],f=[],d=[];let p=0;const v=[],m=n/2;let g=0;M(),o===!1&&(e>0&&b(!0),t>0&&b(!1)),this.setIndex(u),this.setAttribute("position",new Fe(h,3)),this.setAttribute("normal",new Fe(f,3)),this.setAttribute("uv",new Fe(d,2));function M(){const y=new F,C=new F;let w=0;const E=(t-e)/n;for(let S=0;S<=s;S++){const x=[],_=S/s,A=_*(t-e)+e;for(let N=0;N<=r;N++){const B=N/r,V=B*l+a,X=Math.sin(V),z=Math.cos(V);C.x=A*X,C.y=-_*n+m,C.z=A*z,h.push(C.x,C.y,C.z),y.set(X,E,z).normalize(),f.push(y.x,y.y,y.z),d.push(B,1-_),x.push(p++)}v.push(x)}for(let S=0;S<r;S++)for(let x=0;x<s;x++){const _=v[x][S],A=v[x+1][S],N=v[x+1][S+1],B=v[x][S+1];(e>0||x!==0)&&(u.push(_,A,B),w+=3),(t>0||x!==s-1)&&(u.push(A,N,B),w+=3)}c.addGroup(g,w,0),g+=w}function b(y){const C=p,w=new pe,E=new F;let S=0;const x=y===!0?e:t,_=y===!0?1:-1;for(let N=1;N<=r;N++)h.push(0,m*_,0),f.push(0,_,0),d.push(.5,.5),p++;const A=p;for(let N=0;N<=r;N++){const V=N/r*l+a,X=Math.cos(V),z=Math.sin(V);E.x=x*z,E.y=m*_,E.z=x*X,h.push(E.x,E.y,E.z),f.push(0,_,0),w.x=X*.5+.5,w.y=z*.5*_+.5,d.push(w.x,w.y),p++}for(let N=0;N<r;N++){const B=C+N,V=A+N;y===!0?u.push(V,V+1,B):u.push(V+1,V,B),S+=3}c.addGroup(g,S,y===!0?1:2),g+=S}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new cl(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ul extends cl{constructor(e=1,t=1,n=32,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new ul(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class zr extends Ze{constructor(e=[],t=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};const s=[],o=[];a(r),c(n),u(),this.setAttribute("position",new Fe(s,3)),this.setAttribute("normal",new Fe(s.slice(),3)),this.setAttribute("uv",new Fe(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(M){const b=new F,y=new F,C=new F;for(let w=0;w<t.length;w+=3)d(t[w+0],b),d(t[w+1],y),d(t[w+2],C),l(b,y,C,M)}function l(M,b,y,C){const w=C+1,E=[];for(let S=0;S<=w;S++){E[S]=[];const x=M.clone().lerp(y,S/w),_=b.clone().lerp(y,S/w),A=w-S;for(let N=0;N<=A;N++)N===0&&S===w?E[S][N]=x:E[S][N]=x.clone().lerp(_,N/A)}for(let S=0;S<w;S++)for(let x=0;x<2*(w-S)-1;x++){const _=Math.floor(x/2);x%2===0?(f(E[S][_+1]),f(E[S+1][_]),f(E[S][_])):(f(E[S][_+1]),f(E[S+1][_+1]),f(E[S+1][_]))}}function c(M){const b=new F;for(let y=0;y<s.length;y+=3)b.x=s[y+0],b.y=s[y+1],b.z=s[y+2],b.normalize().multiplyScalar(M),s[y+0]=b.x,s[y+1]=b.y,s[y+2]=b.z}function u(){const M=new F;for(let b=0;b<s.length;b+=3){M.x=s[b+0],M.y=s[b+1],M.z=s[b+2];const y=m(M)/2/Math.PI+.5,C=g(M)/Math.PI+.5;o.push(y,1-C)}p(),h()}function h(){for(let M=0;M<o.length;M+=6){const b=o[M+0],y=o[M+2],C=o[M+4],w=Math.max(b,y,C),E=Math.min(b,y,C);w>.9&&E<.1&&(b<.2&&(o[M+0]+=1),y<.2&&(o[M+2]+=1),C<.2&&(o[M+4]+=1))}}function f(M){s.push(M.x,M.y,M.z)}function d(M,b){const y=M*3;b.x=e[y+0],b.y=e[y+1],b.z=e[y+2]}function p(){const M=new F,b=new F,y=new F,C=new F,w=new pe,E=new pe,S=new pe;for(let x=0,_=0;x<s.length;x+=9,_+=6){M.set(s[x+0],s[x+1],s[x+2]),b.set(s[x+3],s[x+4],s[x+5]),y.set(s[x+6],s[x+7],s[x+8]),w.set(o[_+0],o[_+1]),E.set(o[_+2],o[_+3]),S.set(o[_+4],o[_+5]),C.copy(M).add(b).add(y).divideScalar(3);const A=m(C);v(w,_+0,M,A),v(E,_+2,b,A),v(S,_+4,y,A)}}function v(M,b,y,C){C<0&&M.x===1&&(o[b]=M.x-1),y.x===0&&y.z===0&&(o[b]=C/2/Math.PI+.5)}function m(M){return Math.atan2(M.z,-M.x)}function g(M){return Math.atan2(-M.y,Math.sqrt(M.x*M.x+M.z*M.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zr(e.vertices,e.indices,e.radius,e.details)}}class sh extends zr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new sh(e.radius,e.detail)}}const Kl=new F,Zl=new F,uf=new F,Jl=new Rn;class xx extends Ze{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const r=Math.pow(10,4),s=Math.cos(xs*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:v,b:m,c:g}=Jl;if(v.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),g.fromBufferAttribute(a,c[2]),Jl.getNormal(uf),h[0]=`${Math.round(v.x*r)},${Math.round(v.y*r)},${Math.round(v.z*r)}`,h[1]=`${Math.round(m.x*r)},${Math.round(m.y*r)},${Math.round(m.z*r)}`,h[2]=`${Math.round(g.x*r)},${Math.round(g.y*r)},${Math.round(g.z*r)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let M=0;M<3;M++){const b=(M+1)%3,y=h[M],C=h[b],w=Jl[u[M]],E=Jl[u[b]],S=`${y}_${C}`,x=`${C}_${y}`;x in f&&f[x]?(uf.dot(f[x].normal)<=s&&(d.push(w.x,w.y,w.z),d.push(E.x,E.y,E.z)),f[x]=null):S in f||(f[S]={index0:c[M],index1:c[b],normal:uf.clone()})}}for(const p in f)if(f[p]){const{index0:v,index1:m}=f[p];Kl.fromBufferAttribute(a,v),Zl.fromBufferAttribute(a,m),d.push(Kl.x,Kl.y,Kl.z),d.push(Zl.x,Zl.y,Zl.z)}this.setAttribute("position",new Fe(d,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Si{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,r=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(r),t.push(s),r=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const n=this.getLengths();let r=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(r=Math.floor(a+(l-a)/2),c=n[r]-o,c<0)a=r+1;else if(c>0)l=r-1;else{l=r;break}if(r=l,n[r]===o)return r/(s-1);const u=n[r],f=n[r+1]-u,d=(o-u)/f;return(r+d)/(s-1)}getTangent(e,t){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const o=this.getPoint(r),a=this.getPoint(s),l=t||(o.isVector2?new pe:new F);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){const n=new F,r=[],s=[],o=[],a=new F,l=new ke;for(let d=0;d<=e;d++){const p=d/e;r[d]=this.getTangentAt(p,new F)}s[0]=new F,o[0]=new F;let c=Number.MAX_VALUE;const u=Math.abs(r[0].x),h=Math.abs(r[0].y),f=Math.abs(r[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),f<=c&&n.set(0,0,1),a.crossVectors(r[0],n).normalize(),s[0].crossVectors(r[0],a),o[0].crossVectors(r[0],s[0]);for(let d=1;d<=e;d++){if(s[d]=s[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(r[d-1],r[d]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Ke(r[d-1].dot(r[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(a,p))}o[d].crossVectors(r[d],s[d])}if(t===!0){let d=Math.acos(Ke(s[0].dot(s[e]),-1,1));d/=e,r[0].dot(a.crossVectors(s[0],s[e]))>0&&(d=-d);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(r[p],d*p)),o[p].crossVectors(r[p],s[p])}return{tangents:r,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class oh extends Si{constructor(e=0,t=0,n=1,r=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new pe){const n=t,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(o?s=0:s=r),this.aClockwise===!0&&!o&&(s===r?s=-r:s=s-r);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class yx extends oh{constructor(e,t,n,r,s,o){super(e,t,n,n,r,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function gp(){let i=0,e=0,t=0,n=0;function r(s,o,a,l){i=s,e=a,t=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let f=(o-s)/c-(a-s)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+h)+(l-a)/h;f*=u,d*=u,r(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return i+e*s+t*o+n*a}}}const Ql=new F,hf=new gp,ff=new gp,df=new gp;class bx extends Si{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(e,t=new F){const n=t,r=this.points,s=r.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=r[(a-1)%s]:(Ql.subVectors(r[0],r[1]).add(r[0]),c=Ql);const h=r[a%s],f=r[(a+1)%s];if(this.closed||a+2<s?u=r[(a+2)%s]:(Ql.subVectors(r[s-1],r[s-2]).add(r[s-1]),u=Ql),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),d),v=Math.pow(h.distanceToSquared(f),d),m=Math.pow(f.distanceToSquared(u),d);v<1e-4&&(v=1),p<1e-4&&(p=v),m<1e-4&&(m=v),hf.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,p,v,m),ff.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,p,v,m),df.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,p,v,m)}else this.curveType==="catmullrom"&&(hf.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),ff.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),df.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return n.set(hf.calc(l),ff.calc(l),df.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new F().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function fg(i,e,t,n,r){const s=(n-e)*.5,o=(r-t)*.5,a=i*i,l=i*a;return(2*t-2*n+s+o)*l+(-3*t+3*n-2*s-o)*a+s*i+t}function LT(i,e){const t=1-i;return t*t*e}function DT(i,e){return 2*(1-i)*i*e}function NT(i,e){return i*i*e}function wa(i,e,t,n){return LT(i,e)+DT(i,t)+NT(i,n)}function UT(i,e){const t=1-i;return t*t*t*e}function OT(i,e){const t=1-i;return 3*t*t*i*e}function FT(i,e){return 3*(1-i)*i*i*e}function BT(i,e){return i*i*i*e}function Ta(i,e,t,n,r){return UT(i,e)+OT(i,t)+FT(i,n)+BT(i,r)}class vp extends Si{constructor(e=new pe,t=new pe,n=new pe,r=new pe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new pe){const n=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Ta(e,r.x,s.x,o.x,a.x),Ta(e,r.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Mx extends Si{constructor(e=new F,t=new F,n=new F,r=new F){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new F){const n=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Ta(e,r.x,s.x,o.x,a.x),Ta(e,r.y,s.y,o.y,a.y),Ta(e,r.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class _p extends Si{constructor(e=new pe,t=new pe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new pe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new pe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Sx extends Si{constructor(e=new F,t=new F){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new F){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new F){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class xp extends Si{constructor(e=new pe,t=new pe,n=new pe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new pe){const n=t,r=this.v0,s=this.v1,o=this.v2;return n.set(wa(e,r.x,s.x,o.x),wa(e,r.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class yp extends Si{constructor(e=new F,t=new F,n=new F){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new F){const n=t,r=this.v0,s=this.v1,o=this.v2;return n.set(wa(e,r.x,s.x,o.x),wa(e,r.y,s.y,o.y),wa(e,r.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class bp extends Si{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new pe){const n=t,r=this.points,s=(r.length-1)*e,o=Math.floor(s),a=s-o,l=r[o===0?o:o-1],c=r[o],u=r[o>r.length-2?r.length-1:o+1],h=r[o>r.length-3?r.length-1:o+2];return n.set(fg(a,l.x,c.x,u.x,h.x),fg(a,l.y,c.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new pe().fromArray(r))}return this}}var bu=Object.freeze({__proto__:null,ArcCurve:yx,CatmullRomCurve3:bx,CubicBezierCurve:vp,CubicBezierCurve3:Mx,EllipseCurve:oh,LineCurve:_p,LineCurve3:Sx,QuadraticBezierCurve:xp,QuadraticBezierCurve3:yp,SplineCurve:bp});class wx extends Si{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new bu[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),r=this.getCurveLengths();let s=0;for(;s<r.length;){if(r[s]>=n){const o=r[s]-n,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let r=0,s=this.curves;r<s.length;r++){const o=s[r],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const r=e.curves[t];this.curves.push(new bu[r.type]().fromJSON(r))}return this}}class Mu extends wx{constructor(e){super(),this.type="Path",this.currentPoint=new pe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new _p(this.currentPoint.clone(),new pe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){const s=new xp(this.currentPoint.clone(),new pe(e,t),new pe(n,r));return this.curves.push(s),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,s,o){const a=new vp(this.currentPoint.clone(),new pe(e,t),new pe(n,r),new pe(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new bp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,r,s,o),this}absarc(e,t,n,r,s,o){return this.absellipse(e,t,n,n,r,s,o),this}ellipse(e,t,n,r,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,n,r,s,o,a,l),this}absellipse(e,t,n,r,s,o,a,l){const c=new oh(e,t,n,r,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class bs extends Mu{constructor(e){super(e),this.uuid=Yn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const r=e.holes[t];this.holes.push(new Mu().fromJSON(r))}return this}}function zT(i,e,t=2){const n=e&&e.length,r=n?e[0]*t:i.length;let s=Tx(i,0,r,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c;if(n&&(s=WT(i,e,s,t)),i.length>80*t){a=1/0,l=1/0;let u=-1/0,h=-1/0;for(let f=t;f<r;f+=t){const d=i[f],p=i[f+1];d<a&&(a=d),p<l&&(l=p),d>u&&(u=d),p>h&&(h=p)}c=Math.max(u-a,h-l),c=c!==0?32767/c:0}return Xa(s,o,t,a,l,c,0),o}function Tx(i,e,t,n,r){let s;if(r===tE(i,e,t,n)>0)for(let o=e;o<t;o+=n)s=dg(o/n|0,i[o],i[o+1],s);else for(let o=t-n;o>=e;o-=n)s=dg(o/n|0,i[o],i[o+1],s);return s&&Ao(s,s.next)&&(Ya(s),s=s.next),s}function Is(i,e){if(!i)return i;e||(e=i);let t=i,n;do if(n=!1,!t.steiner&&(Ao(t,t.next)||Dt(t.prev,t,t.next)===0)){if(Ya(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Xa(i,e,t,n,r,s,o){if(!i)return;!o&&s&&$T(i,n,r,s);let a=i;for(;i.prev!==i.next;){const l=i.prev,c=i.next;if(s?VT(i,n,r,s):kT(i)){e.push(l.i,i.i,c.i),Ya(i),i=c.next,a=c.next;continue}if(i=c,i===a){o?o===1?(i=HT(Is(i),e),Xa(i,e,t,n,r,s,2)):o===2&&GT(i,e,t,n,r,s):Xa(Is(i),e,t,n,r,s,1);break}}}function kT(i){const e=i.prev,t=i,n=i.next;if(Dt(e,t,n)>=0)return!1;const r=e.x,s=t.x,o=n.x,a=e.y,l=t.y,c=n.y,u=Math.min(r,s,o),h=Math.min(a,l,c),f=Math.max(r,s,o),d=Math.max(a,l,c);let p=n.next;for(;p!==e;){if(p.x>=u&&p.x<=f&&p.y>=h&&p.y<=d&&la(r,a,s,l,o,c,p.x,p.y)&&Dt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function VT(i,e,t,n){const r=i.prev,s=i,o=i.next;if(Dt(r,s,o)>=0)return!1;const a=r.x,l=s.x,c=o.x,u=r.y,h=s.y,f=o.y,d=Math.min(a,l,c),p=Math.min(u,h,f),v=Math.max(a,l,c),m=Math.max(u,h,f),g=ad(d,p,e,t,n),M=ad(v,m,e,t,n);let b=i.prevZ,y=i.nextZ;for(;b&&b.z>=g&&y&&y.z<=M;){if(b.x>=d&&b.x<=v&&b.y>=p&&b.y<=m&&b!==r&&b!==o&&la(a,u,l,h,c,f,b.x,b.y)&&Dt(b.prev,b,b.next)>=0||(b=b.prevZ,y.x>=d&&y.x<=v&&y.y>=p&&y.y<=m&&y!==r&&y!==o&&la(a,u,l,h,c,f,y.x,y.y)&&Dt(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;b&&b.z>=g;){if(b.x>=d&&b.x<=v&&b.y>=p&&b.y<=m&&b!==r&&b!==o&&la(a,u,l,h,c,f,b.x,b.y)&&Dt(b.prev,b,b.next)>=0)return!1;b=b.prevZ}for(;y&&y.z<=M;){if(y.x>=d&&y.x<=v&&y.y>=p&&y.y<=m&&y!==r&&y!==o&&la(a,u,l,h,c,f,y.x,y.y)&&Dt(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function HT(i,e){let t=i;do{const n=t.prev,r=t.next.next;!Ao(n,r)&&Ax(n,t,t.next,r)&&ja(n,r)&&ja(r,n)&&(e.push(n.i,t.i,r.i),Ya(t),Ya(t.next),t=i=r),t=t.next}while(t!==i);return Is(t)}function GT(i,e,t,n,r,s){let o=i;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&JT(o,a)){let l=Rx(o,a);o=Is(o,o.next),l=Is(l,l.next),Xa(o,e,t,n,r,s,0),Xa(l,e,t,n,r,s,0);return}a=a.next}o=o.next}while(o!==i)}function WT(i,e,t,n){const r=[];for(let s=0,o=e.length;s<o;s++){const a=e[s]*n,l=s<o-1?e[s+1]*n:i.length,c=Tx(i,a,l,n,!1);c===c.next&&(c.steiner=!0),r.push(ZT(c))}r.sort(XT);for(let s=0;s<r.length;s++)t=jT(r[s],t);return t}function XT(i,e){let t=i.x-e.x;if(t===0&&(t=i.y-e.y,t===0)){const n=(i.next.y-i.y)/(i.next.x-i.x),r=(e.next.y-e.y)/(e.next.x-e.x);t=n-r}return t}function jT(i,e){const t=YT(i,e);if(!t)return e;const n=Rx(t,i);return Is(n,n.next),Is(t,t.next)}function YT(i,e){let t=e;const n=i.x,r=i.y;let s=-1/0,o;if(Ao(i,t))return t;do{if(Ao(i,t.next))return t.next;if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const h=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(h<=n&&h>s&&(s=h,o=t.x<t.next.x?t:t.next,h===n))return o}t=t.next}while(t!==e);if(!o)return null;const a=o,l=o.x,c=o.y;let u=1/0;t=o;do{if(n>=t.x&&t.x>=l&&n!==t.x&&Ex(r<c?n:s,r,l,c,r<c?s:n,r,t.x,t.y)){const h=Math.abs(r-t.y)/(n-t.x);ja(t,i)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&qT(o,t)))&&(o=t,u=h)}t=t.next}while(t!==a);return o}function qT(i,e){return Dt(i.prev,i,e.prev)<0&&Dt(e.next,i,i.next)<0}function $T(i,e,t,n){let r=i;do r.z===0&&(r.z=ad(r.x,r.y,e,t,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==i);r.prevZ.nextZ=null,r.prevZ=null,KT(r)}function KT(i){let e,t=1;do{let n=i,r;i=null;let s=null;for(e=0;n;){e++;let o=n,a=0;for(let c=0;c<t&&(a++,o=o.nextZ,!!o);c++);let l=t;for(;a>0||l>0&&o;)a!==0&&(l===0||!o||n.z<=o.z)?(r=n,n=n.nextZ,a--):(r=o,o=o.nextZ,l--),s?s.nextZ=r:i=r,r.prevZ=s,s=r;n=o}s.nextZ=null,t*=2}while(e>1);return i}function ad(i,e,t,n,r){return i=(i-t)*r|0,e=(e-n)*r|0,i=(i|i<<8)&16711935,i=(i|i<<4)&252645135,i=(i|i<<2)&858993459,i=(i|i<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,i|e<<1}function ZT(i){let e=i,t=i;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==i);return t}function Ex(i,e,t,n,r,s,o,a){return(r-o)*(e-a)>=(i-o)*(s-a)&&(i-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(r-o)*(n-a)}function la(i,e,t,n,r,s,o,a){return!(i===o&&e===a)&&Ex(i,e,t,n,r,s,o,a)}function JT(i,e){return i.next.i!==e.i&&i.prev.i!==e.i&&!QT(i,e)&&(ja(i,e)&&ja(e,i)&&eE(i,e)&&(Dt(i.prev,i,e.prev)||Dt(i,e.prev,e))||Ao(i,e)&&Dt(i.prev,i,i.next)>0&&Dt(e.prev,e,e.next)>0)}function Dt(i,e,t){return(e.y-i.y)*(t.x-e.x)-(e.x-i.x)*(t.y-e.y)}function Ao(i,e){return i.x===e.x&&i.y===e.y}function Ax(i,e,t,n){const r=tc(Dt(i,e,t)),s=tc(Dt(i,e,n)),o=tc(Dt(t,n,i)),a=tc(Dt(t,n,e));return!!(r!==s&&o!==a||r===0&&ec(i,t,e)||s===0&&ec(i,n,e)||o===0&&ec(t,i,n)||a===0&&ec(t,e,n))}function ec(i,e,t){return e.x<=Math.max(i.x,t.x)&&e.x>=Math.min(i.x,t.x)&&e.y<=Math.max(i.y,t.y)&&e.y>=Math.min(i.y,t.y)}function tc(i){return i>0?1:i<0?-1:0}function QT(i,e){let t=i;do{if(t.i!==i.i&&t.next.i!==i.i&&t.i!==e.i&&t.next.i!==e.i&&Ax(t,t.next,i,e))return!0;t=t.next}while(t!==i);return!1}function ja(i,e){return Dt(i.prev,i,i.next)<0?Dt(i,e,i.next)>=0&&Dt(i,i.prev,e)>=0:Dt(i,e,i.prev)<0||Dt(i,i.next,e)<0}function eE(i,e){let t=i,n=!1;const r=(i.x+e.x)/2,s=(i.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==i);return n}function Rx(i,e){const t=ld(i.i,i.x,i.y),n=ld(e.i,e.x,e.y),r=i.next,s=e.prev;return i.next=e,e.prev=i,t.next=r,r.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function dg(i,e,t,n){const r=ld(i,e,t);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function Ya(i){i.next.prev=i.prev,i.prev.next=i.next,i.prevZ&&(i.prevZ.nextZ=i.nextZ),i.nextZ&&(i.nextZ.prevZ=i.prevZ)}function ld(i,e,t){return{i,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function tE(i,e,t,n){let r=0;for(let s=e,o=t-n;s<t;s+=n)r+=(i[o]-i[s])*(i[s+1]+i[o+1]),o=s;return r}class nE{static triangulate(e,t,n=2){return zT(e,t,n)}}class fi{static area(e){const t=e.length;let n=0;for(let r=t-1,s=0;s<t;r=s++)n+=e[r].x*e[s].y-e[s].x*e[r].y;return n*.5}static isClockWise(e){return fi.area(e)<0}static triangulateShape(e,t){const n=[],r=[],s=[];pg(e),mg(n,e);let o=e.length;t.forEach(pg);for(let l=0;l<t.length;l++)r.push(o),o+=t[l].length,mg(n,t[l]);const a=nE.triangulate(n,r);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function pg(i){const e=i.length;e>2&&i[e-1].equals(i[0])&&i.pop()}function mg(i,e){for(let t=0;t<e.length;t++)i.push(e[t].x),i.push(e[t].y)}class ah extends Ze{constructor(e=new bs([new pe(.5,.5),new pe(-.5,.5),new pe(-.5,-.5),new pe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,r=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new Fe(r,3)),this.setAttribute("uv",new Fe(s,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:d-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,M=t.UVGenerator!==void 0?t.UVGenerator:iE;let b,y=!1,C,w,E,S;g&&(b=g.getSpacedPoints(u),y=!0,f=!1,C=g.computeFrenetFrames(u,!1),w=new F,E=new F,S=new F),f||(m=0,d=0,p=0,v=0);const x=a.extractPoints(c);let _=x.shape;const A=x.holes;if(!fi.isClockWise(_)){_=_.reverse();for(let T=0,H=A.length;T<H;T++){const W=A[T];fi.isClockWise(W)&&(A[T]=W.reverse())}}function B(T){const W=10000000000000001e-36;let j=T[0];for(let Y=1;Y<=T.length;Y++){const re=Y%T.length,Q=T[re],P=Q.x-j.x,R=Q.y-j.y,k=P*P+R*R,ee=Math.max(Math.abs(Q.x),Math.abs(Q.y),Math.abs(j.x),Math.abs(j.y)),ae=W*ee*ee;if(k<=ae){T.splice(re,1),Y--;continue}j=Q}}B(_),A.forEach(B);const V=A.length,X=_;for(let T=0;T<V;T++){const H=A[T];_=_.concat(H)}function z(T,H,W){return H||console.error("THREE.ExtrudeGeometry: vec does not exist"),T.clone().addScaledVector(H,W)}const te=_.length;function J(T,H,W){let j,Y,re;const Q=T.x-H.x,P=T.y-H.y,R=W.x-T.x,k=W.y-T.y,ee=Q*Q+P*P,ae=Q*k-P*R;if(Math.abs(ae)>Number.EPSILON){const se=Math.sqrt(ee),Me=Math.sqrt(R*R+k*k),_e=H.x-P/se,Ie=H.y+Q/se,Ue=W.x-k/Me,xe=W.y+R/Me,Re=((Ue-_e)*k-(xe-Ie)*R)/(Q*k-P*R);j=_e+Q*Re-T.x,Y=Ie+P*Re-T.y;const ze=j*j+Y*Y;if(ze<=2)return new pe(j,Y);re=Math.sqrt(ze/2)}else{let se=!1;Q>Number.EPSILON?R>Number.EPSILON&&(se=!0):Q<-Number.EPSILON?R<-Number.EPSILON&&(se=!0):Math.sign(P)===Math.sign(k)&&(se=!0),se?(j=-P,Y=Q,re=Math.sqrt(ee)):(j=Q,Y=P,re=Math.sqrt(ee/2))}return new pe(j/re,Y/re)}const ue=[];for(let T=0,H=X.length,W=H-1,j=T+1;T<H;T++,W++,j++)W===H&&(W=0),j===H&&(j=0),ue[T]=J(X[T],X[W],X[j]);const de=[];let oe,ye=ue.concat();for(let T=0,H=V;T<H;T++){const W=A[T];oe=[];for(let j=0,Y=W.length,re=Y-1,Q=j+1;j<Y;j++,re++,Q++)re===Y&&(re=0),Q===Y&&(Q=0),oe[j]=J(W[j],W[re],W[Q]);de.push(oe),ye=ye.concat(oe)}let Ce;if(m===0)Ce=fi.triangulateShape(X,A);else{const T=[],H=[];for(let W=0;W<m;W++){const j=W/m,Y=d*Math.cos(j*Math.PI/2),re=p*Math.sin(j*Math.PI/2)+v;for(let Q=0,P=X.length;Q<P;Q++){const R=z(X[Q],ue[Q],re);I(R.x,R.y,-Y),j===0&&T.push(R)}for(let Q=0,P=V;Q<P;Q++){const R=A[Q];oe=de[Q];const k=[];for(let ee=0,ae=R.length;ee<ae;ee++){const se=z(R[ee],oe[ee],re);I(se.x,se.y,-Y),j===0&&k.push(se)}j===0&&H.push(k)}}Ce=fi.triangulateShape(T,H)}const le=Ce.length,ge=p+v;for(let T=0;T<te;T++){const H=f?z(_[T],ye[T],ge):_[T];y?(E.copy(C.normals[0]).multiplyScalar(H.x),w.copy(C.binormals[0]).multiplyScalar(H.y),S.copy(b[0]).add(E).add(w),I(S.x,S.y,S.z)):I(H.x,H.y,0)}for(let T=1;T<=u;T++)for(let H=0;H<te;H++){const W=f?z(_[H],ye[H],ge):_[H];y?(E.copy(C.normals[T]).multiplyScalar(W.x),w.copy(C.binormals[T]).multiplyScalar(W.y),S.copy(b[T]).add(E).add(w),I(S.x,S.y,S.z)):I(W.x,W.y,h/u*T)}for(let T=m-1;T>=0;T--){const H=T/m,W=d*Math.cos(H*Math.PI/2),j=p*Math.sin(H*Math.PI/2)+v;for(let Y=0,re=X.length;Y<re;Y++){const Q=z(X[Y],ue[Y],j);I(Q.x,Q.y,h+W)}for(let Y=0,re=A.length;Y<re;Y++){const Q=A[Y];oe=de[Y];for(let P=0,R=Q.length;P<R;P++){const k=z(Q[P],oe[P],j);y?I(k.x,k.y+b[u-1].y,b[u-1].x+W):I(k.x,k.y,h+W)}}}be(),Z();function be(){const T=r.length/3;if(f){let H=0,W=te*H;for(let j=0;j<le;j++){const Y=Ce[j];U(Y[2]+W,Y[1]+W,Y[0]+W)}H=u+m*2,W=te*H;for(let j=0;j<le;j++){const Y=Ce[j];U(Y[0]+W,Y[1]+W,Y[2]+W)}}else{for(let H=0;H<le;H++){const W=Ce[H];U(W[2],W[1],W[0])}for(let H=0;H<le;H++){const W=Ce[H];U(W[0]+te*u,W[1]+te*u,W[2]+te*u)}}n.addGroup(T,r.length/3-T,0)}function Z(){const T=r.length/3;let H=0;K(X,H),H+=X.length;for(let W=0,j=A.length;W<j;W++){const Y=A[W];K(Y,H),H+=Y.length}n.addGroup(T,r.length/3-T,1)}function K(T,H){let W=T.length;for(;--W>=0;){const j=W;let Y=W-1;Y<0&&(Y=T.length-1);for(let re=0,Q=u+m*2;re<Q;re++){const P=te*re,R=te*(re+1),k=H+j+P,ee=H+Y+P,ae=H+Y+R,se=H+j+R;G(k,ee,ae,se)}}}function I(T,H,W){l.push(T),l.push(H),l.push(W)}function U(T,H,W){D(T),D(H),D(W);const j=r.length/3,Y=M.generateTopUV(n,r,j-3,j-2,j-1);L(Y[0]),L(Y[1]),L(Y[2])}function G(T,H,W,j){D(T),D(H),D(j),D(H),D(W),D(j);const Y=r.length/3,re=M.generateSideWallUV(n,r,Y-6,Y-3,Y-2,Y-1);L(re[0]),L(re[1]),L(re[3]),L(re[1]),L(re[2]),L(re[3])}function D(T){r.push(l[T*3+0]),r.push(l[T*3+1]),r.push(l[T*3+2])}function L(T){s.push(T.x),s.push(T.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return rE(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];n.push(a)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new bu[r.type]().fromJSON(r)),new ah(n,e.options)}}const iE={generateTopUV:function(i,e,t,n,r){const s=e[t*3],o=e[t*3+1],a=e[n*3],l=e[n*3+1],c=e[r*3],u=e[r*3+1];return[new pe(s,o),new pe(a,l),new pe(c,u)]},generateSideWallUV:function(i,e,t,n,r,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[n*3],u=e[n*3+1],h=e[n*3+2],f=e[r*3],d=e[r*3+1],p=e[r*3+2],v=e[s*3],m=e[s*3+1],g=e[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new pe(o,1-l),new pe(c,1-h),new pe(f,1-p),new pe(v,1-g)]:[new pe(a,1-l),new pe(u,1-h),new pe(d,1-p),new pe(m,1-g)]}};function rE(i,e,t){if(t.shapes=[],Array.isArray(i))for(let n=0,r=i.length;n<r;n++){const s=i[n];t.shapes.push(s.uuid)}else t.shapes.push(i.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class lh extends zr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lh(e.radius,e.detail)}}class ch extends Ze{constructor(e=[new pe(0,-.5),new pe(.5,0),new pe(0,.5)],t=12,n=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t),r=Ke(r,0,Math.PI*2);const s=[],o=[],a=[],l=[],c=[],u=1/t,h=new F,f=new pe,d=new F,p=new F,v=new F;let m=0,g=0;for(let M=0;M<=e.length-1;M++)switch(M){case 0:m=e[M+1].x-e[M].x,g=e[M+1].y-e[M].y,d.x=g*1,d.y=-m,d.z=g*0,v.copy(d),d.normalize(),l.push(d.x,d.y,d.z);break;case e.length-1:l.push(v.x,v.y,v.z);break;default:m=e[M+1].x-e[M].x,g=e[M+1].y-e[M].y,d.x=g*1,d.y=-m,d.z=g*0,p.copy(d),d.x+=v.x,d.y+=v.y,d.z+=v.z,d.normalize(),l.push(d.x,d.y,d.z),v.copy(p)}for(let M=0;M<=t;M++){const b=n+M*u*r,y=Math.sin(b),C=Math.cos(b);for(let w=0;w<=e.length-1;w++){h.x=e[w].x*y,h.y=e[w].y,h.z=e[w].x*C,o.push(h.x,h.y,h.z),f.x=M/t,f.y=w/(e.length-1),a.push(f.x,f.y);const E=l[3*w+0]*y,S=l[3*w+1],x=l[3*w+0]*C;c.push(E,S,x)}}for(let M=0;M<t;M++)for(let b=0;b<e.length-1;b++){const y=b+M*e.length,C=y,w=y+e.length,E=y+e.length+1,S=y+1;s.push(C,w,S),s.push(E,S,w)}this.setIndex(s),this.setAttribute("position",new Fe(o,3)),this.setAttribute("uv",new Fe(a,2)),this.setAttribute("normal",new Fe(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ch(e.points,e.segments,e.phiStart,e.phiLength)}}class hl extends zr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new hl(e.radius,e.detail)}}class kr extends Ze{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(r),c=a+1,u=l+1,h=e/a,f=t/l,d=[],p=[],v=[],m=[];for(let g=0;g<u;g++){const M=g*f-o;for(let b=0;b<c;b++){const y=b*h-s;p.push(y,-M,0),v.push(0,0,1),m.push(b/a),m.push(1-g/l)}}for(let g=0;g<l;g++)for(let M=0;M<a;M++){const b=M+c*g,y=M+c*(g+1),C=M+1+c*(g+1),w=M+1+c*g;d.push(b,y,w),d.push(y,C,w)}this.setIndex(d),this.setAttribute("position",new Fe(p,3)),this.setAttribute("normal",new Fe(v,3)),this.setAttribute("uv",new Fe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new kr(e.width,e.height,e.widthSegments,e.heightSegments)}}class uh extends Ze{constructor(e=.5,t=1,n=32,r=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:s,thetaLength:o},n=Math.max(3,n),r=Math.max(1,r);const a=[],l=[],c=[],u=[];let h=e;const f=(t-e)/r,d=new F,p=new pe;for(let v=0;v<=r;v++){for(let m=0;m<=n;m++){const g=s+m/n*o;d.x=h*Math.cos(g),d.y=h*Math.sin(g),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=f}for(let v=0;v<r;v++){const m=v*(n+1);for(let g=0;g<n;g++){const M=g+m,b=M,y=M+n+1,C=M+n+2,w=M+1;a.push(b,y,w),a.push(y,C,w)}}this.setIndex(a),this.setAttribute("position",new Fe(l,3)),this.setAttribute("normal",new Fe(c,3)),this.setAttribute("uv",new Fe(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new uh(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class hh extends Ze{constructor(e=new bs([new pe(0,.5),new pe(-.5,-.5),new pe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],r=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new Fe(r,3)),this.setAttribute("normal",new Fe(s,3)),this.setAttribute("uv",new Fe(o,2));function c(u){const h=r.length/3,f=u.extractPoints(t);let d=f.shape;const p=f.holes;fi.isClockWise(d)===!1&&(d=d.reverse());for(let m=0,g=p.length;m<g;m++){const M=p[m];fi.isClockWise(M)===!0&&(p[m]=M.reverse())}const v=fi.triangulateShape(d,p);for(let m=0,g=p.length;m<g;m++){const M=p[m];d=d.concat(M)}for(let m=0,g=d.length;m<g;m++){const M=d[m];r.push(M.x,M.y,0),s.push(0,0,1),o.push(M.x,M.y)}for(let m=0,g=v.length;m<g;m++){const M=v[m],b=M[0]+h,y=M[1]+h,C=M[2]+h;n.push(b,y,C),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return sE(t,e)}static fromJSON(e,t){const n=[];for(let r=0,s=e.shapes.length;r<s;r++){const o=t[e.shapes[r]];n.push(o)}return new hh(n,e.curveSegments)}}function sE(i,e){if(e.shapes=[],Array.isArray(i))for(let t=0,n=i.length;t<n;t++){const r=i[t];e.shapes.push(r.uuid)}else e.shapes.push(i.uuid);return e}class fl extends Ze{constructor(e=1,t=32,n=16,r=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new F,f=new F,d=[],p=[],v=[],m=[];for(let g=0;g<=n;g++){const M=[],b=g/n;let y=0;g===0&&o===0?y=.5/t:g===n&&l===Math.PI&&(y=-.5/t);for(let C=0;C<=t;C++){const w=C/t;h.x=-e*Math.cos(r+w*s)*Math.sin(o+b*a),h.y=e*Math.cos(o+b*a),h.z=e*Math.sin(r+w*s)*Math.sin(o+b*a),p.push(h.x,h.y,h.z),f.copy(h).normalize(),v.push(f.x,f.y,f.z),m.push(w+y,1-b),M.push(c++)}u.push(M)}for(let g=0;g<n;g++)for(let M=0;M<t;M++){const b=u[g][M+1],y=u[g][M],C=u[g+1][M],w=u[g+1][M+1];(g!==0||o>0)&&d.push(b,y,w),(g!==n-1||l<Math.PI)&&d.push(y,C,w)}this.setIndex(d),this.setAttribute("position",new Fe(p,3)),this.setAttribute("normal",new Fe(v,3)),this.setAttribute("uv",new Fe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new fl(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class fh extends zr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new fh(e.radius,e.detail)}}class dh extends Ze{constructor(e=1,t=.4,n=12,r=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:s},n=Math.floor(n),r=Math.floor(r);const o=[],a=[],l=[],c=[],u=new F,h=new F,f=new F;for(let d=0;d<=n;d++)for(let p=0;p<=r;p++){const v=p/r*s,m=d/n*Math.PI*2;h.x=(e+t*Math.cos(m))*Math.cos(v),h.y=(e+t*Math.cos(m))*Math.sin(v),h.z=t*Math.sin(m),a.push(h.x,h.y,h.z),u.x=e*Math.cos(v),u.y=e*Math.sin(v),f.subVectors(h,u).normalize(),l.push(f.x,f.y,f.z),c.push(p/r),c.push(d/n)}for(let d=1;d<=n;d++)for(let p=1;p<=r;p++){const v=(r+1)*d+p-1,m=(r+1)*(d-1)+p-1,g=(r+1)*(d-1)+p,M=(r+1)*d+p;o.push(v,m,M),o.push(m,g,M)}this.setIndex(o),this.setAttribute("position",new Fe(a,3)),this.setAttribute("normal",new Fe(l,3)),this.setAttribute("uv",new Fe(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new dh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class ph extends Ze{constructor(e=1,t=.4,n=64,r=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:s,q:o},n=Math.floor(n),r=Math.floor(r);const a=[],l=[],c=[],u=[],h=new F,f=new F,d=new F,p=new F,v=new F,m=new F,g=new F;for(let b=0;b<=n;++b){const y=b/n*s*Math.PI*2;M(y,s,o,e,d),M(y+.01,s,o,e,p),m.subVectors(p,d),g.addVectors(p,d),v.crossVectors(m,g),g.crossVectors(v,m),v.normalize(),g.normalize();for(let C=0;C<=r;++C){const w=C/r*Math.PI*2,E=-t*Math.cos(w),S=t*Math.sin(w);h.x=d.x+(E*g.x+S*v.x),h.y=d.y+(E*g.y+S*v.y),h.z=d.z+(E*g.z+S*v.z),l.push(h.x,h.y,h.z),f.subVectors(h,d).normalize(),c.push(f.x,f.y,f.z),u.push(b/n),u.push(C/r)}}for(let b=1;b<=n;b++)for(let y=1;y<=r;y++){const C=(r+1)*(b-1)+(y-1),w=(r+1)*b+(y-1),E=(r+1)*b+y,S=(r+1)*(b-1)+y;a.push(C,w,S),a.push(w,E,S)}this.setIndex(a),this.setAttribute("position",new Fe(l,3)),this.setAttribute("normal",new Fe(c,3)),this.setAttribute("uv",new Fe(u,2));function M(b,y,C,w,E){const S=Math.cos(b),x=Math.sin(b),_=C/y*b,A=Math.cos(_);E.x=w*(2+A)*.5*S,E.y=w*(2+A)*x*.5,E.z=w*Math.sin(_)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ph(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class mh extends Ze{constructor(e=new yp(new F(-1,-1,0),new F(-1,1,0),new F(1,1,0)),t=64,n=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new F,l=new F,c=new pe;let u=new F;const h=[],f=[],d=[],p=[];v(),this.setIndex(p),this.setAttribute("position",new Fe(h,3)),this.setAttribute("normal",new Fe(f,3)),this.setAttribute("uv",new Fe(d,2));function v(){for(let b=0;b<t;b++)m(b);m(s===!1?t:0),M(),g()}function m(b){u=e.getPointAt(b/t,u);const y=o.normals[b],C=o.binormals[b];for(let w=0;w<=r;w++){const E=w/r*Math.PI*2,S=Math.sin(E),x=-Math.cos(E);l.x=x*y.x+S*C.x,l.y=x*y.y+S*C.y,l.z=x*y.z+S*C.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=u.x+n*l.x,a.y=u.y+n*l.y,a.z=u.z+n*l.z,h.push(a.x,a.y,a.z)}}function g(){for(let b=1;b<=t;b++)for(let y=1;y<=r;y++){const C=(r+1)*(b-1)+(y-1),w=(r+1)*b+(y-1),E=(r+1)*b+y,S=(r+1)*(b-1)+y;p.push(C,w,S),p.push(w,E,S)}}function M(){for(let b=0;b<=t;b++)for(let y=0;y<=r;y++)c.x=b/t,c.y=y/r,d.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new mh(new bu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Cx extends Ze{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,r=new F,s=new F;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],f=h.start,d=h.count;for(let p=f,v=f+d;p<v;p+=3)for(let m=0;m<3;m++){const g=a.getX(p+m),M=a.getX(p+(m+1)%3);r.fromBufferAttribute(o,g),s.fromBufferAttribute(o,M),gg(r,s,n)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c,h=3*a+(c+1)%3;r.fromBufferAttribute(o,u),s.fromBufferAttribute(o,h),gg(r,s,n)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Fe(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function gg(i,e,t){const n=`${i.x},${i.y},${i.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${i.x},${i.y},${i.z}`;return t.has(n)===!0||t.has(r)===!0?!1:(t.add(n),t.add(r),!0)}var vg=Object.freeze({__proto__:null,BoxGeometry:Br,CapsuleGeometry:ih,CircleGeometry:rh,ConeGeometry:ul,CylinderGeometry:cl,DodecahedronGeometry:sh,EdgesGeometry:xx,ExtrudeGeometry:ah,IcosahedronGeometry:lh,LatheGeometry:ch,OctahedronGeometry:hl,PlaneGeometry:kr,PolyhedronGeometry:zr,RingGeometry:uh,ShapeGeometry:hh,SphereGeometry:fl,TetrahedronGeometry:fh,TorusGeometry:dh,TorusKnotGeometry:ph,TubeGeometry:mh,WireframeGeometry:Cx});class Ix extends Yt{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new we(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Ea extends gn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class dl extends Yt{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new we(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new we(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Fr,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new In,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class qn extends dl{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new pe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ke(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new we(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new we(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new we(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Px extends Yt{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new we(16777215),this.specular=new we(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new we(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Fr,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new In,this.combine=tl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Lx extends Yt{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new we(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new we(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Fr,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Dx extends Yt{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Fr,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Nx extends Yt{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new we(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new we(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Fr,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new In,this.combine=tl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Mp extends Yt{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Z0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Sp extends Yt{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class Ux extends Yt{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new we(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Fr,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ox extends vn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ps(i,e){return!i||i.constructor===e?i:typeof e.BYTES_PER_ELEMENT=="number"?new e(i):Array.prototype.slice.call(i)}function Fx(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)}function Bx(i){function e(r,s){return i[r]-i[s]}const t=i.length,n=new Array(t);for(let r=0;r!==t;++r)n[r]=r;return n.sort(e),n}function cd(i,e,t){const n=i.length,r=new i.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let l=0;l!==e;++l)r[o++]=i[a+l]}return r}function wp(i,e,t,n){let r=1,s=i[0];for(;s!==void 0&&s[n]===void 0;)s=i[r++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push(...o)),s=i[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=i[r++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=i[r++];while(s!==void 0)}function oE(i,e,t,n,r=30){const s=i.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*r;if(!(p<t||p>=n)){h.push(c.times[d]);for(let v=0;v<u;++v)f.push(c.values[d*u+v])}}h.length!==0&&(c.times=ps(h,c.times.constructor),c.values=ps(f,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function aE(i,e=0,t=i,n=30){n<=0&&(n=30);const r=t.tracks.length,s=e/n;for(let o=0;o<r;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=i.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=a.times.length-1;let v;if(s<=a.times[0]){const g=u,M=h-u;v=a.values.slice(g,M)}else if(s>=a.times[p]){const g=p*h+u,M=g+h-u;v=a.values.slice(g,M)}else{const g=a.createInterpolant(),M=u,b=h-u;g.evaluate(s),v=g.resultBuffer.slice(M,b)}l==="quaternion"&&new en().fromArray(v).normalize().conjugate().toArray(v);const m=c.times.length;for(let g=0;g<m;++g){const M=g*d+f;if(l==="quaternion")en.multiplyQuaternionsFlat(c.values,M,v,0,c.values,M);else{const b=d-f*2;for(let y=0;y<b;++y)c.values[M+y]-=v[y]}}}return i.blendMode=sp,i}class lE{static convertArray(e,t){return ps(e,t)}static isTypedArray(e){return Fx(e)}static getKeyframeOrder(e){return Bx(e)}static sortedArray(e,t,n){return cd(e,t,n)}static flattenJSON(e,t,n,r){wp(e,t,n,r)}static subclip(e,t,n,r,s=30){return oE(e,t,n,r,s)}static makeClipAdditive(e,t=0,n=e,r=30){return aE(e,t,n,r)}}class Fo{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<r)){for(let a=n+2;;){if(r===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=r,r=t[++n],e<r)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(r=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(r=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(r===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,r)}return this.interpolate_(n,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=e*r;for(let o=0;o!==r;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class zx extends Fo{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:fs,endingEnd:fs}}intervalChanged_(e,t,n){const r=this.parameterPositions;let s=e-2,o=e+1,a=r[s],l=r[o];if(a===void 0)switch(this.getSettings_().endingStart){case ds:s=e,a=2*t-n;break;case ka:s=r.length-2,a=t+r[s]-r[s+1];break;default:s=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case ds:o=e,l=2*n-t;break;case ka:o=1,l=n+r[1]-r[0];break;default:o=e-1,l=t}const c=(n-t)*.5,u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),v=p*p,m=v*p,g=-f*m+2*f*v-f*p,M=(1+f)*m+(-1.5-2*f)*v+(-.5+f)*p+1,b=(-1-d)*m+(1.5+d)*v+.5*p,y=d*m-d*v;for(let C=0;C!==a;++C)s[C]=g*o[u+C]+M*o[c+C]+b*o[l+C]+y*o[h+C];return s}}class Tp extends Fo{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(n-t)/(r-t),h=1-u;for(let f=0;f!==a;++f)s[f]=o[c+f]*h+o[l+f]*u;return s}}class kx extends Fo{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class ri{constructor(e,t,n,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ps(t,this.TimeBufferType),this.values=ps(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ps(e.times,Array),values:ps(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new kx(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Tp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new zx(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Es:t=this.InterpolantFactoryMethodDiscrete;break;case As:t=this.InterpolantFactoryMethodLinear;break;case bc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Es;case this.InterpolantFactoryMethodLinear:return As;case this.InterpolantFactoryMethodSmooth:return bc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){const n=this.times,r=n.length;let s=0,o=r-1;for(;s!==r&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==r){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=n.slice(s,o),this.values=this.values.slice(s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(r!==void 0&&Fx(r))for(let a=0,l=r.length;a!==l;++a){const c=r[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),r=this.getInterpolation()===bc,s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],u=e[a+1];if(c!==u&&(a!==1||c!==e[0]))if(r)l=!0;else{const h=a*n,f=h-n,d=h+n;for(let p=0;p!==n;++p){const v=t[h+p];if(v!==t[f+p]||v!==t[d+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*n,f=o*n;for(let d=0;d!==n;++d)t[f+d]=t[h+d]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,l=o*n,c=0;c!==n;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}ri.prototype.ValueTypeName="";ri.prototype.TimeBufferType=Float32Array;ri.prototype.ValueBufferType=Float32Array;ri.prototype.DefaultInterpolation=As;class Bs extends ri{constructor(e,t,n){super(e,t,n)}}Bs.prototype.ValueTypeName="bool";Bs.prototype.ValueBufferType=Array;Bs.prototype.DefaultInterpolation=Es;Bs.prototype.InterpolantFactoryMethodLinear=void 0;Bs.prototype.InterpolantFactoryMethodSmooth=void 0;class Ep extends ri{constructor(e,t,n,r){super(e,t,n,r)}}Ep.prototype.ValueTypeName="color";class Ps extends ri{constructor(e,t,n,r){super(e,t,n,r)}}Ps.prototype.ValueTypeName="number";class Vx extends Fo{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(r-t);let c=e*a;for(let u=c+a;c!==u;c+=4)en.slerpFlat(s,0,o,c-a,o,c,l);return s}}class Ls extends ri{constructor(e,t,n,r){super(e,t,n,r)}InterpolantFactoryMethodLinear(e){return new Vx(this.times,this.values,this.getValueSize(),e)}}Ls.prototype.ValueTypeName="quaternion";Ls.prototype.InterpolantFactoryMethodSmooth=void 0;class zs extends ri{constructor(e,t,n){super(e,t,n)}}zs.prototype.ValueTypeName="string";zs.prototype.ValueBufferType=Array;zs.prototype.DefaultInterpolation=Es;zs.prototype.InterpolantFactoryMethodLinear=void 0;zs.prototype.InterpolantFactoryMethodSmooth=void 0;class Ds extends ri{constructor(e,t,n,r){super(e,t,n,r)}}Ds.prototype.ValueTypeName="vector";class Ro{constructor(e="",t=-1,n=[],r=Yu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=Yn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,r=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(uE(n[o]).scale(r));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(ri.toJSON(n[s]));return r}static CreateFromMorphTargetSequence(e,t,n,r){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=Bx(l);l=cd(l,1,u),c=cd(c,1,u),!r&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new Ps(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const r=e;n=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<n.length;r++)if(n[r].name===t)return n[r];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const r={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let f=r[h];f||(r[h]=f=[]),f.push(c)}}const o=[];for(const a in r)o.push(this.CreateFromMorphTargetSequence(a,r[a],t,n));return o}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,f,d,p,v){if(d.length!==0){const m=[],g=[];wp(d,m,g,p),m.length!==0&&v.push(new h(f,m,g))}},r=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const f=c[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let v=0;v<f[p].morphTargets.length;v++)d[f[p].morphTargets[v]]=-1;for(const v in d){const m=[],g=[];for(let M=0;M!==f[p].morphTargets.length;++M){const b=f[p];m.push(b.time),g.push(b.morphTarget===v?1:0)}r.push(new Ps(".morphTargetInfluence["+v+"]",m,g))}l=d.length*o}else{const d=".bones["+t[h].name+"]";n(Ds,d+".position",f,"pos",r),n(Ls,d+".quaternion",f,"rot",r),n(Ds,d+".scale",f,"scl",r)}}return r.length===0?null:new this(s,l,r,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,r=e.length;n!==r;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function cE(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ps;case"vector":case"vector2":case"vector3":case"vector4":return Ds;case"color":return Ep;case"quaternion":return Ls;case"bool":case"boolean":return Bs;case"string":return zs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function uE(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=cE(i.type);if(i.times===void 0){const t=[],n=[];wp(i.keys,t,n,"value"),i.times=t,i.values=n}return e.parse!==void 0?e.parse(i):new e(i.name,i.times,i.values,i.interpolation)}const tr={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class Ap{constructor(e,t,n){const r=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&r.onStart!==void 0&&r.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,r.onProgress!==void 0&&r.onProgress(u,o,a),o===a&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],p=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return p}return null}}}const Hx=new Ap;class Pn{constructor(e){this.manager=e!==void 0?e:Hx,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(r,s){n.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Pn.DEFAULT_MATERIAL_NAME="__DEFAULT";const Yi={};class hE extends Error{constructor(e,t){super(e),this.response=t}}class xi extends Pn{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=tr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Yi[e]!==void 0){Yi[e].push({onLoad:t,onProgress:n,onError:r});return}Yi[e]=[],Yi[e].push({onLoad:t,onProgress:n,onError:r});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=Yi[e],h=c.body.getReader(),f=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),d=f?parseInt(f):0,p=d!==0;let v=0;const m=new ReadableStream({start(g){M();function M(){h.read().then(({done:b,value:y})=>{if(b)g.close();else{v+=y.byteLength;const C=new ProgressEvent("progress",{lengthComputable:p,loaded:v,total:d});for(let w=0,E=u.length;w<E;w++){const S=u[w];S.onProgress&&S.onProgress(C)}g.enqueue(y),M()}},b=>{g.error(b)})}}});return new Response(m)}else throw new hE(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a==="")return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{tr.add(e,c);const u=Yi[e];delete Yi[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=Yi[e];if(u===void 0)throw this.manager.itemError(e),c;delete Yi[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class fE extends Pn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new xi(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},n,r)}parse(e){const t=[];for(let n=0;n<e.length;n++){const r=Ro.parse(e[n]);t.push(r)}return t}}class dE extends Pn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=[],a=new ys,l=new xi(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function u(h){l.load(e[h],function(f){const d=s.parse(f,!0);o[h]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},c+=1,c===6&&(d.mipmapCount===1&&(a.minFilter=Ct),a.image=o,a.format=d.format,a.needsUpdate=!0,t&&t(a))},n,r)}if(Array.isArray(e))for(let h=0,f=e.length;h<f;++h)u(h);else l.load(e,function(h){const f=s.parse(h,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){o[p]={mipmaps:[]};for(let v=0;v<f.mipmapCount;v++)o[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+v]),o[p].format=f.format,o[p].width=f.width,o[p].height=f.height}a.image=o}else a.image.width=f.width,a.image.height=f.height,a.mipmaps=f.mipmaps;f.mipmapCount===1&&(a.minFilter=Ct),a.format=f.format,a.needsUpdate=!0,t&&t(a)},n,r);return a}}class qa extends Pn{constructor(e){super(e)}load(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=tr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=Wa("img");function l(){u(),tr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(h){u(),r&&r(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class pE extends Pn{constructor(e){super(e)}load(e,t,n,r){const s=new al;s.colorSpace=Bt;const o=new qa(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(u){s.images[c]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,r)}for(let c=0;c<e.length;++c)l(c);return s}}class Gx extends Pn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new ni,a=new xi(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){let c;try{c=s.parse(l)}catch(u){if(r!==void 0)r(u);else{console.error(u);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:Jt,o.wrapT=c.wrapT!==void 0?c.wrapT:Jt,o.magFilter=c.magFilter!==void 0?c.magFilter:Ct,o.minFilter=c.minFilter!==void 0?c.minFilter:Ct,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(o.colorSpace=c.colorSpace),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=Xn),c.mipmapCount===1&&(o.minFilter=Ct),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c)},n,r),o}}class Rp extends Pn{constructor(e){super(e)}load(e,t,n,r){const s=new At,o=new qa(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,r),s}}class Vr extends ct{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new we(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class Wx extends Vr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(ct.DEFAULT_UP),this.updateMatrix(),this.groundColor=new we(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const pf=new ke,_g=new F,xg=new F;class Cp{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new pe(512,512),this.mapType=vi,this.map=null,this.mapPass=null,this.matrix=new ke,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Oo,this._frameExtents=new pe(1,1),this._viewportCount=1,this._viewports=[new it(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;_g.setFromMatrixPosition(e.matrixWorld),t.position.copy(_g),xg.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(xg),t.updateMatrixWorld(),pf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(pf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(pf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class mE extends Cp{constructor(){super(new St(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=To*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||r!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=r,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Ip extends Vr{constructor(e,t,n=0,r=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(ct.DEFAULT_UP),this.updateMatrix(),this.target=new ct,this.distance=n,this.angle=r,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new mE}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const yg=new ke,ea=new F,mf=new F;class gE extends Cp{constructor(){super(new St(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new pe(4,2),this._viewportCount=6,this._viewports=[new it(2,1,1,1),new it(0,1,1,1),new it(3,1,1,1),new it(1,1,1,1),new it(3,0,1,1),new it(1,0,1,1)],this._cubeDirections=[new F(1,0,0),new F(-1,0,0),new F(0,0,1),new F(0,0,-1),new F(0,1,0),new F(0,-1,0)],this._cubeUps=[new F(0,1,0),new F(0,1,0),new F(0,1,0),new F(0,1,0),new F(0,0,1),new F(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,r=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),ea.setFromMatrixPosition(e.matrixWorld),n.position.copy(ea),mf.copy(n.position),mf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(mf),n.updateMatrixWorld(),r.makeTranslation(-ea.x,-ea.y,-ea.z),yg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yg)}}class Pp extends Vr{constructor(e,t,n=0,r=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new gE}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Di extends ol{constructor(e=-1,t=1,n=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class vE extends Cp{constructor(){super(new Di(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Lp extends Vr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(ct.DEFAULT_UP),this.updateMatrix(),this.target=new ct,this.shadow=new vE}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Xx extends Vr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class jx extends Vr{constructor(e,t,n=10,r=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Yx{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new F)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*r),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*r)),t.addScaledVector(o[5],1.092548*(r*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){const n=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*r),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*r),t.addScaledVector(o[5],2*.429043*r*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const n=e.x,r=e.y,s=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-r*r)}}class qx extends Vr{constructor(e=new Yx,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class gh extends Pn{constructor(e){super(e),this.textures={}}load(e,t,n,r){const s=this,o=new xi(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},n,r)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const r=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(r.uuid=e.uuid),e.name!==void 0&&(r.name=e.name),e.color!==void 0&&r.color!==void 0&&r.color.setHex(e.color),e.roughness!==void 0&&(r.roughness=e.roughness),e.metalness!==void 0&&(r.metalness=e.metalness),e.sheen!==void 0&&(r.sheen=e.sheen),e.sheenColor!==void 0&&(r.sheenColor=new we().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(r.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&r.emissive!==void 0&&r.emissive.setHex(e.emissive),e.specular!==void 0&&r.specular!==void 0&&r.specular.setHex(e.specular),e.specularIntensity!==void 0&&(r.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&r.specularColor!==void 0&&r.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(r.shininess=e.shininess),e.clearcoat!==void 0&&(r.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(r.dispersion=e.dispersion),e.iridescence!==void 0&&(r.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(r.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(r.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(r.transmission=e.transmission),e.thickness!==void 0&&(r.thickness=e.thickness),e.attenuationDistance!==void 0&&(r.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&r.attenuationColor!==void 0&&r.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(r.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(r.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(r.fog=e.fog),e.flatShading!==void 0&&(r.flatShading=e.flatShading),e.blending!==void 0&&(r.blending=e.blending),e.combine!==void 0&&(r.combine=e.combine),e.side!==void 0&&(r.side=e.side),e.shadowSide!==void 0&&(r.shadowSide=e.shadowSide),e.opacity!==void 0&&(r.opacity=e.opacity),e.transparent!==void 0&&(r.transparent=e.transparent),e.alphaTest!==void 0&&(r.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(r.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(r.depthFunc=e.depthFunc),e.depthTest!==void 0&&(r.depthTest=e.depthTest),e.depthWrite!==void 0&&(r.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(r.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(r.blendSrc=e.blendSrc),e.blendDst!==void 0&&(r.blendDst=e.blendDst),e.blendEquation!==void 0&&(r.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(r.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(r.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(r.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&r.blendColor!==void 0&&r.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(r.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(r.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(r.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(r.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(r.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(r.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(r.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(r.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(r.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(r.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(r.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(r.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(r.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(r.rotation=e.rotation),e.linewidth!==void 0&&(r.linewidth=e.linewidth),e.dashSize!==void 0&&(r.dashSize=e.dashSize),e.gapSize!==void 0&&(r.gapSize=e.gapSize),e.scale!==void 0&&(r.scale=e.scale),e.polygonOffset!==void 0&&(r.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(r.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(r.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(r.dithering=e.dithering),e.alphaToCoverage!==void 0&&(r.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(r.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(r.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(r.visible=e.visible),e.toneMapped!==void 0&&(r.toneMapped=e.toneMapped),e.userData!==void 0&&(r.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(r.uniforms[s]={},o.type){case"t":r.uniforms[s].value=n(o.value);break;case"c":r.uniforms[s].value=new we().setHex(o.value);break;case"v2":r.uniforms[s].value=new pe().fromArray(o.value);break;case"v3":r.uniforms[s].value=new F().fromArray(o.value);break;case"v4":r.uniforms[s].value=new it().fromArray(o.value);break;case"m3":r.uniforms[s].value=new Je().fromArray(o.value);break;case"m4":r.uniforms[s].value=new ke().fromArray(o.value);break;default:r.uniforms[s].value=o.value}}if(e.defines!==void 0&&(r.defines=e.defines),e.vertexShader!==void 0&&(r.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(r.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(r.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)r.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(r.lights=e.lights),e.clipping!==void 0&&(r.clipping=e.clipping),e.size!==void 0&&(r.size=e.size),e.sizeAttenuation!==void 0&&(r.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(r.map=n(e.map)),e.matcap!==void 0&&(r.matcap=n(e.matcap)),e.alphaMap!==void 0&&(r.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(r.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(r.bumpScale=e.bumpScale),e.normalMap!==void 0&&(r.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(r.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),r.normalScale=new pe().fromArray(s)}return e.displacementMap!==void 0&&(r.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(r.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(r.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(r.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(r.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(r.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(r.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(r.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(r.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(r.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(r.envMap=n(e.envMap)),e.envMapRotation!==void 0&&r.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(r.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(r.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(r.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(r.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(r.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(r.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(r.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(r.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(r.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(r.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(r.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(r.clearcoatNormalScale=new pe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(r.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(r.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(r.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(r.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(r.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(r.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(r.sheenRoughnessMap=n(e.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return gh.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:Ix,SpriteMaterial:hp,RawShaderMaterial:Ea,ShaderMaterial:gn,PointsMaterial:th,MeshPhysicalMaterial:qn,MeshStandardMaterial:dl,MeshPhongMaterial:Px,MeshToonMaterial:Lx,MeshNormalMaterial:Dx,MeshLambertMaterial:Nx,MeshDepthMaterial:Mp,MeshDistanceMaterial:Sp,MeshBasicMaterial:Cn,MeshMatcapMaterial:Ux,LineDashedMaterial:Ox,LineBasicMaterial:vn,Material:Yt};return new t[e]}}class Pr{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class $x extends Ze{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Kx extends Pn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new xi(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},n,r)}parse(e){const t={},n={};function r(d,p){if(t[p]!==void 0)return t[p];const m=d.interleavedBuffers[p],g=s(d,m.buffer),M=uo(m.type,g),b=new Uo(M,m.stride);return b.uuid=m.uuid,t[p]=b,b}function s(d,p){if(n[p]!==void 0)return n[p];const m=d.arrayBuffers[p],g=new Uint32Array(m).buffer;return n[p]=g,g}const o=e.isInstancedBufferGeometry?new $x:new Ze,a=e.data.index;if(a!==void 0){const d=uo(a.type,a.array);o.setIndex(new lt(d,1))}const l=e.data.attributes;for(const d in l){const p=l[d];let v;if(p.isInterleavedBufferAttribute){const m=r(e.data,p.data);v=new zi(m,p.itemSize,p.offset,p.normalized)}else{const m=uo(p.type,p.array),g=p.isInstancedBufferAttribute?Cs:lt;v=new g(m,p.itemSize,p.normalized)}p.name!==void 0&&(v.name=p.name),p.usage!==void 0&&v.setUsage(p.usage),o.setAttribute(d,v)}const c=e.data.morphAttributes;if(c)for(const d in c){const p=c[d],v=[];for(let m=0,g=p.length;m<g;m++){const M=p[m];let b;if(M.isInterleavedBufferAttribute){const y=r(e.data,M.data);b=new zi(y,M.itemSize,M.offset,M.normalized)}else{const y=uo(M.type,M.array);b=new lt(y,M.itemSize,M.normalized)}M.name!==void 0&&(b.name=M.name),v.push(b)}o.morphAttributes[d]=v}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let d=0,p=h.length;d!==p;++d){const v=h[d];o.addGroup(v.start,v.count,v.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const d=new F;f.center!==void 0&&d.fromArray(f.center),o.boundingSphere=new jt(d,f.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class _E extends Pn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=this.path===""?Pr.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new xi(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(h){r!==void 0&&r(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){r!==void 0&&r(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},n,r)}async loadAsync(e,t){const n=this,r=this.path===""?Pr.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const s=new xi(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,a,n),u=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,u),this.bindLightTargets(c),t!==void 0){let h=!1;for(const f in o)if(o[f].data instanceof HTMLImageElement){h=!0;break}h===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,r,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,r=e.length;n<r;n++){const s=new bs().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},r={};if(t.traverse(function(s){s.isBone&&(r[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new ll().fromJSON(e[s],r);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const r=new Kx;for(let s=0,o=e.length;s<o;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=r.parse(l);break;default:l.type in vg?a=vg[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},r={};if(e!==void 0){const s=new gh;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),r[l.uuid]=n[l.uuid]}}return r}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const r=e[n],s=Ro.parse(r);t[s.uuid]=s}return t}parseImages(e,t){const n=this,r={};let s;function o(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return o(u)}else return l.data?{data:uo(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Ap(t);s=new qa(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.url;if(Array.isArray(f)){const d=[];for(let p=0,v=f.length;p<v;p++){const m=f[p],g=a(m);g!==null&&(g instanceof HTMLImageElement?d.push(g):d.push(new ni(g.data,g.width,g.height)))}r[h.uuid]=new Ar(d)}else{const d=a(h.url);r[h.uuid]=new Ar(d)}}}return r}async parseImagesAsync(e){const t=this,n={};let r;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await r.loadAsync(l)}else return o.data?{data:uo(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){r=new qa(this.manager),r.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h],p=await s(d);p!==null&&(p instanceof HTMLImageElement?u.push(p):u.push(new ni(p.data,p.width,p.height)))}n[l.uuid]=new Ar(u)}else{const u=await s(l.url);n[l.uuid]=new Ar(u)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const r={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let u;Array.isArray(c)?(u=new al,c.length===6&&(u.needsUpdate=!0)):(c&&c.data?u=new ni:u=new At,c&&(u.needsUpdate=!0)),u.source=l,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,xE)),a.channel!==void 0&&(u.channel=a.channel),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],bg),u.wrapT=n(a.wrap[1],bg)),a.format!==void 0&&(u.format=a.format),a.internalFormat!==void 0&&(u.internalFormat=a.internalFormat),a.type!==void 0&&(u.type=a.type),a.colorSpace!==void 0&&(u.colorSpace=a.colorSpace),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,Mg)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,Mg)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.generateMipmaps!==void 0&&(u.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(u.compareFunction=a.compareFunction),a.userData!==void 0&&(u.userData=a.userData),r[a.uuid]=u}return r}parseObject(e,t,n,r,s){let o;function a(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,v=f.length;p<v;p++){const m=f[p];n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),d.push(n[m])}return d}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function c(f){return r[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),r[f]}let u,h;switch(e.type){case"Scene":o=new Rs,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new we(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Ju(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Zu(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(o.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new St(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Di(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Xx(e.color,e.intensity);break;case"DirectionalLight":o=new Lp(e.color,e.intensity),o.target=e.target||"";break;case"PointLight":o=new Pp(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new jx(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Ip(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),o.target=e.target||"";break;case"HemisphereLight":o=new Wx(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new qx().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),h=l(e.material),o=new fp(u,h),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),h=l(e.material),o=new wt(u,h);break;case"InstancedMesh":u=a(e.geometry),h=l(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;o=new dp(u,h,f),o.instanceMatrix=new Cs(new Float32Array(d.array),16),p!==void 0&&(o.instanceColor=new Cs(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":u=a(e.geometry),h=l(e.material),o=new vx(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,h),o.geometry=u,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._geometryInfo=e.geometryInfo.map(v=>{let m=null,g=null;return v.boundingBox!==void 0&&(m=new Xt,m.min.fromArray(v.boundingBox.min),m.max.fromArray(v.boundingBox.max)),v.boundingSphere!==void 0&&(g=new jt,g.radius=v.boundingSphere.radius,g.center.fromArray(v.boundingSphere.center)),{...v,boundingBox:m,boundingSphere:g}}),o._instanceInfo=e.instanceInfo,o._availableInstanceIds=e._availableInstanceIds,o._availableGeometryIds=e._availableGeometryIds,o._nextIndexStart=e.nextIndexStart,o._nextVertexStart=e.nextVertexStart,o._geometryCount=e.geometryCount,o._maxInstanceCount=e.maxInstanceCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._matricesTexture=c(e.matricesTexture.uuid),o._indirectTexture=c(e.indirectTexture.uuid),e.colorsTexture!==void 0&&(o._colorsTexture=c(e.colorsTexture.uuid)),e.boundingSphere!==void 0&&(o.boundingSphere=new jt,o.boundingSphere.center.fromArray(e.boundingSphere.center),o.boundingSphere.radius=e.boundingSphere.radius),e.boundingBox!==void 0&&(o.boundingBox=new Xt,o.boundingBox.min.fromArray(e.boundingBox.min),o.boundingBox.max.fromArray(e.boundingBox.max));break;case"LOD":o=new gx;break;case"Line":o=new ar(a(e.geometry),l(e.material));break;case"LineLoop":o=new pp(a(e.geometry),l(e.material));break;case"LineSegments":o=new Mi(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new mp(a(e.geometry),l(e.material));break;case"Sprite":o=new mx(l(e.material));break;case"Group":o=new er;break;case"Bone":o=new Qu;break;default:o=new ct}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(o.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)o.add(this.parseObject(f[d],t,n,r,s))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];o.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],v=o.getObjectByProperty("uuid",p.object);v!==void 0&&o.addLevel(v,p.distance,p.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const r=t[n.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(r,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,r=e.getObjectByProperty("uuid",n);r!==void 0?t.target=r:t.target=new ct}})}}const xE={UVMapping:ku,CubeReflectionMapping:rr,CubeRefractionMapping:Dr,EquirectangularReflectionMapping:yo,EquirectangularRefractionMapping:za,CubeUVReflectionMapping:No},bg={RepeatWrapping:sr,ClampToEdgeWrapping:Jt,MirroredRepeatWrapping:Ts},Mg={NearestFilter:Lt,NearestMipmapNearestFilter:nl,NearestMipmapLinearFilter:Er,LinearFilter:Ct,LinearMipmapNearestFilter:_s,LinearMipmapLinearFilter:Xn};class Zx extends Pn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=tr.get(e);if(o!==void 0){if(s.manager.itemStart(e),o.then){o.then(c=>{t&&t(c),s.manager.itemEnd(e)}).catch(c=>{r&&r(c)});return}return setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return tr.add(e,c),t&&t(c),s.manager.itemEnd(e),c}).catch(function(c){r&&r(c),tr.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});tr.add(e,l),s.manager.itemStart(e)}}let nc;class Dp{static getContext(){return nc===void 0&&(nc=new(window.AudioContext||window.webkitAudioContext)),nc}static setContext(e){nc=e}}class yE extends Pn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new xi(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{const c=l.slice(0);Dp.getContext().decodeAudioData(c,function(h){t(h)}).catch(a)}catch(c){a(c)}},n,r);function a(l){r?r(l):console.error(l),s.manager.itemError(e)}}}const Sg=new ke,wg=new ke,Jr=new ke;class bE{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new St,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new St,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Jr.copy(e.projectionMatrix);const r=t.eyeSep/2,s=r*t.near/t.focus,o=t.near*Math.tan(xs*t.fov*.5)/t.zoom;let a,l;wg.elements[12]=-r,Sg.elements[12]=r,a=-o*t.aspect+s,l=o*t.aspect+s,Jr.elements[0]=2*t.near/(l-a),Jr.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(Jr),a=-o*t.aspect-s,l=o*t.aspect-s,Jr.elements[0]=2*t.near/(l-a),Jr.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(Jr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(wg),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Sg)}}class Jx extends St{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class vh{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Tg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Tg();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Tg(){return performance.now()}const Qr=new F,Eg=new en,ME=new F,es=new F;class SE extends ct{constructor(){super(),this.type="AudioListener",this.context=Dp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new vh}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Qr,Eg,ME),es.set(0,0,-1).applyQuaternion(Eg),t.positionX){const r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Qr.x,r),t.positionY.linearRampToValueAtTime(Qr.y,r),t.positionZ.linearRampToValueAtTime(Qr.z,r),t.forwardX.linearRampToValueAtTime(es.x,r),t.forwardY.linearRampToValueAtTime(es.y,r),t.forwardZ.linearRampToValueAtTime(es.z,r),t.upX.linearRampToValueAtTime(n.x,r),t.upY.linearRampToValueAtTime(n.y,r),t.upZ.linearRampToValueAtTime(n.z,r)}else t.setPosition(Qr.x,Qr.y,Qr.z),t.setOrientation(es.x,es.y,es.z,n.x,n.y,n.z)}}class Qx extends ct{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const ts=new F,Ag=new en,wE=new F,ns=new F;class TE extends Qx{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ts,Ag,wE),ns.set(0,0,1).applyQuaternion(Ag);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ts.x,n),t.positionY.linearRampToValueAtTime(ts.y,n),t.positionZ.linearRampToValueAtTime(ts.z,n),t.orientationX.linearRampToValueAtTime(ns.x,n),t.orientationY.linearRampToValueAtTime(ns.y,n),t.orientationZ.linearRampToValueAtTime(ns.z,n)}else t.setPosition(ts.x,ts.y,ts.z),t.setOrientation(ns.x,ns.y,ns.z)}}class EE{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class ey{constructor(e,t,n){this.binding=e,this.valueSize=n;let r,s,o;switch(t){case"quaternion":r=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:r=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,r=this.valueSize,s=e*r+r;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==r;++a)n[s+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,s,0,a,r)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,r=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,r=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(n,r,l,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){a.setValue(n,r);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,r=n*this._origIndex;e.getValue(t,r);for(let s=n,o=r;s!==o;++s)t[s]=t[r+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,r,s){if(r>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,r){en.slerpFlat(e,t,e,t,e,n,r)}_slerpAdditive(e,t,n,r,s){const o=this._workIndex*s;en.multiplyQuaternionsFlat(e,o,e,t,e,n),en.slerpFlat(e,t,e,t,e,o,r)}_lerp(e,t,n,r,s){const o=1-r;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*r}}_lerpAdditive(e,t,n,r,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*r}}}const Np="\\[\\]\\.:\\/",AE=new RegExp("["+Np+"]","g"),Up="[^"+Np+"]",RE="[^"+Np.replace("\\.","")+"]",CE=/((?:WC+[\/:])*)/.source.replace("WC",Up),IE=/(WCOD+)?/.source.replace("WCOD",RE),PE=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Up),LE=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Up),DE=new RegExp("^"+CE+IE+PE+LE+"$"),NE=["material","materials","bones","map"];class UE{constructor(e,t,n){const r=n||rt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];r!==void 0&&r.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=n.length;r!==s;++r)n[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class rt{constructor(e,t,n){this.path=t,this.parsedPath=n||rt.parseTrackName(t),this.node=rt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new rt.Composite(e,t,n):new rt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(AE,"")}static parseTrackName(e){const t=DE.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=n.nodeName.substring(r+1);NE.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let s=t.propertyIndex;if(e||(e=rt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[r];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+r+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}rt.Composite=UE;rt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};rt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};rt.prototype.GetterByBindingType=[rt.prototype._getValue_direct,rt.prototype._getValue_array,rt.prototype._getValue_arrayElement,rt.prototype._getValue_toArray];rt.prototype.SetterByBindingTypeAndVersioning=[[rt.prototype._setValue_direct,rt.prototype._setValue_direct_setNeedsUpdate,rt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[rt.prototype._setValue_array,rt.prototype._setValue_array_setNeedsUpdate,rt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[rt.prototype._setValue_arrayElement,rt.prototype._setValue_arrayElement_setNeedsUpdate,rt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[rt.prototype._setValue_fromArray,rt.prototype._setValue_fromArray_setNeedsUpdate,rt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class OE{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Yn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,r=arguments.length;n!==r;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length;let a,l=e.length,c=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const f=arguments[u],d=f.uuid;let p=t[d];if(p===void 0){p=l++,t[d]=p,e.push(f);for(let v=0,m=o;v!==m;++v)s[v].push(new rt(f,n[v],r[v]))}else if(p<c){a=e[p];const v=--c,m=e[v];t[m.uuid]=p,e[p]=m,t[d]=v,e[v]=f;for(let g=0,M=o;g!==M;++g){const b=s[g],y=b[v];let C=b[p];b[p]=y,C===void 0&&(C=new rt(f,n[g],r[g])),b[v]=C}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=t[c];if(u!==void 0&&u>=s){const h=s++,f=e[h];t[f.uuid]=u,e[u]=f,t[c]=h,e[h]=l;for(let d=0,p=r;d!==p;++d){const v=n[d],m=v[h],g=v[u];v[u]=m,v[h]=g}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],u=c.uuid,h=t[u];if(h!==void 0)if(delete t[u],h<s){const f=--s,d=e[f],p=--o,v=e[p];t[d.uuid]=h,e[h]=d,t[v.uuid]=f,e[f]=v,e.pop();for(let m=0,g=r;m!==g;++m){const M=n[m],b=M[f],y=M[p];M[h]=b,M[f]=y,M.pop()}}else{const f=--o,d=e[f];f>0&&(t[d.uuid]=h),e[h]=d,e.pop();for(let p=0,v=r;p!==v;++p){const m=n[p];m[h]=m[f],m.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let r=n[e];const s=this._bindings;if(r!==void 0)return s[r];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,u=this.nCachedObjects_,h=new Array(c);r=s.length,n[e]=r,o.push(e),a.push(t),s.push(h);for(let f=u,d=l.length;f!==d;++f){const p=l[f];h[f]=new rt(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const r=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=n,o[n]=l,o.pop(),s[n]=s[a],s.pop(),r[n]=r[a],r.pop()}}}class ty{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:fs,endingEnd:fs};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=q0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n=!1){if(e.fadeOut(t),this.fadeIn(t),n===!0){const r=this._clip.duration,s=e._clip.duration,o=s/r,a=r/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n=!1){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const r=this._mixer,s=r.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case sp:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case Yu:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(r,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let r=this.time+e,s=this._loopCount;const o=n===$0;if(e===0)return s===-1?r:o&&(s&1)===1?t-r:r;if(n===Y0){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=t||r<0){const a=Math.floor(r/t);r-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(o&&(s&1)===1)return t-r}return r}_setEndings(e,t,n){const r=this._interpolantSettings;n?(r.endingStart=ds,r.endingEnd=ds):(e?r.endingStart=this.zeroSlopeAtStart?ds:fs:r.endingStart=ka,t?r.endingEnd=this.zeroSlopeAtEnd?ds:fs:r.endingEnd=ka)}_scheduleFading(e,t,n){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=n,this}}const FE=new Float32Array(1);class BE extends bi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,r=e._clip.tracks,s=r.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==s;++h){const f=r[h],d=f.name;let p=u[d];if(p!==void 0)++p.referenceCount,o[h]=p;else{if(p=o[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const v=t&&t._propertyBindings[h].binding.parsedPath;p=new ey(rt.create(n,d,v),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),o[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,r=e._clip.uuid,s=this._actionsByClip[r];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,r,n)}const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const r=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=r.length,r.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null;const h=a.actionByRoot,f=(e._localRoot||this._root).uuid;delete h[f],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const r=this._bindingsByRootAndName,s=this._bindings;let o=r[t];o===void 0&&(o={},r[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,r=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[r],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[r]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Tp(new Float32Array(2),new Float32Array(2),1,FE),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,s=t[r];e.__cacheIndex=r,t[r]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const r=t||this._root,s=r.uuid;let o=typeof e=="string"?Ro.findByName(r,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=Yu),l!==void 0){const h=l.actionByRoot[s];if(h!==void 0&&h.blendMode===n)return h;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const u=new ty(this,o,t,n);return this._bindAction(u,c),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,r=n.uuid,s=typeof e=="string"?Ro.findByName(n,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[r]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,r=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(r,e,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,r=this._actionsByClip,s=r[n];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete r[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const r=this._bindingsByRootAndName,s=r[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class zE extends qu{constructor(e=1,t=1,n=1,r={}){super(e,t,r),this.isRenderTarget3D=!0,this.depth=n,this.texture=new $u(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class kE extends qu{constructor(e=1,t=1,n=1,r={}){super(e,t,r),this.isRenderTargetArray=!0,this.depth=n,this.texture=new rl(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class _h{constructor(e){this.value=e}clone(){return new _h(this.value.clone===void 0?this.value:this.value.clone())}}let VE=0;class HE extends bi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:VE++}),this.name="",this.usage=Ha,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,r=t.length;n<r;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let o=0;o<s.length;o++)this.uniforms.push(s[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class GE extends Uo{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class WE{constructor(e,t,n,r,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=r,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const Rg=new ke;class ny{constructor(e,t,n=0,r=1/0){this.ray=new Fs(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new Ku,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Rg.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Rg),this}intersectObject(e,t=!0,n=[]){return ud(e,this,n,t),n.sort(Cg),n}intersectObjects(e,t=!0,n=[]){for(let r=0,s=e.length;r<s;r++)ud(e[r],this,n,t);return n.sort(Cg),n}}function Cg(i,e){return i.distance-e.distance}function ud(i,e,t,n){let r=!0;if(i.layers.test(e.layers)&&i.raycast(e,t)===!1&&(r=!1),r===!0&&n===!0){const s=i.children;for(let o=0,a=s.length;o<a;o++)ud(s[o],e,t,!0)}}class hd{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Ke(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Ke(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class XE{constructor(e=1,t=0,n=0){this.radius=e,this.theta=t,this.y=n}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class Op{constructor(e,t,n,r){Op.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,r)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,r){const s=this.elements;return s[0]=e,s[2]=t,s[1]=n,s[3]=r,this}}const Ig=new pe;class iy{constructor(e=new pe(1/0,1/0),t=new pe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ig.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ig).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Pg=new F,ic=new F;class ry{constructor(e=new F,t=new F){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Pg.subVectors(e,this.start),ic.subVectors(this.end,this.start);const n=ic.dot(ic);let s=ic.dot(Pg)/n;return t&&(s=Ke(s,0,1)),s}closestPointToPoint(e,t,n){const r=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Lg=new F;class jE extends ct{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new Ze,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,u=a/l*Math.PI*2;r.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new Fe(r,3));const s=new vn({fog:!1,toneMapped:!1});this.cone=new Mi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Lg.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Lg),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const vr=new F,rc=new ke,gf=new ke;class YE extends Mi{constructor(e){const t=sy(e),n=new Ze,r=[],s=[],o=new we(0,0,1),a=new we(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new Fe(r,3)),n.setAttribute("color",new Fe(s,3));const l=new vn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,r=n.getAttribute("position");gf.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(rc.multiplyMatrices(gf,a.matrixWorld),vr.setFromMatrixPosition(rc),r.setXYZ(o,vr.x,vr.y,vr.z),rc.multiplyMatrices(gf,a.parent.matrixWorld),vr.setFromMatrixPosition(rc),r.setXYZ(o+1,vr.x,vr.y,vr.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function sy(i){const e=[];i.isBone===!0&&e.push(i);for(let t=0;t<i.children.length;t++)e.push(...sy(i.children[t]));return e}class qE extends wt{constructor(e,t,n){const r=new fl(t,4,2),s=new Cn({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const $E=new F,Dg=new we,Ng=new we;class KE extends ct{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const r=new hl(t);r.rotateY(Math.PI*.5),this.material=new Cn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),o=new Float32Array(s.count*3);r.setAttribute("color",new lt(o,3)),this.add(new wt(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Dg.copy(this.light.color),Ng.copy(this.light.groundColor);for(let n=0,r=t.count;n<r;n++){const s=n<r/2?Dg:Ng;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt($E.setFromMatrixPosition(this.light.matrixWorld).negate())}}class ZE extends Mi{constructor(e=10,t=10,n=4473924,r=8947848){n=new we(n),r=new we(r);const s=t/2,o=e/t,a=e/2,l=[],c=[];for(let f=0,d=0,p=-a;f<=t;f++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const v=f===s?n:r;v.toArray(c,d),d+=3,v.toArray(c,d),d+=3,v.toArray(c,d),d+=3,v.toArray(c,d),d+=3}const u=new Ze;u.setAttribute("position",new Fe(l,3)),u.setAttribute("color",new Fe(c,3));const h=new vn({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class JE extends Mi{constructor(e=10,t=16,n=8,r=64,s=4473924,o=8947848){s=new we(s),o=new we(o);const a=[],l=[];if(t>1)for(let h=0;h<t;h++){const f=h/t*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;a.push(0,0,0),a.push(d,0,p);const v=h&1?s:o;l.push(v.r,v.g,v.b),l.push(v.r,v.g,v.b)}for(let h=0;h<n;h++){const f=h&1?s:o,d=e-e/n*h;for(let p=0;p<r;p++){let v=p/r*(Math.PI*2),m=Math.sin(v)*d,g=Math.cos(v)*d;a.push(m,0,g),l.push(f.r,f.g,f.b),v=(p+1)/r*(Math.PI*2),m=Math.sin(v)*d,g=Math.cos(v)*d,a.push(m,0,g),l.push(f.r,f.g,f.b)}}const c=new Ze;c.setAttribute("position",new Fe(a,3)),c.setAttribute("color",new Fe(l,3));const u=new vn({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Ug=new F,sc=new F,Og=new F;class QE extends ct{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let r=new Ze;r.setAttribute("position",new Fe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new vn({fog:!1,toneMapped:!1});this.lightPlane=new ar(r,s),this.add(this.lightPlane),r=new Ze,r.setAttribute("position",new Fe([0,0,0,0,0,1],3)),this.targetLine=new ar(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Ug.setFromMatrixPosition(this.light.matrixWorld),sc.setFromMatrixPosition(this.light.target.matrixWorld),Og.subVectors(sc,Ug),this.lightPlane.lookAt(sc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(sc),this.targetLine.scale.z=Og.length()}}const oc=new F,Ot=new ol;class e1 extends Mi{constructor(e){const t=new Ze,n=new vn({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,v){l(p),l(v)}function l(p){r.push(0,0,0),s.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(r.length/3-1)}t.setAttribute("position",new Fe(r,3)),t.setAttribute("color",new Fe(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new we(16755200),u=new we(16711680),h=new we(43775),f=new we(16777215),d=new we(3355443);this.setColors(c,u,h,f,d)}setColors(e,t,n,r,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,r.r,r.g,r.b),a.setXYZ(39,r.r,r.g,r.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,r=1;Ot.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const s=this.camera.coordinateSystem===ei?-1:0;Ft("c",t,e,Ot,0,0,s),Ft("t",t,e,Ot,0,0,1),Ft("n1",t,e,Ot,-1,-1,s),Ft("n2",t,e,Ot,n,-1,s),Ft("n3",t,e,Ot,-1,r,s),Ft("n4",t,e,Ot,n,r,s),Ft("f1",t,e,Ot,-1,-1,1),Ft("f2",t,e,Ot,n,-1,1),Ft("f3",t,e,Ot,-1,r,1),Ft("f4",t,e,Ot,n,r,1),Ft("u1",t,e,Ot,n*.7,r*1.1,s),Ft("u2",t,e,Ot,-1*.7,r*1.1,s),Ft("u3",t,e,Ot,0,r*2,s),Ft("cf1",t,e,Ot,-1,0,1),Ft("cf2",t,e,Ot,n,0,1),Ft("cf3",t,e,Ot,0,-1,1),Ft("cf4",t,e,Ot,0,r,1),Ft("cn1",t,e,Ot,-1,0,s),Ft("cn2",t,e,Ot,n,0,s),Ft("cn3",t,e,Ot,0,-1,s),Ft("cn4",t,e,Ot,0,r,s),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Ft(i,e,t,n,r,s,o){oc.set(r,s,o).unproject(n);const a=e[i];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,u=a.length;c<u;c++)l.setXYZ(a[c],oc.x,oc.y,oc.z)}}const ac=new Xt;class t1 extends Mi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),s=new Ze;s.setIndex(new lt(n,1)),s.setAttribute("position",new lt(r,3)),super(s,new vn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&ac.setFromObject(this.object),ac.isEmpty())return;const e=ac.min,t=ac.max,n=this.geometry.attributes.position,r=n.array;r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=e.x,r[4]=t.y,r[5]=t.z,r[6]=e.x,r[7]=e.y,r[8]=t.z,r[9]=t.x,r[10]=e.y,r[11]=t.z,r[12]=t.x,r[13]=t.y,r[14]=e.z,r[15]=e.x,r[16]=t.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=t.x,r[22]=e.y,r[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class n1 extends Mi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Ze;s.setIndex(new lt(n,1)),s.setAttribute("position",new Fe(r,3)),super(s,new vn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class i1 extends ar{constructor(e,t=1,n=16776960){const r=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new Ze;o.setAttribute("position",new Fe(s,3)),o.computeBoundingSphere(),super(o,new vn({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new Ze;l.setAttribute("position",new Fe(a,3)),l.computeBoundingSphere(),this.add(new wt(l,new Cn({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Fg=new F;let lc,vf;class r1 extends ct{constructor(e=new F(0,0,1),t=new F(0,0,0),n=1,r=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",lc===void 0&&(lc=new Ze,lc.setAttribute("position",new Fe([0,0,0,0,1,0],3)),vf=new ul(.5,1,5,1),vf.translate(0,-.5,0)),this.position.copy(t),this.line=new ar(lc,new vn({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new wt(vf,new Cn({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Fg.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Fg,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class s1 extends Mi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new Ze;r.setAttribute("position",new Fe(t,3)),r.setAttribute("color",new Fe(n,3));const s=new vn({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}setColors(e,t,n){const r=new we,s=this.geometry.attributes.color.array;return r.set(e),r.toArray(s,0),r.toArray(s,3),r.set(t),r.toArray(s,6),r.toArray(s,9),r.set(n),r.toArray(s,12),r.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class oy{constructor(){this.type="ShapePath",this.color=new we,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Mu,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this}bezierCurveTo(e,t,n,r,s,o){return this.currentPath.bezierCurveTo(e,t,n,r,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const M=[];for(let b=0,y=g.length;b<y;b++){const C=g[b],w=new bs;w.curves=C.curves,M.push(w)}return M}function n(g,M){const b=M.length;let y=!1;for(let C=b-1,w=0;w<b;C=w++){let E=M[C],S=M[w],x=S.x-E.x,_=S.y-E.y;if(Math.abs(_)>Number.EPSILON){if(_<0&&(E=M[w],x=-x,S=M[C],_=-_),g.y<E.y||g.y>S.y)continue;if(g.y===E.y){if(g.x===E.x)return!0}else{const A=_*(g.x-E.x)-x*(g.y-E.y);if(A===0)return!0;if(A<0)continue;y=!y}}else{if(g.y!==E.y)continue;if(S.x<=g.x&&g.x<=E.x||E.x<=g.x&&g.x<=S.x)return!0}}return y}const r=fi.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new bs,l.curves=a.curves,c.push(l),c;let u=!r(s[0].getPoints());u=e?!u:u;const h=[],f=[];let d=[],p=0,v;f[p]=void 0,d[p]=[];for(let g=0,M=s.length;g<M;g++)a=s[g],v=a.getPoints(),o=r(v),o=e?!o:o,o?(!u&&f[p]&&p++,f[p]={s:new bs,p:v},f[p].s.curves=a.curves,u&&p++,d[p]=[]):d[p].push({h:a,p:v[0]});if(!f[0])return t(s);if(f.length>1){let g=!1,M=0;for(let b=0,y=f.length;b<y;b++)h[b]=[];for(let b=0,y=f.length;b<y;b++){const C=d[b];for(let w=0;w<C.length;w++){const E=C[w];let S=!0;for(let x=0;x<f.length;x++)n(E.p,f[x].p)&&(b!==x&&M++,S?(S=!1,h[x].push(E)):g=!0);S&&h[b].push(E)}}M>0&&g===!1&&(d=h)}let m;for(let g=0,M=f.length;g<M;g++){l=f[g].s,c.push(l),m=d[g];for(let b=0,y=m.length;b<y;b++)l.holes.push(m[b].h)}return c}}class o1 extends bi{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function a1(i,e){const t=i.image&&i.image.width?i.image.width/i.image.height:1;return t>e?(i.repeat.x=1,i.repeat.y=t/e,i.offset.x=0,i.offset.y=(1-i.repeat.y)/2):(i.repeat.x=e/t,i.repeat.y=1,i.offset.x=(1-i.repeat.x)/2,i.offset.y=0),i}function l1(i,e){const t=i.image&&i.image.width?i.image.width/i.image.height:1;return t>e?(i.repeat.x=e/t,i.repeat.y=1,i.offset.x=(1-i.repeat.x)/2,i.offset.y=0):(i.repeat.x=1,i.repeat.y=t/e,i.offset.x=0,i.offset.y=(1-i.repeat.y)/2),i}function c1(i){return i.repeat.x=1,i.repeat.y=1,i.offset.x=0,i.offset.y=0,i}function fd(i,e,t,n){const r=u1(n);switch(t){case tp:return i*e;case Wu:return i*e/r.components*r.byteLength;case il:return i*e/r.components*r.byteLength;case ip:return i*e*2/r.components*r.byteLength;case Xu:return i*e*2/r.components*r.byteLength;case np:return i*e*3/r.components*r.byteLength;case Qt:return i*e*4/r.components*r.byteLength;case ju:return i*e*4/r.components*r.byteLength;case _a:case xa:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case ya:case ba:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case Yc:case $c:return Math.max(i,16)*Math.max(e,8)/4;case jc:case qc:return Math.max(i,8)*Math.max(e,8)/2;case Kc:case Zc:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case Jc:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case Qc:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case eu:return Math.floor((i+4)/5)*Math.floor((e+3)/4)*16;case tu:return Math.floor((i+4)/5)*Math.floor((e+4)/5)*16;case nu:return Math.floor((i+5)/6)*Math.floor((e+4)/5)*16;case iu:return Math.floor((i+5)/6)*Math.floor((e+5)/6)*16;case ru:return Math.floor((i+7)/8)*Math.floor((e+4)/5)*16;case su:return Math.floor((i+7)/8)*Math.floor((e+5)/6)*16;case ou:return Math.floor((i+7)/8)*Math.floor((e+7)/8)*16;case au:return Math.floor((i+9)/10)*Math.floor((e+4)/5)*16;case lu:return Math.floor((i+9)/10)*Math.floor((e+5)/6)*16;case cu:return Math.floor((i+9)/10)*Math.floor((e+7)/8)*16;case uu:return Math.floor((i+9)/10)*Math.floor((e+9)/10)*16;case hu:return Math.floor((i+11)/12)*Math.floor((e+9)/10)*16;case fu:return Math.floor((i+11)/12)*Math.floor((e+11)/12)*16;case Ma:case du:case pu:return Math.ceil(i/4)*Math.ceil(e/4)*16;case rp:case mu:return Math.ceil(i/4)*Math.ceil(e/4)*8;case gu:case vu:return Math.ceil(i/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function u1(i){switch(i){case vi:case Jd:return{byteLength:1,components:1};case bo:case Qd:case hi:return{byteLength:2,components:1};case Hu:case Gu:return{byteLength:2,components:4};case or:case Vu:case on:return{byteLength:4,components:1};case ep:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${i}.`)}class h1{static contain(e,t){return a1(e,t)}static cover(e,t){return l1(e,t)}static fill(e){return c1(e)}static getByteLength(e,t,n,r){return fd(e,t,n,r)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Do}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Do);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function ay(){let i=null,e=!1,t=null,n=null;function r(s,o){t(s,o),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){i=s}}}function f1(i){const e=new WeakMap;function t(a,l){const c=a.array,u=a.usage,h=c.byteLength,f=i.createBuffer();i.bindBuffer(l,f),i.bufferData(l,c,u),a.onUploadCallback();let d;if(c instanceof Float32Array)d=i.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?d=i.HALF_FLOAT:d=i.UNSIGNED_SHORT;else if(c instanceof Int16Array)d=i.SHORT;else if(c instanceof Uint32Array)d=i.UNSIGNED_INT;else if(c instanceof Int32Array)d=i.INT;else if(c instanceof Int8Array)d=i.BYTE;else if(c instanceof Uint8Array)d=i.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)d=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:f,type:d,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:h}}function n(a,l,c){const u=l.array,h=l.updateRanges;if(i.bindBuffer(c,a),h.length===0)i.bufferSubData(c,0,u);else{h.sort((d,p)=>d.start-p.start);let f=0;for(let d=1;d<h.length;d++){const p=h[f],v=h[d];v.start<=p.start+p.count+1?p.count=Math.max(p.count,v.start+v.count-p.start):(++f,h[f]=v)}h.length=f+1;for(let d=0,p=h.length;d<p;d++){const v=h[d];i.bufferSubData(c,v.start*u.BYTES_PER_ELEMENT,u,v.start,v.count)}l.clearUpdateRanges()}l.onUploadCallback()}function r(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(i.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const u=e.get(a);(!u||u.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(c.buffer,a,l),c.version=a.version}}return{get:r,remove:s,update:o}}var d1=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,p1=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,m1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,g1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,v1=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,_1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,x1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,y1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,b1=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,M1=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,S1=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,w1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,T1=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,E1=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,A1=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,R1=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,C1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,I1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,P1=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,L1=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,D1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,N1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,U1=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,O1=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,F1=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,B1=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,z1=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,k1=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,V1=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,H1=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,G1="gl_FragColor = linearToOutputTexel( gl_FragColor );",W1=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,X1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,j1=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Y1=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,q1=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,$1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,K1=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Z1=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,J1=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Q1=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,eA=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,tA=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,nA=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,iA=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,rA=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,sA=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,oA=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,aA=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,lA=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,cA=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,uA=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,hA=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,fA=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,dA=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,pA=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,mA=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,gA=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,vA=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,_A=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,xA=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,yA=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,bA=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,MA=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,SA=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,wA=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,TA=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,EA=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,AA=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,RA=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,CA=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,IA=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,PA=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,LA=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,DA=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,NA=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,UA=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,OA=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,FA=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,BA=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,zA=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,kA=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,VA=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,HA=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,GA=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,WA=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,XA=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,jA=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,YA=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,qA=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,$A=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,KA=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,ZA=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,JA=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,QA=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,eR=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,tR=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,nR=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,iR=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,rR=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,sR=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,oR=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,aR=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,lR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,cR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,hR=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const fR=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,dR=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,pR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,mR=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,gR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,vR=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,_R=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,xR=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,yR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,bR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,MR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,SR=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,wR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,TR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ER=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,AR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,RR=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,CR=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,IR=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,PR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,LR=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,DR=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,NR=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,UR=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,OR=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,FR=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,BR=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,VR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,HR=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,GR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,WR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,XR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,nt={alphahash_fragment:d1,alphahash_pars_fragment:p1,alphamap_fragment:m1,alphamap_pars_fragment:g1,alphatest_fragment:v1,alphatest_pars_fragment:_1,aomap_fragment:x1,aomap_pars_fragment:y1,batching_pars_vertex:b1,batching_vertex:M1,begin_vertex:S1,beginnormal_vertex:w1,bsdfs:T1,iridescence_fragment:E1,bumpmap_pars_fragment:A1,clipping_planes_fragment:R1,clipping_planes_pars_fragment:C1,clipping_planes_pars_vertex:I1,clipping_planes_vertex:P1,color_fragment:L1,color_pars_fragment:D1,color_pars_vertex:N1,color_vertex:U1,common:O1,cube_uv_reflection_fragment:F1,defaultnormal_vertex:B1,displacementmap_pars_vertex:z1,displacementmap_vertex:k1,emissivemap_fragment:V1,emissivemap_pars_fragment:H1,colorspace_fragment:G1,colorspace_pars_fragment:W1,envmap_fragment:X1,envmap_common_pars_fragment:j1,envmap_pars_fragment:Y1,envmap_pars_vertex:q1,envmap_physical_pars_fragment:sA,envmap_vertex:$1,fog_vertex:K1,fog_pars_vertex:Z1,fog_fragment:J1,fog_pars_fragment:Q1,gradientmap_pars_fragment:eA,lightmap_pars_fragment:tA,lights_lambert_fragment:nA,lights_lambert_pars_fragment:iA,lights_pars_begin:rA,lights_toon_fragment:oA,lights_toon_pars_fragment:aA,lights_phong_fragment:lA,lights_phong_pars_fragment:cA,lights_physical_fragment:uA,lights_physical_pars_fragment:hA,lights_fragment_begin:fA,lights_fragment_maps:dA,lights_fragment_end:pA,logdepthbuf_fragment:mA,logdepthbuf_pars_fragment:gA,logdepthbuf_pars_vertex:vA,logdepthbuf_vertex:_A,map_fragment:xA,map_pars_fragment:yA,map_particle_fragment:bA,map_particle_pars_fragment:MA,metalnessmap_fragment:SA,metalnessmap_pars_fragment:wA,morphinstance_vertex:TA,morphcolor_vertex:EA,morphnormal_vertex:AA,morphtarget_pars_vertex:RA,morphtarget_vertex:CA,normal_fragment_begin:IA,normal_fragment_maps:PA,normal_pars_fragment:LA,normal_pars_vertex:DA,normal_vertex:NA,normalmap_pars_fragment:UA,clearcoat_normal_fragment_begin:OA,clearcoat_normal_fragment_maps:FA,clearcoat_pars_fragment:BA,iridescence_pars_fragment:zA,opaque_fragment:kA,packing:VA,premultiplied_alpha_fragment:HA,project_vertex:GA,dithering_fragment:WA,dithering_pars_fragment:XA,roughnessmap_fragment:jA,roughnessmap_pars_fragment:YA,shadowmap_pars_fragment:qA,shadowmap_pars_vertex:$A,shadowmap_vertex:KA,shadowmask_pars_fragment:ZA,skinbase_vertex:JA,skinning_pars_vertex:QA,skinning_vertex:eR,skinnormal_vertex:tR,specularmap_fragment:nR,specularmap_pars_fragment:iR,tonemapping_fragment:rR,tonemapping_pars_fragment:sR,transmission_fragment:oR,transmission_pars_fragment:aR,uv_pars_fragment:lR,uv_pars_vertex:cR,uv_vertex:uR,worldpos_vertex:hR,background_vert:fR,background_frag:dR,backgroundCube_vert:pR,backgroundCube_frag:mR,cube_vert:gR,cube_frag:vR,depth_vert:_R,depth_frag:xR,distanceRGBA_vert:yR,distanceRGBA_frag:bR,equirect_vert:MR,equirect_frag:SR,linedashed_vert:wR,linedashed_frag:TR,meshbasic_vert:ER,meshbasic_frag:AR,meshlambert_vert:RR,meshlambert_frag:CR,meshmatcap_vert:IR,meshmatcap_frag:PR,meshnormal_vert:LR,meshnormal_frag:DR,meshphong_vert:NR,meshphong_frag:UR,meshphysical_vert:OR,meshphysical_frag:FR,meshtoon_vert:BR,meshtoon_frag:zR,points_vert:kR,points_frag:VR,shadow_vert:HR,shadow_frag:GR,sprite_vert:WR,sprite_frag:XR},Pe={common:{diffuse:{value:new we(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Je},alphaMap:{value:null},alphaMapTransform:{value:new Je},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Je}},envmap:{envMap:{value:null},envMapRotation:{value:new Je},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Je}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Je}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Je},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Je},normalScale:{value:new pe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Je},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Je}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Je}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Je}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new we(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new we(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Je},alphaTest:{value:0},uvTransform:{value:new Je}},sprite:{diffuse:{value:new we(16777215)},opacity:{value:1},center:{value:new pe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Je},alphaMap:{value:null},alphaMapTransform:{value:new Je},alphaTest:{value:0}}},ci={basic:{uniforms:bn([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.fog]),vertexShader:nt.meshbasic_vert,fragmentShader:nt.meshbasic_frag},lambert:{uniforms:bn([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,Pe.lights,{emissive:{value:new we(0)}}]),vertexShader:nt.meshlambert_vert,fragmentShader:nt.meshlambert_frag},phong:{uniforms:bn([Pe.common,Pe.specularmap,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,Pe.lights,{emissive:{value:new we(0)},specular:{value:new we(1118481)},shininess:{value:30}}]),vertexShader:nt.meshphong_vert,fragmentShader:nt.meshphong_frag},standard:{uniforms:bn([Pe.common,Pe.envmap,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.roughnessmap,Pe.metalnessmap,Pe.fog,Pe.lights,{emissive:{value:new we(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:nt.meshphysical_vert,fragmentShader:nt.meshphysical_frag},toon:{uniforms:bn([Pe.common,Pe.aomap,Pe.lightmap,Pe.emissivemap,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.gradientmap,Pe.fog,Pe.lights,{emissive:{value:new we(0)}}]),vertexShader:nt.meshtoon_vert,fragmentShader:nt.meshtoon_frag},matcap:{uniforms:bn([Pe.common,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,Pe.fog,{matcap:{value:null}}]),vertexShader:nt.meshmatcap_vert,fragmentShader:nt.meshmatcap_frag},points:{uniforms:bn([Pe.points,Pe.fog]),vertexShader:nt.points_vert,fragmentShader:nt.points_frag},dashed:{uniforms:bn([Pe.common,Pe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:nt.linedashed_vert,fragmentShader:nt.linedashed_frag},depth:{uniforms:bn([Pe.common,Pe.displacementmap]),vertexShader:nt.depth_vert,fragmentShader:nt.depth_frag},normal:{uniforms:bn([Pe.common,Pe.bumpmap,Pe.normalmap,Pe.displacementmap,{opacity:{value:1}}]),vertexShader:nt.meshnormal_vert,fragmentShader:nt.meshnormal_frag},sprite:{uniforms:bn([Pe.sprite,Pe.fog]),vertexShader:nt.sprite_vert,fragmentShader:nt.sprite_frag},background:{uniforms:{uvTransform:{value:new Je},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:nt.background_vert,fragmentShader:nt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Je}},vertexShader:nt.backgroundCube_vert,fragmentShader:nt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:nt.cube_vert,fragmentShader:nt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:nt.equirect_vert,fragmentShader:nt.equirect_frag},distanceRGBA:{uniforms:bn([Pe.common,Pe.displacementmap,{referencePosition:{value:new F},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:nt.distanceRGBA_vert,fragmentShader:nt.distanceRGBA_frag},shadow:{uniforms:bn([Pe.lights,Pe.fog,{color:{value:new we(0)},opacity:{value:1}}]),vertexShader:nt.shadow_vert,fragmentShader:nt.shadow_frag}};ci.physical={uniforms:bn([ci.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Je},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Je},clearcoatNormalScale:{value:new pe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Je},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Je},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Je},sheen:{value:0},sheenColor:{value:new we(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Je},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Je},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Je},transmissionSamplerSize:{value:new pe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Je},attenuationDistance:{value:0},attenuationColor:{value:new we(0)},specularColor:{value:new we(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Je},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Je},anisotropyVector:{value:new pe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Je}}]),vertexShader:nt.meshphysical_vert,fragmentShader:nt.meshphysical_frag};const cc={r:0,b:0,g:0},is=new In,jR=new ke;function YR(i,e,t,n,r,s,o){const a=new we(0);let l=s===!0?0:1,c,u,h=null,f=0,d=null;function p(b){let y=b.isScene===!0?b.background:null;return y&&y.isTexture&&(y=(b.backgroundBlurriness>0?t:e).get(y)),y}function v(b){let y=!1;const C=p(b);C===null?g(a,l):C&&C.isColor&&(g(C,1),y=!0);const w=i.xr.getEnvironmentBlendMode();w==="additive"?n.buffers.color.setClear(0,0,0,1,o):w==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(i.autoClear||y)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil))}function m(b,y){const C=p(y);C&&(C.isCubeTexture||C.mapping===No)?(u===void 0&&(u=new wt(new Br(1,1,1),new gn({name:"BackgroundCubeMaterial",uniforms:Eo(ci.backgroundCube.uniforms),vertexShader:ci.backgroundCube.vertexShader,fragmentShader:ci.backgroundCube.fragmentShader,side:pn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(w,E,S){this.matrixWorld.copyPosition(S.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),is.copy(y.backgroundRotation),is.x*=-1,is.y*=-1,is.z*=-1,C.isCubeTexture&&C.isRenderTargetTexture===!1&&(is.y*=-1,is.z*=-1),u.material.uniforms.envMap.value=C,u.material.uniforms.flipEnvMap.value=C.isCubeTexture&&C.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=y.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(jR.makeRotationFromEuler(is)),u.material.toneMapped=at.getTransfer(C.colorSpace)!==yt,(h!==C||f!==C.version||d!==i.toneMapping)&&(u.material.needsUpdate=!0,h=C,f=C.version,d=i.toneMapping),u.layers.enableAll(),b.unshift(u,u.geometry,u.material,0,0,null)):C&&C.isTexture&&(c===void 0&&(c=new wt(new kr(2,2),new gn({name:"BackgroundMaterial",uniforms:Eo(ci.background.uniforms),vertexShader:ci.background.vertexShader,fragmentShader:ci.background.fragmentShader,side:Fi,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=C,c.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,c.material.toneMapped=at.getTransfer(C.colorSpace)!==yt,C.matrixAutoUpdate===!0&&C.updateMatrix(),c.material.uniforms.uvTransform.value.copy(C.matrix),(h!==C||f!==C.version||d!==i.toneMapping)&&(c.material.needsUpdate=!0,h=C,f=C.version,d=i.toneMapping),c.layers.enableAll(),b.unshift(c,c.geometry,c.material,0,0,null))}function g(b,y){b.getRGB(cc,hx(i)),n.buffers.color.setClear(cc.r,cc.g,cc.b,y,o)}function M(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(b,y=1){a.set(b),l=y,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(b){l=b,g(a,l)},render:v,addToRenderList:m,dispose:M}}function qR(i,e){const t=i.getParameter(i.MAX_VERTEX_ATTRIBS),n={},r=f(null);let s=r,o=!1;function a(_,A,N,B,V){let X=!1;const z=h(B,N,A);s!==z&&(s=z,c(s.object)),X=d(_,B,N,V),X&&p(_,B,N,V),V!==null&&e.update(V,i.ELEMENT_ARRAY_BUFFER),(X||o)&&(o=!1,y(_,A,N,B),V!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.get(V).buffer))}function l(){return i.createVertexArray()}function c(_){return i.bindVertexArray(_)}function u(_){return i.deleteVertexArray(_)}function h(_,A,N){const B=N.wireframe===!0;let V=n[_.id];V===void 0&&(V={},n[_.id]=V);let X=V[A.id];X===void 0&&(X={},V[A.id]=X);let z=X[B];return z===void 0&&(z=f(l()),X[B]=z),z}function f(_){const A=[],N=[],B=[];for(let V=0;V<t;V++)A[V]=0,N[V]=0,B[V]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:A,enabledAttributes:N,attributeDivisors:B,object:_,attributes:{},index:null}}function d(_,A,N,B){const V=s.attributes,X=A.attributes;let z=0;const te=N.getAttributes();for(const J in te)if(te[J].location>=0){const de=V[J];let oe=X[J];if(oe===void 0&&(J==="instanceMatrix"&&_.instanceMatrix&&(oe=_.instanceMatrix),J==="instanceColor"&&_.instanceColor&&(oe=_.instanceColor)),de===void 0||de.attribute!==oe||oe&&de.data!==oe.data)return!0;z++}return s.attributesNum!==z||s.index!==B}function p(_,A,N,B){const V={},X=A.attributes;let z=0;const te=N.getAttributes();for(const J in te)if(te[J].location>=0){let de=X[J];de===void 0&&(J==="instanceMatrix"&&_.instanceMatrix&&(de=_.instanceMatrix),J==="instanceColor"&&_.instanceColor&&(de=_.instanceColor));const oe={};oe.attribute=de,de&&de.data&&(oe.data=de.data),V[J]=oe,z++}s.attributes=V,s.attributesNum=z,s.index=B}function v(){const _=s.newAttributes;for(let A=0,N=_.length;A<N;A++)_[A]=0}function m(_){g(_,0)}function g(_,A){const N=s.newAttributes,B=s.enabledAttributes,V=s.attributeDivisors;N[_]=1,B[_]===0&&(i.enableVertexAttribArray(_),B[_]=1),V[_]!==A&&(i.vertexAttribDivisor(_,A),V[_]=A)}function M(){const _=s.newAttributes,A=s.enabledAttributes;for(let N=0,B=A.length;N<B;N++)A[N]!==_[N]&&(i.disableVertexAttribArray(N),A[N]=0)}function b(_,A,N,B,V,X,z){z===!0?i.vertexAttribIPointer(_,A,N,V,X):i.vertexAttribPointer(_,A,N,B,V,X)}function y(_,A,N,B){v();const V=B.attributes,X=N.getAttributes(),z=A.defaultAttributeValues;for(const te in X){const J=X[te];if(J.location>=0){let ue=V[te];if(ue===void 0&&(te==="instanceMatrix"&&_.instanceMatrix&&(ue=_.instanceMatrix),te==="instanceColor"&&_.instanceColor&&(ue=_.instanceColor)),ue!==void 0){const de=ue.normalized,oe=ue.itemSize,ye=e.get(ue);if(ye===void 0)continue;const Ce=ye.buffer,le=ye.type,ge=ye.bytesPerElement,be=le===i.INT||le===i.UNSIGNED_INT||ue.gpuType===Vu;if(ue.isInterleavedBufferAttribute){const Z=ue.data,K=Z.stride,I=ue.offset;if(Z.isInstancedInterleavedBuffer){for(let U=0;U<J.locationSize;U++)g(J.location+U,Z.meshPerAttribute);_.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=Z.meshPerAttribute*Z.count)}else for(let U=0;U<J.locationSize;U++)m(J.location+U);i.bindBuffer(i.ARRAY_BUFFER,Ce);for(let U=0;U<J.locationSize;U++)b(J.location+U,oe/J.locationSize,le,de,K*ge,(I+oe/J.locationSize*U)*ge,be)}else{if(ue.isInstancedBufferAttribute){for(let Z=0;Z<J.locationSize;Z++)g(J.location+Z,ue.meshPerAttribute);_.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=ue.meshPerAttribute*ue.count)}else for(let Z=0;Z<J.locationSize;Z++)m(J.location+Z);i.bindBuffer(i.ARRAY_BUFFER,Ce);for(let Z=0;Z<J.locationSize;Z++)b(J.location+Z,oe/J.locationSize,le,de,oe*ge,oe/J.locationSize*Z*ge,be)}}else if(z!==void 0){const de=z[te];if(de!==void 0)switch(de.length){case 2:i.vertexAttrib2fv(J.location,de);break;case 3:i.vertexAttrib3fv(J.location,de);break;case 4:i.vertexAttrib4fv(J.location,de);break;default:i.vertexAttrib1fv(J.location,de)}}}}M()}function C(){S();for(const _ in n){const A=n[_];for(const N in A){const B=A[N];for(const V in B)u(B[V].object),delete B[V];delete A[N]}delete n[_]}}function w(_){if(n[_.id]===void 0)return;const A=n[_.id];for(const N in A){const B=A[N];for(const V in B)u(B[V].object),delete B[V];delete A[N]}delete n[_.id]}function E(_){for(const A in n){const N=n[A];if(N[_.id]===void 0)continue;const B=N[_.id];for(const V in B)u(B[V].object),delete B[V];delete N[_.id]}}function S(){x(),o=!0,s!==r&&(s=r,c(s.object))}function x(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:a,reset:S,resetDefaultState:x,dispose:C,releaseStatesOfGeometry:w,releaseStatesOfProgram:E,initAttributes:v,enableAttribute:m,disableUnusedAttributes:M}}function $R(i,e,t){let n;function r(c){n=c}function s(c,u){i.drawArrays(n,c,u),t.update(u,n,1)}function o(c,u,h){h!==0&&(i.drawArraysInstanced(n,c,u,h),t.update(u,n,h))}function a(c,u,h){if(h===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,c,0,u,0,h);let d=0;for(let p=0;p<h;p++)d+=u[p];t.update(d,n,1)}function l(c,u,h,f){if(h===0)return;const d=e.get("WEBGL_multi_draw");if(d===null)for(let p=0;p<c.length;p++)o(c[p],u[p],f[p]);else{d.multiDrawArraysInstancedWEBGL(n,c,0,u,0,f,0,h);let p=0;for(let v=0;v<h;v++)p+=u[v]*f[v];t.update(p,n,1)}}this.setMode=r,this.render=s,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function KR(i,e,t,n){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const E=e.get("EXT_texture_filter_anisotropic");r=i.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function o(E){return!(E!==Qt&&n.convert(E)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(E){const S=E===hi&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(E!==vi&&n.convert(E)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_TYPE)&&E!==on&&!S)}function l(E){if(E==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";E="mediump"}return E==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const u=l(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=t.logarithmicDepthBuffer===!0,f=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),d=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),p=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=i.getParameter(i.MAX_TEXTURE_SIZE),m=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),g=i.getParameter(i.MAX_VERTEX_ATTRIBS),M=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),b=i.getParameter(i.MAX_VARYING_VECTORS),y=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),C=p>0,w=i.getParameter(i.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:h,reverseDepthBuffer:f,maxTextures:d,maxVertexTextures:p,maxTextureSize:v,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:M,maxVaryings:b,maxFragmentUniforms:y,vertexTextures:C,maxSamples:w}}function ZR(i){const e=this;let t=null,n=0,r=!1,s=!1;const o=new Ii,a=new Je,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f){const d=h.length!==0||f||n!==0||r;return r=f,n=h.length,d},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,f){t=u(h,f,0)},this.setState=function(h,f,d){const p=h.clippingPlanes,v=h.clipIntersection,m=h.clipShadows,g=i.get(h);if(!r||p===null||p.length===0||s&&!m)s?u(null):c();else{const M=s?0:n,b=M*4;let y=g.clippingState||null;l.value=y,y=u(p,f,b,d);for(let C=0;C!==b;++C)y[C]=t[C];g.clippingState=y,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=M}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,f,d,p){const v=h!==null?h.length:0;let m=null;if(v!==0){if(m=l.value,p!==!0||m===null){const g=d+v*4,M=f.matrixWorldInverse;a.getNormalMatrix(M),(m===null||m.length<g)&&(m=new Float32Array(g));for(let b=0,y=d;b!==v;++b,y+=4)o.copy(h[b]).applyMatrix4(M,a),o.normal.toArray(m,y),m[y+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,m}}function JR(i){let e=new WeakMap;function t(o,a){return a===yo?o.mapping=rr:a===za&&(o.mapping=Dr),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===yo||a===za)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new dx(l.height);return c.fromEquirectangularTexture(i,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}const ho=4,Bg=[.125,.215,.35,.446,.526,.582],us=20,_f=new Di,zg=new we;let xf=null,yf=0,bf=0,Mf=!1;const ls=(1+Math.sqrt(5))/2,so=1/ls,kg=[new F(-ls,so,0),new F(ls,so,0),new F(-so,0,ls),new F(so,0,ls),new F(0,ls,-so),new F(0,ls,so),new F(-1,1,-1),new F(1,1,-1),new F(-1,1,1),new F(1,1,1)],QR=new F;class Su{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100,s={}){const{size:o=256,position:a=QR}=s;xf=this._renderer.getRenderTarget(),yf=this._renderer.getActiveCubeFace(),bf=this._renderer.getActiveMipmapLevel(),Mf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,n,r,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Gg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Hg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(xf,yf,bf),this._renderer.xr.enabled=Mf,e.scissorTest=!1,uc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===rr||e.mapping===Dr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),xf=this._renderer.getRenderTarget(),yf=this._renderer.getActiveCubeFace(),bf=this._renderer.getActiveMipmapLevel(),Mf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Ct,minFilter:Ct,generateMipmaps:!1,type:hi,format:Qt,colorSpace:an,depthBuffer:!1},r=Vg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Vg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=eC(s)),this._blurMaterial=tC(s,e,t)}return r}_compileMaterial(e){const t=new wt(this._lodPlanes[0],e);this._renderer.compile(t,_f)}_sceneToCubeUV(e,t,n,r,s){const l=new St(90,1,t,n),c=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],h=this._renderer,f=h.autoClear,d=h.toneMapping;h.getClearColor(zg),h.toneMapping=gi,h.autoClear=!1;const p=new Cn({name:"PMREM.Background",side:pn,depthWrite:!1,depthTest:!1}),v=new wt(new Br,p);let m=!1;const g=e.background;g?g.isColor&&(p.color.copy(g),e.background=null,m=!0):(p.color.copy(zg),m=!0);for(let M=0;M<6;M++){const b=M%3;b===0?(l.up.set(0,c[M],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+u[M],s.y,s.z)):b===1?(l.up.set(0,0,c[M]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+u[M],s.z)):(l.up.set(0,c[M],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+u[M]));const y=this._cubeSize;uc(r,b*y,M>2?y:0,y,y),h.setRenderTarget(r),m&&h.render(v,l),h.render(e,l)}v.geometry.dispose(),v.material.dispose(),h.toneMapping=d,h.autoClear=f,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===rr||e.mapping===Dr;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=Gg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Hg());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new wt(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;uc(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,_f)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=kg[(r-s-1)%kg.length];this._blur(e,s-1,s,o,a)}t.autoClear=n}_blur(e,t,n,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,r,"latitudinal",s),this._halfBlur(o,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new wt(this._lodPlanes[r],c),f=c.uniforms,d=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*us-1),v=s/p,m=isFinite(s)?1+Math.floor(u*v):us;m>us&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${us}`);const g=[];let M=0;for(let E=0;E<us;++E){const S=E/v,x=Math.exp(-S*S/2);g.push(x),E===0?M+=x:E<m&&(M+=2*x)}for(let E=0;E<g.length;E++)g[E]=g[E]/M;f.envMap.value=e.texture,f.samples.value=m,f.weights.value=g,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:b}=this;f.dTheta.value=p,f.mipInt.value=b-n;const y=this._sizeLods[r],C=3*y*(r>b-ho?r-b+ho:0),w=4*(this._cubeSize-y);uc(t,C,w,3*y,2*y),l.setRenderTarget(t),l.render(h,_f)}}function eC(i){const e=[],t=[],n=[];let r=i;const s=i-ho+1+Bg.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>i-ho?l=Bg[o-i+ho-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,p=6,v=3,m=2,g=1,M=new Float32Array(v*p*d),b=new Float32Array(m*p*d),y=new Float32Array(g*p*d);for(let w=0;w<d;w++){const E=w%3*2/3-1,S=w>2?0:-1,x=[E,S,0,E+2/3,S,0,E+2/3,S+1,0,E,S,0,E+2/3,S+1,0,E,S+1,0];M.set(x,v*p*w),b.set(f,m*p*w);const _=[w,w,w,w,w,w];y.set(_,g*p*w)}const C=new Ze;C.setAttribute("position",new lt(M,v)),C.setAttribute("uv",new lt(b,m)),C.setAttribute("faceIndex",new lt(y,g)),e.push(C),r>ho&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Vg(i,e,t){const n=new _i(i,e,t);return n.texture.mapping=No,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function uc(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function tC(i,e,t){const n=new Float32Array(us),r=new F(0,1,0);return new gn({name:"SphericalGaussianBlur",defines:{n:us,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Fp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function Hg(){return new gn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Fp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function Gg(){return new gn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Fp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function Fp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function nC(i){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===yo||l===za,u=l===rr||l===Dr;if(c||u){let h=e.get(a);const f=h!==void 0?h.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==f)return t===null&&(t=new Su(i)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),h.texture;if(h!==void 0)return h.texture;{const d=a.image;return c&&d&&d.height>0||u&&d&&r(d)?(t===null&&(t=new Su(i)),h=c?t.fromEquirectangular(a):t.fromCubemap(a),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),a.addEventListener("dispose",s),h.texture):null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function iC(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const r=t(n);return r===null&&Mc("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function rC(i,e,t,n){const r={},s=new WeakMap;function o(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",o),delete r[f.id];const d=s.get(f);d&&(e.remove(d),s.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(h,f){return r[f.id]===!0||(f.addEventListener("dispose",o),r[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const d in f)e.update(f[d],i.ARRAY_BUFFER)}function c(h){const f=[],d=h.index,p=h.attributes.position;let v=0;if(d!==null){const M=d.array;v=d.version;for(let b=0,y=M.length;b<y;b+=3){const C=M[b+0],w=M[b+1],E=M[b+2];f.push(C,w,w,E,E,C)}}else if(p!==void 0){const M=p.array;v=p.version;for(let b=0,y=M.length/3-1;b<y;b+=3){const C=b+0,w=b+1,E=b+2;f.push(C,w,w,E,E,C)}}else return;const m=new(ax(f)?up:cp)(f,1);m.version=v;const g=s.get(h);g&&e.remove(g),s.set(h,m)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function sC(i,e,t){let n;function r(f){n=f}let s,o;function a(f){s=f.type,o=f.bytesPerElement}function l(f,d){i.drawElements(n,d,s,f*o),t.update(d,n,1)}function c(f,d,p){p!==0&&(i.drawElementsInstanced(n,d,s,f*o,p),t.update(d,n,p))}function u(f,d,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,d,0,s,f,0,p);let m=0;for(let g=0;g<p;g++)m+=d[g];t.update(m,n,1)}function h(f,d,p,v){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<f.length;g++)c(f[g]/o,d[g],v[g]);else{m.multiDrawElementsInstancedWEBGL(n,d,0,s,f,0,v,0,p);let g=0;for(let M=0;M<p;M++)g+=d[M]*v[M];t.update(g,n,1)}}this.setMode=r,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function oC(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case i.TRIANGLES:t.triangles+=a*(s/3);break;case i.LINES:t.lines+=a*(s/2);break;case i.LINE_STRIP:t.lines+=a*(s-1);break;case i.LINE_LOOP:t.lines+=a*s;break;case i.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}function aC(i,e,t){const n=new WeakMap,r=new it;function s(o,a,l){const c=o.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=u!==void 0?u.length:0;let f=n.get(a);if(f===void 0||f.count!==h){let _=function(){S.dispose(),n.delete(a),a.removeEventListener("dispose",_)};var d=_;f!==void 0&&f.texture.dispose();const p=a.morphAttributes.position!==void 0,v=a.morphAttributes.normal!==void 0,m=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],M=a.morphAttributes.normal||[],b=a.morphAttributes.color||[];let y=0;p===!0&&(y=1),v===!0&&(y=2),m===!0&&(y=3);let C=a.attributes.position.count*y,w=1;C>e.maxTextureSize&&(w=Math.ceil(C/e.maxTextureSize),C=e.maxTextureSize);const E=new Float32Array(C*w*4*h),S=new rl(E,C,w,h);S.type=on,S.needsUpdate=!0;const x=y*4;for(let A=0;A<h;A++){const N=g[A],B=M[A],V=b[A],X=C*w*4*A;for(let z=0;z<N.count;z++){const te=z*x;p===!0&&(r.fromBufferAttribute(N,z),E[X+te+0]=r.x,E[X+te+1]=r.y,E[X+te+2]=r.z,E[X+te+3]=0),v===!0&&(r.fromBufferAttribute(B,z),E[X+te+4]=r.x,E[X+te+5]=r.y,E[X+te+6]=r.z,E[X+te+7]=0),m===!0&&(r.fromBufferAttribute(V,z),E[X+te+8]=r.x,E[X+te+9]=r.y,E[X+te+10]=r.z,E[X+te+11]=V.itemSize===4?r.w:1)}}f={count:h,texture:S,size:new pe(C,w)},n.set(a,f),a.addEventListener("dispose",_)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(i,"morphTexture",o.morphTexture,t);else{let p=0;for(let m=0;m<c.length;m++)p+=c[m];const v=a.morphTargetsRelative?1:1-p;l.getUniforms().setValue(i,"morphTargetBaseInfluence",v),l.getUniforms().setValue(i,"morphTargetInfluences",c)}l.getUniforms().setValue(i,"morphTargetsTexture",f.texture,t),l.getUniforms().setValue(i,"morphTargetsTextureSize",f.size)}return{update:s}}function lC(i,e,t,n){let r=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,h=e.get(l,u);if(r.get(h)!==c&&(e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),r.get(l)!==c&&(t.update(l.instanceMatrix,i.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,i.ARRAY_BUFFER),r.set(l,c))),l.isSkinnedMesh){const f=l.skeleton;r.get(f)!==c&&(f.update(),r.set(f,c))}return h}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const ly=new At,Wg=new nh(1,1),cy=new rl,uy=new $u,hy=new al,Xg=[],jg=[],Yg=new Float32Array(16),qg=new Float32Array(9),$g=new Float32Array(4);function Bo(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let s=Xg[r];if(s===void 0&&(s=new Float32Array(r),Xg[r]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,i[o].toArray(s,a)}return s}function qt(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function $t(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function xh(i,e){let t=jg[e];t===void 0&&(t=new Int32Array(e),jg[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function cC(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function uC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;i.uniform2fv(this.addr,e),$t(t,e)}}function hC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(qt(t,e))return;i.uniform3fv(this.addr,e),$t(t,e)}}function fC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;i.uniform4fv(this.addr,e),$t(t,e)}}function dC(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),$t(t,e)}else{if(qt(t,n))return;$g.set(n),i.uniformMatrix2fv(this.addr,!1,$g),$t(t,n)}}function pC(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),$t(t,e)}else{if(qt(t,n))return;qg.set(n),i.uniformMatrix3fv(this.addr,!1,qg),$t(t,n)}}function mC(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),$t(t,e)}else{if(qt(t,n))return;Yg.set(n),i.uniformMatrix4fv(this.addr,!1,Yg),$t(t,n)}}function gC(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function vC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;i.uniform2iv(this.addr,e),$t(t,e)}}function _C(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(qt(t,e))return;i.uniform3iv(this.addr,e),$t(t,e)}}function xC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;i.uniform4iv(this.addr,e),$t(t,e)}}function yC(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function bC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;i.uniform2uiv(this.addr,e),$t(t,e)}}function MC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(qt(t,e))return;i.uniform3uiv(this.addr,e),$t(t,e)}}function SC(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;i.uniform4uiv(this.addr,e),$t(t,e)}}function wC(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r);let s;this.type===i.SAMPLER_2D_SHADOW?(Wg.compareFunction=ap,s=Wg):s=ly,t.setTexture2D(e||s,r)}function TC(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||uy,r)}function EC(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTextureCube(e||hy,r)}function AC(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||cy,r)}function RC(i){switch(i){case 5126:return cC;case 35664:return uC;case 35665:return hC;case 35666:return fC;case 35674:return dC;case 35675:return pC;case 35676:return mC;case 5124:case 35670:return gC;case 35667:case 35671:return vC;case 35668:case 35672:return _C;case 35669:case 35673:return xC;case 5125:return yC;case 36294:return bC;case 36295:return MC;case 36296:return SC;case 35678:case 36198:case 36298:case 36306:case 35682:return wC;case 35679:case 36299:case 36307:return TC;case 35680:case 36300:case 36308:case 36293:return EC;case 36289:case 36303:case 36311:case 36292:return AC}}function CC(i,e){i.uniform1fv(this.addr,e)}function IC(i,e){const t=Bo(e,this.size,2);i.uniform2fv(this.addr,t)}function PC(i,e){const t=Bo(e,this.size,3);i.uniform3fv(this.addr,t)}function LC(i,e){const t=Bo(e,this.size,4);i.uniform4fv(this.addr,t)}function DC(i,e){const t=Bo(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function NC(i,e){const t=Bo(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function UC(i,e){const t=Bo(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function OC(i,e){i.uniform1iv(this.addr,e)}function FC(i,e){i.uniform2iv(this.addr,e)}function BC(i,e){i.uniform3iv(this.addr,e)}function zC(i,e){i.uniform4iv(this.addr,e)}function kC(i,e){i.uniform1uiv(this.addr,e)}function VC(i,e){i.uniform2uiv(this.addr,e)}function HC(i,e){i.uniform3uiv(this.addr,e)}function GC(i,e){i.uniform4uiv(this.addr,e)}function WC(i,e,t){const n=this.cache,r=e.length,s=xh(t,r);qt(n,s)||(i.uniform1iv(this.addr,s),$t(n,s));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||ly,s[o])}function XC(i,e,t){const n=this.cache,r=e.length,s=xh(t,r);qt(n,s)||(i.uniform1iv(this.addr,s),$t(n,s));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||uy,s[o])}function jC(i,e,t){const n=this.cache,r=e.length,s=xh(t,r);qt(n,s)||(i.uniform1iv(this.addr,s),$t(n,s));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||hy,s[o])}function YC(i,e,t){const n=this.cache,r=e.length,s=xh(t,r);qt(n,s)||(i.uniform1iv(this.addr,s),$t(n,s));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||cy,s[o])}function qC(i){switch(i){case 5126:return CC;case 35664:return IC;case 35665:return PC;case 35666:return LC;case 35674:return DC;case 35675:return NC;case 35676:return UC;case 5124:case 35670:return OC;case 35667:case 35671:return FC;case 35668:case 35672:return BC;case 35669:case 35673:return zC;case 5125:return kC;case 36294:return VC;case 36295:return HC;case 36296:return GC;case 35678:case 36198:case 36298:case 36306:case 35682:return WC;case 35679:case 36299:case 36307:return XC;case 35680:case 36300:case 36308:case 36293:return jC;case 36289:case 36303:case 36311:case 36292:return YC}}class $C{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=RC(t.type)}}class KC{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=qC(t.type)}}class ZC{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],n)}}}const Sf=/(\w+)(\])?(\[|\.)?/g;function Kg(i,e){i.seq.push(e),i.map[e.id]=e}function JC(i,e,t){const n=i.name,r=n.length;for(Sf.lastIndex=0;;){const s=Sf.exec(n),o=Sf.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){Kg(t,c===void 0?new $C(a,i,e):new KC(a,i,e));break}else{let h=t.map[a];h===void 0&&(h=new ZC(a),Kg(t,h)),t=h}}}class wc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);JC(s,o,this)}}setValue(e,t,n,r){const s=this.map[t];s!==void 0&&s.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];r!==void 0&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&n.push(o)}return n}}function Zg(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}const QC=37297;let eI=0;function tI(i,e){const t=i.split(`
`),n=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}const Jg=new Je;function nI(i){at._getMatrix(Jg,at.workingColorSpace,i);const e=`mat3( ${Jg.elements.map(t=>t.toFixed(4))} )`;switch(at.getTransfer(i)){case Va:return[e,"LinearTransferOETF"];case yt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",i),[e,"LinearTransferOETF"]}}function Qg(i,e,t){const n=i.getShaderParameter(e,i.COMPILE_STATUS),r=i.getShaderInfoLog(e).trim();if(n&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+tI(i.getShaderSource(e),o)}else return r}function iI(i,e){const t=nI(e);return[`vec4 ${i}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function rI(i,e){let t;switch(e){case k0:t="Linear";break;case V0:t="Reinhard";break;case H0:t="Cineon";break;case zu:t="ACESFilmic";break;case W0:t="AgX";break;case X0:t="Neutral";break;case G0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const hc=new F;function sI(){at.getLuminanceCoefficients(hc);const i=hc.x.toFixed(4),e=hc.y.toFixed(4),t=hc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${i}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function oI(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(ca).join(`
`)}function aI(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function lI(i,e){const t={},n=i.getProgramParameter(e,i.ACTIVE_ATTRIBUTES);for(let r=0;r<n;r++){const s=i.getActiveAttrib(e,r),o=s.name;let a=1;s.type===i.FLOAT_MAT2&&(a=2),s.type===i.FLOAT_MAT3&&(a=3),s.type===i.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:i.getAttribLocation(e,o),locationSize:a}}return t}function ca(i){return i!==""}function ev(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function tv(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const cI=/^[ \t]*#include +<([\w\d./]+)>/gm;function dd(i){return i.replace(cI,hI)}const uI=new Map;function hI(i,e){let t=nt[e];if(t===void 0){const n=uI.get(e);if(n!==void 0)t=nt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return dd(t)}const fI=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function nv(i){return i.replace(fI,dI)}function dI(i,e,t,n){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function iv(i){let e=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	precision ${i.precision} sampler3D;
	precision ${i.precision} sampler2DArray;
	precision ${i.precision} sampler2DShadow;
	precision ${i.precision} samplerCubeShadow;
	precision ${i.precision} sampler2DArrayShadow;
	precision ${i.precision} isampler2D;
	precision ${i.precision} isampler3D;
	precision ${i.precision} isamplerCube;
	precision ${i.precision} isampler2DArray;
	precision ${i.precision} usampler2D;
	precision ${i.precision} usampler3D;
	precision ${i.precision} usamplerCube;
	precision ${i.precision} usampler2DArray;
	`;return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function pI(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Kd?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===Zd?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===Ri&&(e="SHADOWMAP_TYPE_VSM"),e}function mI(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case rr:case Dr:e="ENVMAP_TYPE_CUBE";break;case No:e="ENVMAP_TYPE_CUBE_UV";break}return e}function gI(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Dr:e="ENVMAP_MODE_REFRACTION";break}return e}function vI(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case tl:e="ENVMAP_BLENDING_MULTIPLY";break;case B0:e="ENVMAP_BLENDING_MIX";break;case z0:e="ENVMAP_BLENDING_ADD";break}return e}function _I(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function xI(i,e,t,n){const r=i.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=pI(t),c=mI(t),u=gI(t),h=vI(t),f=_I(t),d=oI(t),p=aI(s),v=r.createProgram();let m,g,M=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(ca).join(`
`),m.length>0&&(m+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(ca).join(`
`),g.length>0&&(g+=`
`)):(m=[iv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ca).join(`
`),g=[iv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==gi?"#define TONE_MAPPING":"",t.toneMapping!==gi?nt.tonemapping_pars_fragment:"",t.toneMapping!==gi?rI("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",nt.colorspace_pars_fragment,iI("linearToOutputTexel",t.outputColorSpace),sI(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ca).join(`
`)),o=dd(o),o=ev(o,t),o=tv(o,t),a=dd(a),a=ev(a,t),a=tv(a,t),o=nv(o),a=nv(a),t.isRawShaderMaterial!==!0&&(M=`#version 300 es
`,m=[d,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,g=["#define varying in",t.glslVersion===sd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===sd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const b=M+m+o,y=M+g+a,C=Zg(r,r.VERTEX_SHADER,b),w=Zg(r,r.FRAGMENT_SHADER,y);r.attachShader(v,C),r.attachShader(v,w),t.index0AttributeName!==void 0?r.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(v,0,"position"),r.linkProgram(v);function E(A){if(i.debug.checkShaderErrors){const N=r.getProgramInfoLog(v).trim(),B=r.getShaderInfoLog(C).trim(),V=r.getShaderInfoLog(w).trim();let X=!0,z=!0;if(r.getProgramParameter(v,r.LINK_STATUS)===!1)if(X=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(r,v,C,w);else{const te=Qg(r,C,"vertex"),J=Qg(r,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(v,r.VALIDATE_STATUS)+`

Material Name: `+A.name+`
Material Type: `+A.type+`

Program Info Log: `+N+`
`+te+`
`+J)}else N!==""?console.warn("THREE.WebGLProgram: Program Info Log:",N):(B===""||V==="")&&(z=!1);z&&(A.diagnostics={runnable:X,programLog:N,vertexShader:{log:B,prefix:m},fragmentShader:{log:V,prefix:g}})}r.deleteShader(C),r.deleteShader(w),S=new wc(r,v),x=lI(r,v)}let S;this.getUniforms=function(){return S===void 0&&E(this),S};let x;this.getAttributes=function(){return x===void 0&&E(this),x};let _=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return _===!1&&(_=r.getProgramParameter(v,QC)),_},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=eI++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=C,this.fragmentShader=w,this}let yI=0;class bI{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new MI(e),t.set(e,n)),n}}class MI{constructor(e){this.id=yI++,this.code=e,this.usedTimes=0}}function SI(i,e,t,n,r,s,o){const a=new Ku,l=new bI,c=new Set,u=[],h=r.logarithmicDepthBuffer,f=r.vertexTextures;let d=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(x){return c.add(x),x===0?"uv":`uv${x}`}function m(x,_,A,N,B){const V=N.fog,X=B.geometry,z=x.isMeshStandardMaterial?N.environment:null,te=(x.isMeshStandardMaterial?t:e).get(x.envMap||z),J=te&&te.mapping===No?te.image.height:null,ue=p[x.type];x.precision!==null&&(d=r.getMaxPrecision(x.precision),d!==x.precision&&console.warn("THREE.WebGLProgram.getParameters:",x.precision,"not supported, using",d,"instead."));const de=X.morphAttributes.position||X.morphAttributes.normal||X.morphAttributes.color,oe=de!==void 0?de.length:0;let ye=0;X.morphAttributes.position!==void 0&&(ye=1),X.morphAttributes.normal!==void 0&&(ye=2),X.morphAttributes.color!==void 0&&(ye=3);let Ce,le,ge,be;if(ue){const ut=ci[ue];Ce=ut.vertexShader,le=ut.fragmentShader}else Ce=x.vertexShader,le=x.fragmentShader,l.update(x),ge=l.getVertexShaderID(x),be=l.getFragmentShaderID(x);const Z=i.getRenderTarget(),K=i.state.buffers.depth.getReversed(),I=B.isInstancedMesh===!0,U=B.isBatchedMesh===!0,G=!!x.map,D=!!x.matcap,L=!!te,T=!!x.aoMap,H=!!x.lightMap,W=!!x.bumpMap,j=!!x.normalMap,Y=!!x.displacementMap,re=!!x.emissiveMap,Q=!!x.metalnessMap,P=!!x.roughnessMap,R=x.anisotropy>0,k=x.clearcoat>0,ee=x.dispersion>0,ae=x.iridescence>0,se=x.sheen>0,Me=x.transmission>0,_e=R&&!!x.anisotropyMap,Ie=k&&!!x.clearcoatMap,Ue=k&&!!x.clearcoatNormalMap,xe=k&&!!x.clearcoatRoughnessMap,Re=ae&&!!x.iridescenceMap,ze=ae&&!!x.iridescenceThicknessMap,We=se&&!!x.sheenColorMap,Ee=se&&!!x.sheenRoughnessMap,q=!!x.specularMap,me=!!x.specularColorMap,Le=!!x.specularIntensityMap,$=Me&&!!x.transmissionMap,Te=Me&&!!x.thicknessMap,fe=!!x.gradientMap,ve=!!x.alphaMap,De=x.alphaTest>0,Ae=!!x.alphaHash,Xe=!!x.extensions;let bt=gi;x.toneMapped&&(Z===null||Z.isXRRenderTarget===!0)&&(bt=i.toneMapping);const Nt={shaderID:ue,shaderType:x.type,shaderName:x.name,vertexShader:Ce,fragmentShader:le,defines:x.defines,customVertexShaderID:ge,customFragmentShaderID:be,isRawShaderMaterial:x.isRawShaderMaterial===!0,glslVersion:x.glslVersion,precision:d,batching:U,batchingColor:U&&B._colorsTexture!==null,instancing:I,instancingColor:I&&B.instanceColor!==null,instancingMorph:I&&B.morphTexture!==null,supportsVertexTextures:f,outputColorSpace:Z===null?i.outputColorSpace:Z.isXRRenderTarget===!0?Z.texture.colorSpace:an,alphaToCoverage:!!x.alphaToCoverage,map:G,matcap:D,envMap:L,envMapMode:L&&te.mapping,envMapCubeUVHeight:J,aoMap:T,lightMap:H,bumpMap:W,normalMap:j,displacementMap:f&&Y,emissiveMap:re,normalMapObjectSpace:j&&x.normalMapType===Q0,normalMapTangentSpace:j&&x.normalMapType===Fr,metalnessMap:Q,roughnessMap:P,anisotropy:R,anisotropyMap:_e,clearcoat:k,clearcoatMap:Ie,clearcoatNormalMap:Ue,clearcoatRoughnessMap:xe,dispersion:ee,iridescence:ae,iridescenceMap:Re,iridescenceThicknessMap:ze,sheen:se,sheenColorMap:We,sheenRoughnessMap:Ee,specularMap:q,specularColorMap:me,specularIntensityMap:Le,transmission:Me,transmissionMap:$,thicknessMap:Te,gradientMap:fe,opaque:x.transparent===!1&&x.blending===vs&&x.alphaToCoverage===!1,alphaMap:ve,alphaTest:De,alphaHash:Ae,combine:x.combine,mapUv:G&&v(x.map.channel),aoMapUv:T&&v(x.aoMap.channel),lightMapUv:H&&v(x.lightMap.channel),bumpMapUv:W&&v(x.bumpMap.channel),normalMapUv:j&&v(x.normalMap.channel),displacementMapUv:Y&&v(x.displacementMap.channel),emissiveMapUv:re&&v(x.emissiveMap.channel),metalnessMapUv:Q&&v(x.metalnessMap.channel),roughnessMapUv:P&&v(x.roughnessMap.channel),anisotropyMapUv:_e&&v(x.anisotropyMap.channel),clearcoatMapUv:Ie&&v(x.clearcoatMap.channel),clearcoatNormalMapUv:Ue&&v(x.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:xe&&v(x.clearcoatRoughnessMap.channel),iridescenceMapUv:Re&&v(x.iridescenceMap.channel),iridescenceThicknessMapUv:ze&&v(x.iridescenceThicknessMap.channel),sheenColorMapUv:We&&v(x.sheenColorMap.channel),sheenRoughnessMapUv:Ee&&v(x.sheenRoughnessMap.channel),specularMapUv:q&&v(x.specularMap.channel),specularColorMapUv:me&&v(x.specularColorMap.channel),specularIntensityMapUv:Le&&v(x.specularIntensityMap.channel),transmissionMapUv:$&&v(x.transmissionMap.channel),thicknessMapUv:Te&&v(x.thicknessMap.channel),alphaMapUv:ve&&v(x.alphaMap.channel),vertexTangents:!!X.attributes.tangent&&(j||R),vertexColors:x.vertexColors,vertexAlphas:x.vertexColors===!0&&!!X.attributes.color&&X.attributes.color.itemSize===4,pointsUvs:B.isPoints===!0&&!!X.attributes.uv&&(G||ve),fog:!!V,useFog:x.fog===!0,fogExp2:!!V&&V.isFogExp2,flatShading:x.flatShading===!0,sizeAttenuation:x.sizeAttenuation===!0,logarithmicDepthBuffer:h,reverseDepthBuffer:K,skinning:B.isSkinnedMesh===!0,morphTargets:X.morphAttributes.position!==void 0,morphNormals:X.morphAttributes.normal!==void 0,morphColors:X.morphAttributes.color!==void 0,morphTargetsCount:oe,morphTextureStride:ye,numDirLights:_.directional.length,numPointLights:_.point.length,numSpotLights:_.spot.length,numSpotLightMaps:_.spotLightMap.length,numRectAreaLights:_.rectArea.length,numHemiLights:_.hemi.length,numDirLightShadows:_.directionalShadowMap.length,numPointLightShadows:_.pointShadowMap.length,numSpotLightShadows:_.spotShadowMap.length,numSpotLightShadowsWithMaps:_.numSpotLightShadowsWithMaps,numLightProbes:_.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:x.dithering,shadowMapEnabled:i.shadowMap.enabled&&A.length>0,shadowMapType:i.shadowMap.type,toneMapping:bt,decodeVideoTexture:G&&x.map.isVideoTexture===!0&&at.getTransfer(x.map.colorSpace)===yt,decodeVideoTextureEmissive:re&&x.emissiveMap.isVideoTexture===!0&&at.getTransfer(x.emissiveMap.colorSpace)===yt,premultipliedAlpha:x.premultipliedAlpha,doubleSided:x.side===En,flipSided:x.side===pn,useDepthPacking:x.depthPacking>=0,depthPacking:x.depthPacking||0,index0AttributeName:x.index0AttributeName,extensionClipCullDistance:Xe&&x.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Xe&&x.extensions.multiDraw===!0||U)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:x.customProgramCacheKey()};return Nt.vertexUv1s=c.has(1),Nt.vertexUv2s=c.has(2),Nt.vertexUv3s=c.has(3),c.clear(),Nt}function g(x){const _=[];if(x.shaderID?_.push(x.shaderID):(_.push(x.customVertexShaderID),_.push(x.customFragmentShaderID)),x.defines!==void 0)for(const A in x.defines)_.push(A),_.push(x.defines[A]);return x.isRawShaderMaterial===!1&&(M(_,x),b(_,x),_.push(i.outputColorSpace)),_.push(x.customProgramCacheKey),_.join()}function M(x,_){x.push(_.precision),x.push(_.outputColorSpace),x.push(_.envMapMode),x.push(_.envMapCubeUVHeight),x.push(_.mapUv),x.push(_.alphaMapUv),x.push(_.lightMapUv),x.push(_.aoMapUv),x.push(_.bumpMapUv),x.push(_.normalMapUv),x.push(_.displacementMapUv),x.push(_.emissiveMapUv),x.push(_.metalnessMapUv),x.push(_.roughnessMapUv),x.push(_.anisotropyMapUv),x.push(_.clearcoatMapUv),x.push(_.clearcoatNormalMapUv),x.push(_.clearcoatRoughnessMapUv),x.push(_.iridescenceMapUv),x.push(_.iridescenceThicknessMapUv),x.push(_.sheenColorMapUv),x.push(_.sheenRoughnessMapUv),x.push(_.specularMapUv),x.push(_.specularColorMapUv),x.push(_.specularIntensityMapUv),x.push(_.transmissionMapUv),x.push(_.thicknessMapUv),x.push(_.combine),x.push(_.fogExp2),x.push(_.sizeAttenuation),x.push(_.morphTargetsCount),x.push(_.morphAttributeCount),x.push(_.numDirLights),x.push(_.numPointLights),x.push(_.numSpotLights),x.push(_.numSpotLightMaps),x.push(_.numHemiLights),x.push(_.numRectAreaLights),x.push(_.numDirLightShadows),x.push(_.numPointLightShadows),x.push(_.numSpotLightShadows),x.push(_.numSpotLightShadowsWithMaps),x.push(_.numLightProbes),x.push(_.shadowMapType),x.push(_.toneMapping),x.push(_.numClippingPlanes),x.push(_.numClipIntersection),x.push(_.depthPacking)}function b(x,_){a.disableAll(),_.supportsVertexTextures&&a.enable(0),_.instancing&&a.enable(1),_.instancingColor&&a.enable(2),_.instancingMorph&&a.enable(3),_.matcap&&a.enable(4),_.envMap&&a.enable(5),_.normalMapObjectSpace&&a.enable(6),_.normalMapTangentSpace&&a.enable(7),_.clearcoat&&a.enable(8),_.iridescence&&a.enable(9),_.alphaTest&&a.enable(10),_.vertexColors&&a.enable(11),_.vertexAlphas&&a.enable(12),_.vertexUv1s&&a.enable(13),_.vertexUv2s&&a.enable(14),_.vertexUv3s&&a.enable(15),_.vertexTangents&&a.enable(16),_.anisotropy&&a.enable(17),_.alphaHash&&a.enable(18),_.batching&&a.enable(19),_.dispersion&&a.enable(20),_.batchingColor&&a.enable(21),x.push(a.mask),a.disableAll(),_.fog&&a.enable(0),_.useFog&&a.enable(1),_.flatShading&&a.enable(2),_.logarithmicDepthBuffer&&a.enable(3),_.reverseDepthBuffer&&a.enable(4),_.skinning&&a.enable(5),_.morphTargets&&a.enable(6),_.morphNormals&&a.enable(7),_.morphColors&&a.enable(8),_.premultipliedAlpha&&a.enable(9),_.shadowMapEnabled&&a.enable(10),_.doubleSided&&a.enable(11),_.flipSided&&a.enable(12),_.useDepthPacking&&a.enable(13),_.dithering&&a.enable(14),_.transmission&&a.enable(15),_.sheen&&a.enable(16),_.opaque&&a.enable(17),_.pointsUvs&&a.enable(18),_.decodeVideoTexture&&a.enable(19),_.decodeVideoTextureEmissive&&a.enable(20),_.alphaToCoverage&&a.enable(21),x.push(a.mask)}function y(x){const _=p[x.type];let A;if(_){const N=ci[_];A=sl.clone(N.uniforms)}else A=x.uniforms;return A}function C(x,_){let A;for(let N=0,B=u.length;N<B;N++){const V=u[N];if(V.cacheKey===_){A=V,++A.usedTimes;break}}return A===void 0&&(A=new xI(i,_,x,s),u.push(A)),A}function w(x){if(--x.usedTimes===0){const _=u.indexOf(x);u[_]=u[u.length-1],u.pop(),x.destroy()}}function E(x){l.remove(x)}function S(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:y,acquireProgram:C,releaseProgram:w,releaseShaderCache:E,programs:u,dispose:S}}function wI(){let i=new WeakMap;function e(o){return i.has(o)}function t(o){let a=i.get(o);return a===void 0&&(a={},i.set(o,a)),a}function n(o){i.delete(o)}function r(o,a,l){i.get(o)[a]=l}function s(){i=new WeakMap}return{has:e,get:t,remove:n,update:r,dispose:s}}function TI(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function rv(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function sv(){const i=[];let e=0;const t=[],n=[],r=[];function s(){e=0,t.length=0,n.length=0,r.length=0}function o(h,f,d,p,v,m){let g=i[e];return g===void 0?(g={id:h.id,object:h,geometry:f,material:d,groupOrder:p,renderOrder:h.renderOrder,z:v,group:m},i[e]=g):(g.id=h.id,g.object=h,g.geometry=f,g.material=d,g.groupOrder=p,g.renderOrder=h.renderOrder,g.z=v,g.group=m),e++,g}function a(h,f,d,p,v,m){const g=o(h,f,d,p,v,m);d.transmission>0?n.push(g):d.transparent===!0?r.push(g):t.push(g)}function l(h,f,d,p,v,m){const g=o(h,f,d,p,v,m);d.transmission>0?n.unshift(g):d.transparent===!0?r.unshift(g):t.unshift(g)}function c(h,f){t.length>1&&t.sort(h||TI),n.length>1&&n.sort(f||rv),r.length>1&&r.sort(f||rv)}function u(){for(let h=e,f=i.length;h<f;h++){const d=i[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:n,transparent:r,init:s,push:a,unshift:l,finish:u,sort:c}}function EI(){let i=new WeakMap;function e(n,r){const s=i.get(n);let o;return s===void 0?(o=new sv,i.set(n,[o])):r>=s.length?(o=new sv,s.push(o)):o=s[r],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function AI(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new F,color:new we};break;case"SpotLight":t={position:new F,direction:new F,color:new we,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new F,color:new we,distance:0,decay:0};break;case"HemisphereLight":t={direction:new F,skyColor:new we,groundColor:new we};break;case"RectAreaLight":t={color:new we,position:new F,halfWidth:new F,halfHeight:new F};break}return i[e.id]=t,t}}}function RI(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let CI=0;function II(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function PI(i){const e=new AI,t=RI(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)n.probe.push(new F);const r=new F,s=new ke,o=new ke;function a(c){let u=0,h=0,f=0;for(let x=0;x<9;x++)n.probe[x].set(0,0,0);let d=0,p=0,v=0,m=0,g=0,M=0,b=0,y=0,C=0,w=0,E=0;c.sort(II);for(let x=0,_=c.length;x<_;x++){const A=c[x],N=A.color,B=A.intensity,V=A.distance,X=A.shadow&&A.shadow.map?A.shadow.map.texture:null;if(A.isAmbientLight)u+=N.r*B,h+=N.g*B,f+=N.b*B;else if(A.isLightProbe){for(let z=0;z<9;z++)n.probe[z].addScaledVector(A.sh.coefficients[z],B);E++}else if(A.isDirectionalLight){const z=e.get(A);if(z.color.copy(A.color).multiplyScalar(A.intensity),A.castShadow){const te=A.shadow,J=t.get(A);J.shadowIntensity=te.intensity,J.shadowBias=te.bias,J.shadowNormalBias=te.normalBias,J.shadowRadius=te.radius,J.shadowMapSize=te.mapSize,n.directionalShadow[d]=J,n.directionalShadowMap[d]=X,n.directionalShadowMatrix[d]=A.shadow.matrix,M++}n.directional[d]=z,d++}else if(A.isSpotLight){const z=e.get(A);z.position.setFromMatrixPosition(A.matrixWorld),z.color.copy(N).multiplyScalar(B),z.distance=V,z.coneCos=Math.cos(A.angle),z.penumbraCos=Math.cos(A.angle*(1-A.penumbra)),z.decay=A.decay,n.spot[v]=z;const te=A.shadow;if(A.map&&(n.spotLightMap[C]=A.map,C++,te.updateMatrices(A),A.castShadow&&w++),n.spotLightMatrix[v]=te.matrix,A.castShadow){const J=t.get(A);J.shadowIntensity=te.intensity,J.shadowBias=te.bias,J.shadowNormalBias=te.normalBias,J.shadowRadius=te.radius,J.shadowMapSize=te.mapSize,n.spotShadow[v]=J,n.spotShadowMap[v]=X,y++}v++}else if(A.isRectAreaLight){const z=e.get(A);z.color.copy(N).multiplyScalar(B),z.halfWidth.set(A.width*.5,0,0),z.halfHeight.set(0,A.height*.5,0),n.rectArea[m]=z,m++}else if(A.isPointLight){const z=e.get(A);if(z.color.copy(A.color).multiplyScalar(A.intensity),z.distance=A.distance,z.decay=A.decay,A.castShadow){const te=A.shadow,J=t.get(A);J.shadowIntensity=te.intensity,J.shadowBias=te.bias,J.shadowNormalBias=te.normalBias,J.shadowRadius=te.radius,J.shadowMapSize=te.mapSize,J.shadowCameraNear=te.camera.near,J.shadowCameraFar=te.camera.far,n.pointShadow[p]=J,n.pointShadowMap[p]=X,n.pointShadowMatrix[p]=A.shadow.matrix,b++}n.point[p]=z,p++}else if(A.isHemisphereLight){const z=e.get(A);z.skyColor.copy(A.color).multiplyScalar(B),z.groundColor.copy(A.groundColor).multiplyScalar(B),n.hemi[g]=z,g++}}m>0&&(i.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Pe.LTC_FLOAT_1,n.rectAreaLTC2=Pe.LTC_FLOAT_2):(n.rectAreaLTC1=Pe.LTC_HALF_1,n.rectAreaLTC2=Pe.LTC_HALF_2)),n.ambient[0]=u,n.ambient[1]=h,n.ambient[2]=f;const S=n.hash;(S.directionalLength!==d||S.pointLength!==p||S.spotLength!==v||S.rectAreaLength!==m||S.hemiLength!==g||S.numDirectionalShadows!==M||S.numPointShadows!==b||S.numSpotShadows!==y||S.numSpotMaps!==C||S.numLightProbes!==E)&&(n.directional.length=d,n.spot.length=v,n.rectArea.length=m,n.point.length=p,n.hemi.length=g,n.directionalShadow.length=M,n.directionalShadowMap.length=M,n.pointShadow.length=b,n.pointShadowMap.length=b,n.spotShadow.length=y,n.spotShadowMap.length=y,n.directionalShadowMatrix.length=M,n.pointShadowMatrix.length=b,n.spotLightMatrix.length=y+C-w,n.spotLightMap.length=C,n.numSpotLightShadowsWithMaps=w,n.numLightProbes=E,S.directionalLength=d,S.pointLength=p,S.spotLength=v,S.rectAreaLength=m,S.hemiLength=g,S.numDirectionalShadows=M,S.numPointShadows=b,S.numSpotShadows=y,S.numSpotMaps=C,S.numLightProbes=E,n.version=CI++)}function l(c,u){let h=0,f=0,d=0,p=0,v=0;const m=u.matrixWorldInverse;for(let g=0,M=c.length;g<M;g++){const b=c[g];if(b.isDirectionalLight){const y=n.directional[h];y.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(m),h++}else if(b.isSpotLight){const y=n.spot[d];y.position.setFromMatrixPosition(b.matrixWorld),y.position.applyMatrix4(m),y.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(m),d++}else if(b.isRectAreaLight){const y=n.rectArea[p];y.position.setFromMatrixPosition(b.matrixWorld),y.position.applyMatrix4(m),o.identity(),s.copy(b.matrixWorld),s.premultiply(m),o.extractRotation(s),y.halfWidth.set(b.width*.5,0,0),y.halfHeight.set(0,b.height*.5,0),y.halfWidth.applyMatrix4(o),y.halfHeight.applyMatrix4(o),p++}else if(b.isPointLight){const y=n.point[f];y.position.setFromMatrixPosition(b.matrixWorld),y.position.applyMatrix4(m),f++}else if(b.isHemisphereLight){const y=n.hemi[v];y.direction.setFromMatrixPosition(b.matrixWorld),y.direction.transformDirection(m),v++}}}return{setup:a,setupView:l,state:n}}function ov(i){const e=new PI(i),t=[],n=[];function r(u){c.camera=u,t.length=0,n.length=0}function s(u){t.push(u)}function o(u){n.push(u)}function a(){e.setup(t)}function l(u){e.setupView(t,u)}const c={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:c,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:o}}function LI(i){let e=new WeakMap;function t(r,s=0){const o=e.get(r);let a;return o===void 0?(a=new ov(i),e.set(r,[a])):s>=o.length?(a=new ov(i),o.push(a)):a=o[s],a}function n(){e=new WeakMap}return{get:t,dispose:n}}const DI=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,NI=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function UI(i,e,t){let n=new Oo;const r=new pe,s=new pe,o=new it,a=new Mp({depthPacking:J0}),l=new Sp,c={},u=t.maxTextureSize,h={[Fi]:pn,[pn]:Fi,[En]:En},f=new gn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new pe},radius:{value:4}},vertexShader:DI,fragmentShader:NI}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new Ze;p.setAttribute("position",new lt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new wt(p,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Kd;let g=this.type;this.render=function(w,E,S){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||w.length===0)return;const x=i.getRenderTarget(),_=i.getActiveCubeFace(),A=i.getActiveMipmapLevel(),N=i.state;N.setBlending(nr),N.buffers.color.setClear(1,1,1,1),N.buffers.depth.setTest(!0),N.setScissorTest(!1);const B=g!==Ri&&this.type===Ri,V=g===Ri&&this.type!==Ri;for(let X=0,z=w.length;X<z;X++){const te=w[X],J=te.shadow;if(J===void 0){console.warn("THREE.WebGLShadowMap:",te,"has no shadow.");continue}if(J.autoUpdate===!1&&J.needsUpdate===!1)continue;r.copy(J.mapSize);const ue=J.getFrameExtents();if(r.multiply(ue),s.copy(J.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/ue.x),r.x=s.x*ue.x,J.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/ue.y),r.y=s.y*ue.y,J.mapSize.y=s.y)),J.map===null||B===!0||V===!0){const oe=this.type!==Ri?{minFilter:Lt,magFilter:Lt}:{};J.map!==null&&J.map.dispose(),J.map=new _i(r.x,r.y,oe),J.map.texture.name=te.name+".shadowMap",J.camera.updateProjectionMatrix()}i.setRenderTarget(J.map),i.clear();const de=J.getViewportCount();for(let oe=0;oe<de;oe++){const ye=J.getViewport(oe);o.set(s.x*ye.x,s.y*ye.y,s.x*ye.z,s.y*ye.w),N.viewport(o),J.updateMatrices(te,oe),n=J.getFrustum(),y(E,S,J.camera,te,this.type)}J.isPointLightShadow!==!0&&this.type===Ri&&M(J,S),J.needsUpdate=!1}g=this.type,m.needsUpdate=!1,i.setRenderTarget(x,_,A)};function M(w,E){const S=e.update(v);f.defines.VSM_SAMPLES!==w.blurSamples&&(f.defines.VSM_SAMPLES=w.blurSamples,d.defines.VSM_SAMPLES=w.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new _i(r.x,r.y)),f.uniforms.shadow_pass.value=w.map.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,i.setRenderTarget(w.mapPass),i.clear(),i.renderBufferDirect(E,null,S,f,v,null),d.uniforms.shadow_pass.value=w.mapPass.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,i.setRenderTarget(w.map),i.clear(),i.renderBufferDirect(E,null,S,d,v,null)}function b(w,E,S,x){let _=null;const A=S.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(A!==void 0)_=A;else if(_=S.isPointLight===!0?l:a,i.localClippingEnabled&&E.clipShadows===!0&&Array.isArray(E.clippingPlanes)&&E.clippingPlanes.length!==0||E.displacementMap&&E.displacementScale!==0||E.alphaMap&&E.alphaTest>0||E.map&&E.alphaTest>0||E.alphaToCoverage===!0){const N=_.uuid,B=E.uuid;let V=c[N];V===void 0&&(V={},c[N]=V);let X=V[B];X===void 0&&(X=_.clone(),V[B]=X,E.addEventListener("dispose",C)),_=X}if(_.visible=E.visible,_.wireframe=E.wireframe,x===Ri?_.side=E.shadowSide!==null?E.shadowSide:E.side:_.side=E.shadowSide!==null?E.shadowSide:h[E.side],_.alphaMap=E.alphaMap,_.alphaTest=E.alphaToCoverage===!0?.5:E.alphaTest,_.map=E.map,_.clipShadows=E.clipShadows,_.clippingPlanes=E.clippingPlanes,_.clipIntersection=E.clipIntersection,_.displacementMap=E.displacementMap,_.displacementScale=E.displacementScale,_.displacementBias=E.displacementBias,_.wireframeLinewidth=E.wireframeLinewidth,_.linewidth=E.linewidth,S.isPointLight===!0&&_.isMeshDistanceMaterial===!0){const N=i.properties.get(_);N.light=S}return _}function y(w,E,S,x,_){if(w.visible===!1)return;if(w.layers.test(E.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&_===Ri)&&(!w.frustumCulled||n.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,w.matrixWorld);const B=e.update(w),V=w.material;if(Array.isArray(V)){const X=B.groups;for(let z=0,te=X.length;z<te;z++){const J=X[z],ue=V[J.materialIndex];if(ue&&ue.visible){const de=b(w,ue,x,_);w.onBeforeShadow(i,w,E,S,B,de,J),i.renderBufferDirect(S,null,B,de,w,J),w.onAfterShadow(i,w,E,S,B,de,J)}}}else if(V.visible){const X=b(w,V,x,_);w.onBeforeShadow(i,w,E,S,B,X,null),i.renderBufferDirect(S,null,B,X,w,null),w.onAfterShadow(i,w,E,S,B,X,null)}}const N=w.children;for(let B=0,V=N.length;B<V;B++)y(N[B],E,S,x,_)}function C(w){w.target.removeEventListener("dispose",C);for(const S in c){const x=c[S],_=w.target.uuid;_ in x&&(x[_].dispose(),delete x[_])}}}const OI={[zc]:kc,[Vc]:Wc,[Hc]:Xc,[ws]:Gc,[kc]:zc,[Wc]:Vc,[Xc]:Hc,[Gc]:ws};function FI(i,e){function t(){let $=!1;const Te=new it;let fe=null;const ve=new it(0,0,0,0);return{setMask:function(De){fe!==De&&!$&&(i.colorMask(De,De,De,De),fe=De)},setLocked:function(De){$=De},setClear:function(De,Ae,Xe,bt,Nt){Nt===!0&&(De*=bt,Ae*=bt,Xe*=bt),Te.set(De,Ae,Xe,bt),ve.equals(Te)===!1&&(i.clearColor(De,Ae,Xe,bt),ve.copy(Te))},reset:function(){$=!1,fe=null,ve.set(-1,0,0,0)}}}function n(){let $=!1,Te=!1,fe=null,ve=null,De=null;return{setReversed:function(Ae){if(Te!==Ae){const Xe=e.get("EXT_clip_control");Ae?Xe.clipControlEXT(Xe.LOWER_LEFT_EXT,Xe.ZERO_TO_ONE_EXT):Xe.clipControlEXT(Xe.LOWER_LEFT_EXT,Xe.NEGATIVE_ONE_TO_ONE_EXT),Te=Ae;const bt=De;De=null,this.setClear(bt)}},getReversed:function(){return Te},setTest:function(Ae){Ae?Z(i.DEPTH_TEST):K(i.DEPTH_TEST)},setMask:function(Ae){fe!==Ae&&!$&&(i.depthMask(Ae),fe=Ae)},setFunc:function(Ae){if(Te&&(Ae=OI[Ae]),ve!==Ae){switch(Ae){case zc:i.depthFunc(i.NEVER);break;case kc:i.depthFunc(i.ALWAYS);break;case Vc:i.depthFunc(i.LESS);break;case ws:i.depthFunc(i.LEQUAL);break;case Hc:i.depthFunc(i.EQUAL);break;case Gc:i.depthFunc(i.GEQUAL);break;case Wc:i.depthFunc(i.GREATER);break;case Xc:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}ve=Ae}},setLocked:function(Ae){$=Ae},setClear:function(Ae){De!==Ae&&(Te&&(Ae=1-Ae),i.clearDepth(Ae),De=Ae)},reset:function(){$=!1,fe=null,ve=null,De=null,Te=!1}}}function r(){let $=!1,Te=null,fe=null,ve=null,De=null,Ae=null,Xe=null,bt=null,Nt=null;return{setTest:function(ut){$||(ut?Z(i.STENCIL_TEST):K(i.STENCIL_TEST))},setMask:function(ut){Te!==ut&&!$&&(i.stencilMask(ut),Te=ut)},setFunc:function(ut,ln,ki){(fe!==ut||ve!==ln||De!==ki)&&(i.stencilFunc(ut,ln,ki),fe=ut,ve=ln,De=ki)},setOp:function(ut,ln,ki){(Ae!==ut||Xe!==ln||bt!==ki)&&(i.stencilOp(ut,ln,ki),Ae=ut,Xe=ln,bt=ki)},setLocked:function(ut){$=ut},setClear:function(ut){Nt!==ut&&(i.clearStencil(ut),Nt=ut)},reset:function(){$=!1,Te=null,fe=null,ve=null,De=null,Ae=null,Xe=null,bt=null,Nt=null}}}const s=new t,o=new n,a=new r,l=new WeakMap,c=new WeakMap;let u={},h={},f=new WeakMap,d=[],p=null,v=!1,m=null,g=null,M=null,b=null,y=null,C=null,w=null,E=new we(0,0,0),S=0,x=!1,_=null,A=null,N=null,B=null,V=null;const X=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let z=!1,te=0;const J=i.getParameter(i.VERSION);J.indexOf("WebGL")!==-1?(te=parseFloat(/^WebGL (\d)/.exec(J)[1]),z=te>=1):J.indexOf("OpenGL ES")!==-1&&(te=parseFloat(/^OpenGL ES (\d)/.exec(J)[1]),z=te>=2);let ue=null,de={};const oe=i.getParameter(i.SCISSOR_BOX),ye=i.getParameter(i.VIEWPORT),Ce=new it().fromArray(oe),le=new it().fromArray(ye);function ge($,Te,fe,ve){const De=new Uint8Array(4),Ae=i.createTexture();i.bindTexture($,Ae),i.texParameteri($,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri($,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let Xe=0;Xe<fe;Xe++)$===i.TEXTURE_3D||$===i.TEXTURE_2D_ARRAY?i.texImage3D(Te,0,i.RGBA,1,1,ve,0,i.RGBA,i.UNSIGNED_BYTE,De):i.texImage2D(Te+Xe,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,De);return Ae}const be={};be[i.TEXTURE_2D]=ge(i.TEXTURE_2D,i.TEXTURE_2D,1),be[i.TEXTURE_CUBE_MAP]=ge(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),be[i.TEXTURE_2D_ARRAY]=ge(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),be[i.TEXTURE_3D]=ge(i.TEXTURE_3D,i.TEXTURE_3D,1,1),s.setClear(0,0,0,1),o.setClear(1),a.setClear(0),Z(i.DEPTH_TEST),o.setFunc(ws),W(!1),j(ed),Z(i.CULL_FACE),T(nr);function Z($){u[$]!==!0&&(i.enable($),u[$]=!0)}function K($){u[$]!==!1&&(i.disable($),u[$]=!1)}function I($,Te){return h[$]!==Te?(i.bindFramebuffer($,Te),h[$]=Te,$===i.DRAW_FRAMEBUFFER&&(h[i.FRAMEBUFFER]=Te),$===i.FRAMEBUFFER&&(h[i.DRAW_FRAMEBUFFER]=Te),!0):!1}function U($,Te){let fe=d,ve=!1;if($){fe=f.get(Te),fe===void 0&&(fe=[],f.set(Te,fe));const De=$.textures;if(fe.length!==De.length||fe[0]!==i.COLOR_ATTACHMENT0){for(let Ae=0,Xe=De.length;Ae<Xe;Ae++)fe[Ae]=i.COLOR_ATTACHMENT0+Ae;fe.length=De.length,ve=!0}}else fe[0]!==i.BACK&&(fe[0]=i.BACK,ve=!0);ve&&i.drawBuffers(fe)}function G($){return p!==$?(i.useProgram($),p=$,!0):!1}const D={[Tr]:i.FUNC_ADD,[b0]:i.FUNC_SUBTRACT,[M0]:i.FUNC_REVERSE_SUBTRACT};D[S0]=i.MIN,D[w0]=i.MAX;const L={[T0]:i.ZERO,[E0]:i.ONE,[A0]:i.SRC_COLOR,[Fc]:i.SRC_ALPHA,[D0]:i.SRC_ALPHA_SATURATE,[P0]:i.DST_COLOR,[C0]:i.DST_ALPHA,[R0]:i.ONE_MINUS_SRC_COLOR,[Bc]:i.ONE_MINUS_SRC_ALPHA,[L0]:i.ONE_MINUS_DST_COLOR,[I0]:i.ONE_MINUS_DST_ALPHA,[N0]:i.CONSTANT_COLOR,[U0]:i.ONE_MINUS_CONSTANT_COLOR,[O0]:i.CONSTANT_ALPHA,[F0]:i.ONE_MINUS_CONSTANT_ALPHA};function T($,Te,fe,ve,De,Ae,Xe,bt,Nt,ut){if($===nr){v===!0&&(K(i.BLEND),v=!1);return}if(v===!1&&(Z(i.BLEND),v=!0),$!==y0){if($!==m||ut!==x){if((g!==Tr||y!==Tr)&&(i.blendEquation(i.FUNC_ADD),g=Tr,y=Tr),ut)switch($){case vs:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case Oc:i.blendFunc(i.ONE,i.ONE);break;case td:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case nd:i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",$);break}else switch($){case vs:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case Oc:i.blendFunc(i.SRC_ALPHA,i.ONE);break;case td:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case nd:i.blendFunc(i.ZERO,i.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",$);break}M=null,b=null,C=null,w=null,E.set(0,0,0),S=0,m=$,x=ut}return}De=De||Te,Ae=Ae||fe,Xe=Xe||ve,(Te!==g||De!==y)&&(i.blendEquationSeparate(D[Te],D[De]),g=Te,y=De),(fe!==M||ve!==b||Ae!==C||Xe!==w)&&(i.blendFuncSeparate(L[fe],L[ve],L[Ae],L[Xe]),M=fe,b=ve,C=Ae,w=Xe),(bt.equals(E)===!1||Nt!==S)&&(i.blendColor(bt.r,bt.g,bt.b,Nt),E.copy(bt),S=Nt),m=$,x=!1}function H($,Te){$.side===En?K(i.CULL_FACE):Z(i.CULL_FACE);let fe=$.side===pn;Te&&(fe=!fe),W(fe),$.blending===vs&&$.transparent===!1?T(nr):T($.blending,$.blendEquation,$.blendSrc,$.blendDst,$.blendEquationAlpha,$.blendSrcAlpha,$.blendDstAlpha,$.blendColor,$.blendAlpha,$.premultipliedAlpha),o.setFunc($.depthFunc),o.setTest($.depthTest),o.setMask($.depthWrite),s.setMask($.colorWrite);const ve=$.stencilWrite;a.setTest(ve),ve&&(a.setMask($.stencilWriteMask),a.setFunc($.stencilFunc,$.stencilRef,$.stencilFuncMask),a.setOp($.stencilFail,$.stencilZFail,$.stencilZPass)),re($.polygonOffset,$.polygonOffsetFactor,$.polygonOffsetUnits),$.alphaToCoverage===!0?Z(i.SAMPLE_ALPHA_TO_COVERAGE):K(i.SAMPLE_ALPHA_TO_COVERAGE)}function W($){_!==$&&($?i.frontFace(i.CW):i.frontFace(i.CCW),_=$)}function j($){$!==_0?(Z(i.CULL_FACE),$!==A&&($===ed?i.cullFace(i.BACK):$===x0?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):K(i.CULL_FACE),A=$}function Y($){$!==N&&(z&&i.lineWidth($),N=$)}function re($,Te,fe){$?(Z(i.POLYGON_OFFSET_FILL),(B!==Te||V!==fe)&&(i.polygonOffset(Te,fe),B=Te,V=fe)):K(i.POLYGON_OFFSET_FILL)}function Q($){$?Z(i.SCISSOR_TEST):K(i.SCISSOR_TEST)}function P($){$===void 0&&($=i.TEXTURE0+X-1),ue!==$&&(i.activeTexture($),ue=$)}function R($,Te,fe){fe===void 0&&(ue===null?fe=i.TEXTURE0+X-1:fe=ue);let ve=de[fe];ve===void 0&&(ve={type:void 0,texture:void 0},de[fe]=ve),(ve.type!==$||ve.texture!==Te)&&(ue!==fe&&(i.activeTexture(fe),ue=fe),i.bindTexture($,Te||be[$]),ve.type=$,ve.texture=Te)}function k(){const $=de[ue];$!==void 0&&$.type!==void 0&&(i.bindTexture($.type,null),$.type=void 0,$.texture=void 0)}function ee(){try{i.compressedTexImage2D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function ae(){try{i.compressedTexImage3D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function se(){try{i.texSubImage2D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function Me(){try{i.texSubImage3D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function _e(){try{i.compressedTexSubImage2D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function Ie(){try{i.compressedTexSubImage3D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function Ue(){try{i.texStorage2D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function xe(){try{i.texStorage3D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function Re(){try{i.texImage2D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function ze(){try{i.texImage3D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function We($){Ce.equals($)===!1&&(i.scissor($.x,$.y,$.z,$.w),Ce.copy($))}function Ee($){le.equals($)===!1&&(i.viewport($.x,$.y,$.z,$.w),le.copy($))}function q($,Te){let fe=c.get(Te);fe===void 0&&(fe=new WeakMap,c.set(Te,fe));let ve=fe.get($);ve===void 0&&(ve=i.getUniformBlockIndex(Te,$.name),fe.set($,ve))}function me($,Te){const ve=c.get(Te).get($);l.get(Te)!==ve&&(i.uniformBlockBinding(Te,ve,$.__bindingPointIndex),l.set(Te,ve))}function Le(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),o.setReversed(!1),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),u={},ue=null,de={},h={},f=new WeakMap,d=[],p=null,v=!1,m=null,g=null,M=null,b=null,y=null,C=null,w=null,E=new we(0,0,0),S=0,x=!1,_=null,A=null,N=null,B=null,V=null,Ce.set(0,0,i.canvas.width,i.canvas.height),le.set(0,0,i.canvas.width,i.canvas.height),s.reset(),o.reset(),a.reset()}return{buffers:{color:s,depth:o,stencil:a},enable:Z,disable:K,bindFramebuffer:I,drawBuffers:U,useProgram:G,setBlending:T,setMaterial:H,setFlipSided:W,setCullFace:j,setLineWidth:Y,setPolygonOffset:re,setScissorTest:Q,activeTexture:P,bindTexture:R,unbindTexture:k,compressedTexImage2D:ee,compressedTexImage3D:ae,texImage2D:Re,texImage3D:ze,updateUBOMapping:q,uniformBlockBinding:me,texStorage2D:Ue,texStorage3D:xe,texSubImage2D:se,texSubImage3D:Me,compressedTexSubImage2D:_e,compressedTexSubImage3D:Ie,scissor:We,viewport:Ee,reset:Le}}function BI(i,e,t,n,r,s,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new pe,u=new WeakMap;let h;const f=new WeakMap;let d=!1;try{d=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(P,R){return d?new OffscreenCanvas(P,R):Wa("canvas")}function v(P,R,k){let ee=1;const ae=Q(P);if((ae.width>k||ae.height>k)&&(ee=k/Math.max(ae.width,ae.height)),ee<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const se=Math.floor(ee*ae.width),Me=Math.floor(ee*ae.height);h===void 0&&(h=p(se,Me));const _e=R?p(se,Me):h;return _e.width=se,_e.height=Me,_e.getContext("2d").drawImage(P,0,0,se,Me),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ae.width+"x"+ae.height+") to ("+se+"x"+Me+")."),_e}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ae.width+"x"+ae.height+")."),P;return P}function m(P){return P.generateMipmaps}function g(P){i.generateMipmap(P)}function M(P){return P.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?i.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?i.TEXTURE_2D_ARRAY:i.TEXTURE_2D}function b(P,R,k,ee,ae=!1){if(P!==null){if(i[P]!==void 0)return i[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let se=R;if(R===i.RED&&(k===i.FLOAT&&(se=i.R32F),k===i.HALF_FLOAT&&(se=i.R16F),k===i.UNSIGNED_BYTE&&(se=i.R8)),R===i.RED_INTEGER&&(k===i.UNSIGNED_BYTE&&(se=i.R8UI),k===i.UNSIGNED_SHORT&&(se=i.R16UI),k===i.UNSIGNED_INT&&(se=i.R32UI),k===i.BYTE&&(se=i.R8I),k===i.SHORT&&(se=i.R16I),k===i.INT&&(se=i.R32I)),R===i.RG&&(k===i.FLOAT&&(se=i.RG32F),k===i.HALF_FLOAT&&(se=i.RG16F),k===i.UNSIGNED_BYTE&&(se=i.RG8)),R===i.RG_INTEGER&&(k===i.UNSIGNED_BYTE&&(se=i.RG8UI),k===i.UNSIGNED_SHORT&&(se=i.RG16UI),k===i.UNSIGNED_INT&&(se=i.RG32UI),k===i.BYTE&&(se=i.RG8I),k===i.SHORT&&(se=i.RG16I),k===i.INT&&(se=i.RG32I)),R===i.RGB_INTEGER&&(k===i.UNSIGNED_BYTE&&(se=i.RGB8UI),k===i.UNSIGNED_SHORT&&(se=i.RGB16UI),k===i.UNSIGNED_INT&&(se=i.RGB32UI),k===i.BYTE&&(se=i.RGB8I),k===i.SHORT&&(se=i.RGB16I),k===i.INT&&(se=i.RGB32I)),R===i.RGBA_INTEGER&&(k===i.UNSIGNED_BYTE&&(se=i.RGBA8UI),k===i.UNSIGNED_SHORT&&(se=i.RGBA16UI),k===i.UNSIGNED_INT&&(se=i.RGBA32UI),k===i.BYTE&&(se=i.RGBA8I),k===i.SHORT&&(se=i.RGBA16I),k===i.INT&&(se=i.RGBA32I)),R===i.RGB&&k===i.UNSIGNED_INT_5_9_9_9_REV&&(se=i.RGB9_E5),R===i.RGBA){const Me=ae?Va:at.getTransfer(ee);k===i.FLOAT&&(se=i.RGBA32F),k===i.HALF_FLOAT&&(se=i.RGBA16F),k===i.UNSIGNED_BYTE&&(se=Me===yt?i.SRGB8_ALPHA8:i.RGBA8),k===i.UNSIGNED_SHORT_4_4_4_4&&(se=i.RGBA4),k===i.UNSIGNED_SHORT_5_5_5_1&&(se=i.RGB5_A1)}return(se===i.R16F||se===i.R32F||se===i.RG16F||se===i.RG32F||se===i.RGBA16F||se===i.RGBA32F)&&e.get("EXT_color_buffer_float"),se}function y(P,R){let k;return P?R===null||R===or||R===Mo?k=i.DEPTH24_STENCIL8:R===on?k=i.DEPTH32F_STENCIL8:R===bo&&(k=i.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===or||R===Mo?k=i.DEPTH_COMPONENT24:R===on?k=i.DEPTH_COMPONENT32F:R===bo&&(k=i.DEPTH_COMPONENT16),k}function C(P,R){return m(P)===!0||P.isFramebufferTexture&&P.minFilter!==Lt&&P.minFilter!==Ct?Math.log2(Math.max(R.width,R.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?R.mipmaps.length:1}function w(P){const R=P.target;R.removeEventListener("dispose",w),S(R),R.isVideoTexture&&u.delete(R)}function E(P){const R=P.target;R.removeEventListener("dispose",E),_(R)}function S(P){const R=n.get(P);if(R.__webglInit===void 0)return;const k=P.source,ee=f.get(k);if(ee){const ae=ee[R.__cacheKey];ae.usedTimes--,ae.usedTimes===0&&x(P),Object.keys(ee).length===0&&f.delete(k)}n.remove(P)}function x(P){const R=n.get(P);i.deleteTexture(R.__webglTexture);const k=P.source,ee=f.get(k);delete ee[R.__cacheKey],o.memory.textures--}function _(P){const R=n.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),n.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let ee=0;ee<6;ee++){if(Array.isArray(R.__webglFramebuffer[ee]))for(let ae=0;ae<R.__webglFramebuffer[ee].length;ae++)i.deleteFramebuffer(R.__webglFramebuffer[ee][ae]);else i.deleteFramebuffer(R.__webglFramebuffer[ee]);R.__webglDepthbuffer&&i.deleteRenderbuffer(R.__webglDepthbuffer[ee])}else{if(Array.isArray(R.__webglFramebuffer))for(let ee=0;ee<R.__webglFramebuffer.length;ee++)i.deleteFramebuffer(R.__webglFramebuffer[ee]);else i.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&i.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&i.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let ee=0;ee<R.__webglColorRenderbuffer.length;ee++)R.__webglColorRenderbuffer[ee]&&i.deleteRenderbuffer(R.__webglColorRenderbuffer[ee]);R.__webglDepthRenderbuffer&&i.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const k=P.textures;for(let ee=0,ae=k.length;ee<ae;ee++){const se=n.get(k[ee]);se.__webglTexture&&(i.deleteTexture(se.__webglTexture),o.memory.textures--),n.remove(k[ee])}n.remove(P)}let A=0;function N(){A=0}function B(){const P=A;return P>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+r.maxTextures),A+=1,P}function V(P){const R=[];return R.push(P.wrapS),R.push(P.wrapT),R.push(P.wrapR||0),R.push(P.magFilter),R.push(P.minFilter),R.push(P.anisotropy),R.push(P.internalFormat),R.push(P.format),R.push(P.type),R.push(P.generateMipmaps),R.push(P.premultiplyAlpha),R.push(P.flipY),R.push(P.unpackAlignment),R.push(P.colorSpace),R.join()}function X(P,R){const k=n.get(P);if(P.isVideoTexture&&Y(P),P.isRenderTargetTexture===!1&&P.version>0&&k.__version!==P.version){const ee=P.image;if(ee===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ee.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{le(k,P,R);return}}t.bindTexture(i.TEXTURE_2D,k.__webglTexture,i.TEXTURE0+R)}function z(P,R){const k=n.get(P);if(P.version>0&&k.__version!==P.version){le(k,P,R);return}t.bindTexture(i.TEXTURE_2D_ARRAY,k.__webglTexture,i.TEXTURE0+R)}function te(P,R){const k=n.get(P);if(P.version>0&&k.__version!==P.version){le(k,P,R);return}t.bindTexture(i.TEXTURE_3D,k.__webglTexture,i.TEXTURE0+R)}function J(P,R){const k=n.get(P);if(P.version>0&&k.__version!==P.version){ge(k,P,R);return}t.bindTexture(i.TEXTURE_CUBE_MAP,k.__webglTexture,i.TEXTURE0+R)}const ue={[sr]:i.REPEAT,[Jt]:i.CLAMP_TO_EDGE,[Ts]:i.MIRRORED_REPEAT},de={[Lt]:i.NEAREST,[nl]:i.NEAREST_MIPMAP_NEAREST,[Er]:i.NEAREST_MIPMAP_LINEAR,[Ct]:i.LINEAR,[_s]:i.LINEAR_MIPMAP_NEAREST,[Xn]:i.LINEAR_MIPMAP_LINEAR},oe={[ex]:i.NEVER,[ox]:i.ALWAYS,[tx]:i.LESS,[ap]:i.LEQUAL,[nx]:i.EQUAL,[sx]:i.GEQUAL,[ix]:i.GREATER,[rx]:i.NOTEQUAL};function ye(P,R){if(R.type===on&&e.has("OES_texture_float_linear")===!1&&(R.magFilter===Ct||R.magFilter===_s||R.magFilter===Er||R.magFilter===Xn||R.minFilter===Ct||R.minFilter===_s||R.minFilter===Er||R.minFilter===Xn)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),i.texParameteri(P,i.TEXTURE_WRAP_S,ue[R.wrapS]),i.texParameteri(P,i.TEXTURE_WRAP_T,ue[R.wrapT]),(P===i.TEXTURE_3D||P===i.TEXTURE_2D_ARRAY)&&i.texParameteri(P,i.TEXTURE_WRAP_R,ue[R.wrapR]),i.texParameteri(P,i.TEXTURE_MAG_FILTER,de[R.magFilter]),i.texParameteri(P,i.TEXTURE_MIN_FILTER,de[R.minFilter]),R.compareFunction&&(i.texParameteri(P,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(P,i.TEXTURE_COMPARE_FUNC,oe[R.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===Lt||R.minFilter!==Er&&R.minFilter!==Xn||R.type===on&&e.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const k=e.get("EXT_texture_filter_anisotropic");i.texParameterf(P,k.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,r.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function Ce(P,R){let k=!1;P.__webglInit===void 0&&(P.__webglInit=!0,R.addEventListener("dispose",w));const ee=R.source;let ae=f.get(ee);ae===void 0&&(ae={},f.set(ee,ae));const se=V(R);if(se!==P.__cacheKey){ae[se]===void 0&&(ae[se]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,k=!0),ae[se].usedTimes++;const Me=ae[P.__cacheKey];Me!==void 0&&(ae[P.__cacheKey].usedTimes--,Me.usedTimes===0&&x(R)),P.__cacheKey=se,P.__webglTexture=ae[se].texture}return k}function le(P,R,k){let ee=i.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(ee=i.TEXTURE_2D_ARRAY),R.isData3DTexture&&(ee=i.TEXTURE_3D);const ae=Ce(P,R),se=R.source;t.bindTexture(ee,P.__webglTexture,i.TEXTURE0+k);const Me=n.get(se);if(se.version!==Me.__version||ae===!0){t.activeTexture(i.TEXTURE0+k);const _e=at.getPrimaries(at.workingColorSpace),Ie=R.colorSpace===Pi?null:at.getPrimaries(R.colorSpace),Ue=R.colorSpace===Pi||_e===Ie?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,R.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,R.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ue);let xe=v(R.image,!1,r.maxTextureSize);xe=re(R,xe);const Re=s.convert(R.format,R.colorSpace),ze=s.convert(R.type);let We=b(R.internalFormat,Re,ze,R.colorSpace,R.isVideoTexture);ye(ee,R);let Ee;const q=R.mipmaps,me=R.isVideoTexture!==!0,Le=Me.__version===void 0||ae===!0,$=se.dataReady,Te=C(R,xe);if(R.isDepthTexture)We=y(R.format===wo,R.type),Le&&(me?t.texStorage2D(i.TEXTURE_2D,1,We,xe.width,xe.height):t.texImage2D(i.TEXTURE_2D,0,We,xe.width,xe.height,0,Re,ze,null));else if(R.isDataTexture)if(q.length>0){me&&Le&&t.texStorage2D(i.TEXTURE_2D,Te,We,q[0].width,q[0].height);for(let fe=0,ve=q.length;fe<ve;fe++)Ee=q[fe],me?$&&t.texSubImage2D(i.TEXTURE_2D,fe,0,0,Ee.width,Ee.height,Re,ze,Ee.data):t.texImage2D(i.TEXTURE_2D,fe,We,Ee.width,Ee.height,0,Re,ze,Ee.data);R.generateMipmaps=!1}else me?(Le&&t.texStorage2D(i.TEXTURE_2D,Te,We,xe.width,xe.height),$&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,xe.width,xe.height,Re,ze,xe.data)):t.texImage2D(i.TEXTURE_2D,0,We,xe.width,xe.height,0,Re,ze,xe.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){me&&Le&&t.texStorage3D(i.TEXTURE_2D_ARRAY,Te,We,q[0].width,q[0].height,xe.depth);for(let fe=0,ve=q.length;fe<ve;fe++)if(Ee=q[fe],R.format!==Qt)if(Re!==null)if(me){if($)if(R.layerUpdates.size>0){const De=fd(Ee.width,Ee.height,R.format,R.type);for(const Ae of R.layerUpdates){const Xe=Ee.data.subarray(Ae*De/Ee.data.BYTES_PER_ELEMENT,(Ae+1)*De/Ee.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,fe,0,0,Ae,Ee.width,Ee.height,1,Re,Xe)}R.clearLayerUpdates()}else t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,fe,0,0,0,Ee.width,Ee.height,xe.depth,Re,Ee.data)}else t.compressedTexImage3D(i.TEXTURE_2D_ARRAY,fe,We,Ee.width,Ee.height,xe.depth,0,Ee.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else me?$&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,fe,0,0,0,Ee.width,Ee.height,xe.depth,Re,ze,Ee.data):t.texImage3D(i.TEXTURE_2D_ARRAY,fe,We,Ee.width,Ee.height,xe.depth,0,Re,ze,Ee.data)}else{me&&Le&&t.texStorage2D(i.TEXTURE_2D,Te,We,q[0].width,q[0].height);for(let fe=0,ve=q.length;fe<ve;fe++)Ee=q[fe],R.format!==Qt?Re!==null?me?$&&t.compressedTexSubImage2D(i.TEXTURE_2D,fe,0,0,Ee.width,Ee.height,Re,Ee.data):t.compressedTexImage2D(i.TEXTURE_2D,fe,We,Ee.width,Ee.height,0,Ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):me?$&&t.texSubImage2D(i.TEXTURE_2D,fe,0,0,Ee.width,Ee.height,Re,ze,Ee.data):t.texImage2D(i.TEXTURE_2D,fe,We,Ee.width,Ee.height,0,Re,ze,Ee.data)}else if(R.isDataArrayTexture)if(me){if(Le&&t.texStorage3D(i.TEXTURE_2D_ARRAY,Te,We,xe.width,xe.height,xe.depth),$)if(R.layerUpdates.size>0){const fe=fd(xe.width,xe.height,R.format,R.type);for(const ve of R.layerUpdates){const De=xe.data.subarray(ve*fe/xe.data.BYTES_PER_ELEMENT,(ve+1)*fe/xe.data.BYTES_PER_ELEMENT);t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,ve,xe.width,xe.height,1,Re,ze,De)}R.clearLayerUpdates()}else t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,xe.width,xe.height,xe.depth,Re,ze,xe.data)}else t.texImage3D(i.TEXTURE_2D_ARRAY,0,We,xe.width,xe.height,xe.depth,0,Re,ze,xe.data);else if(R.isData3DTexture)me?(Le&&t.texStorage3D(i.TEXTURE_3D,Te,We,xe.width,xe.height,xe.depth),$&&t.texSubImage3D(i.TEXTURE_3D,0,0,0,0,xe.width,xe.height,xe.depth,Re,ze,xe.data)):t.texImage3D(i.TEXTURE_3D,0,We,xe.width,xe.height,xe.depth,0,Re,ze,xe.data);else if(R.isFramebufferTexture){if(Le)if(me)t.texStorage2D(i.TEXTURE_2D,Te,We,xe.width,xe.height);else{let fe=xe.width,ve=xe.height;for(let De=0;De<Te;De++)t.texImage2D(i.TEXTURE_2D,De,We,fe,ve,0,Re,ze,null),fe>>=1,ve>>=1}}else if(q.length>0){if(me&&Le){const fe=Q(q[0]);t.texStorage2D(i.TEXTURE_2D,Te,We,fe.width,fe.height)}for(let fe=0,ve=q.length;fe<ve;fe++)Ee=q[fe],me?$&&t.texSubImage2D(i.TEXTURE_2D,fe,0,0,Re,ze,Ee):t.texImage2D(i.TEXTURE_2D,fe,We,Re,ze,Ee);R.generateMipmaps=!1}else if(me){if(Le){const fe=Q(xe);t.texStorage2D(i.TEXTURE_2D,Te,We,fe.width,fe.height)}$&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,Re,ze,xe)}else t.texImage2D(i.TEXTURE_2D,0,We,Re,ze,xe);m(R)&&g(ee),Me.__version=se.version,R.onUpdate&&R.onUpdate(R)}P.__version=R.version}function ge(P,R,k){if(R.image.length!==6)return;const ee=Ce(P,R),ae=R.source;t.bindTexture(i.TEXTURE_CUBE_MAP,P.__webglTexture,i.TEXTURE0+k);const se=n.get(ae);if(ae.version!==se.__version||ee===!0){t.activeTexture(i.TEXTURE0+k);const Me=at.getPrimaries(at.workingColorSpace),_e=R.colorSpace===Pi?null:at.getPrimaries(R.colorSpace),Ie=R.colorSpace===Pi||Me===_e?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,R.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,R.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ie);const Ue=R.isCompressedTexture||R.image[0].isCompressedTexture,xe=R.image[0]&&R.image[0].isDataTexture,Re=[];for(let ve=0;ve<6;ve++)!Ue&&!xe?Re[ve]=v(R.image[ve],!0,r.maxCubemapSize):Re[ve]=xe?R.image[ve].image:R.image[ve],Re[ve]=re(R,Re[ve]);const ze=Re[0],We=s.convert(R.format,R.colorSpace),Ee=s.convert(R.type),q=b(R.internalFormat,We,Ee,R.colorSpace),me=R.isVideoTexture!==!0,Le=se.__version===void 0||ee===!0,$=ae.dataReady;let Te=C(R,ze);ye(i.TEXTURE_CUBE_MAP,R);let fe;if(Ue){me&&Le&&t.texStorage2D(i.TEXTURE_CUBE_MAP,Te,q,ze.width,ze.height);for(let ve=0;ve<6;ve++){fe=Re[ve].mipmaps;for(let De=0;De<fe.length;De++){const Ae=fe[De];R.format!==Qt?We!==null?me?$&&t.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,De,0,0,Ae.width,Ae.height,We,Ae.data):t.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,De,q,Ae.width,Ae.height,0,Ae.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):me?$&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,De,0,0,Ae.width,Ae.height,We,Ee,Ae.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,De,q,Ae.width,Ae.height,0,We,Ee,Ae.data)}}}else{if(fe=R.mipmaps,me&&Le){fe.length>0&&Te++;const ve=Q(Re[0]);t.texStorage2D(i.TEXTURE_CUBE_MAP,Te,q,ve.width,ve.height)}for(let ve=0;ve<6;ve++)if(xe){me?$&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,0,0,Re[ve].width,Re[ve].height,We,Ee,Re[ve].data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,q,Re[ve].width,Re[ve].height,0,We,Ee,Re[ve].data);for(let De=0;De<fe.length;De++){const Xe=fe[De].image[ve].image;me?$&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,De+1,0,0,Xe.width,Xe.height,We,Ee,Xe.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,De+1,q,Xe.width,Xe.height,0,We,Ee,Xe.data)}}else{me?$&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,0,0,We,Ee,Re[ve]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,q,We,Ee,Re[ve]);for(let De=0;De<fe.length;De++){const Ae=fe[De];me?$&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,De+1,0,0,We,Ee,Ae.image[ve]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+ve,De+1,q,We,Ee,Ae.image[ve])}}}m(R)&&g(i.TEXTURE_CUBE_MAP),se.__version=ae.version,R.onUpdate&&R.onUpdate(R)}P.__version=R.version}function be(P,R,k,ee,ae,se){const Me=s.convert(k.format,k.colorSpace),_e=s.convert(k.type),Ie=b(k.internalFormat,Me,_e,k.colorSpace),Ue=n.get(R),xe=n.get(k);if(xe.__renderTarget=R,!Ue.__hasExternalTextures){const Re=Math.max(1,R.width>>se),ze=Math.max(1,R.height>>se);ae===i.TEXTURE_3D||ae===i.TEXTURE_2D_ARRAY?t.texImage3D(ae,se,Ie,Re,ze,R.depth,0,Me,_e,null):t.texImage2D(ae,se,Ie,Re,ze,0,Me,_e,null)}t.bindFramebuffer(i.FRAMEBUFFER,P),j(R)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,ee,ae,xe.__webglTexture,0,W(R)):(ae===i.TEXTURE_2D||ae>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&ae<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,ee,ae,xe.__webglTexture,se),t.bindFramebuffer(i.FRAMEBUFFER,null)}function Z(P,R,k){if(i.bindRenderbuffer(i.RENDERBUFFER,P),R.depthBuffer){const ee=R.depthTexture,ae=ee&&ee.isDepthTexture?ee.type:null,se=y(R.stencilBuffer,ae),Me=R.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,_e=W(R);j(R)?a.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,_e,se,R.width,R.height):k?i.renderbufferStorageMultisample(i.RENDERBUFFER,_e,se,R.width,R.height):i.renderbufferStorage(i.RENDERBUFFER,se,R.width,R.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,Me,i.RENDERBUFFER,P)}else{const ee=R.textures;for(let ae=0;ae<ee.length;ae++){const se=ee[ae],Me=s.convert(se.format,se.colorSpace),_e=s.convert(se.type),Ie=b(se.internalFormat,Me,_e,se.colorSpace),Ue=W(R);k&&j(R)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,Ue,Ie,R.width,R.height):j(R)?a.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,Ue,Ie,R.width,R.height):i.renderbufferStorage(i.RENDERBUFFER,Ie,R.width,R.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function K(P,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(i.FRAMEBUFFER,P),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ee=n.get(R.depthTexture);ee.__renderTarget=R,(!ee.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),X(R.depthTexture,0);const ae=ee.__webglTexture,se=W(R);if(R.depthTexture.format===So)j(R)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,ae,0,se):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,ae,0);else if(R.depthTexture.format===wo)j(R)?a.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,ae,0,se):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,ae,0);else throw new Error("Unknown depthTexture format")}function I(P){const R=n.get(P),k=P.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==P.depthTexture){const ee=P.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),ee){const ae=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,ee.removeEventListener("dispose",ae)};ee.addEventListener("dispose",ae),R.__depthDisposeCallback=ae}R.__boundDepthTexture=ee}if(P.depthTexture&&!R.__autoAllocateDepthBuffer){if(k)throw new Error("target.depthTexture not supported in Cube render targets");const ee=P.texture.mipmaps;ee&&ee.length>0?K(R.__webglFramebuffer[0],P):K(R.__webglFramebuffer,P)}else if(k){R.__webglDepthbuffer=[];for(let ee=0;ee<6;ee++)if(t.bindFramebuffer(i.FRAMEBUFFER,R.__webglFramebuffer[ee]),R.__webglDepthbuffer[ee]===void 0)R.__webglDepthbuffer[ee]=i.createRenderbuffer(),Z(R.__webglDepthbuffer[ee],P,!1);else{const ae=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,se=R.__webglDepthbuffer[ee];i.bindRenderbuffer(i.RENDERBUFFER,se),i.framebufferRenderbuffer(i.FRAMEBUFFER,ae,i.RENDERBUFFER,se)}}else{const ee=P.texture.mipmaps;if(ee&&ee.length>0?t.bindFramebuffer(i.FRAMEBUFFER,R.__webglFramebuffer[0]):t.bindFramebuffer(i.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=i.createRenderbuffer(),Z(R.__webglDepthbuffer,P,!1);else{const ae=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,se=R.__webglDepthbuffer;i.bindRenderbuffer(i.RENDERBUFFER,se),i.framebufferRenderbuffer(i.FRAMEBUFFER,ae,i.RENDERBUFFER,se)}}t.bindFramebuffer(i.FRAMEBUFFER,null)}function U(P,R,k){const ee=n.get(P);R!==void 0&&be(ee.__webglFramebuffer,P,P.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),k!==void 0&&I(P)}function G(P){const R=P.texture,k=n.get(P),ee=n.get(R);P.addEventListener("dispose",E);const ae=P.textures,se=P.isWebGLCubeRenderTarget===!0,Me=ae.length>1;if(Me||(ee.__webglTexture===void 0&&(ee.__webglTexture=i.createTexture()),ee.__version=R.version,o.memory.textures++),se){k.__webglFramebuffer=[];for(let _e=0;_e<6;_e++)if(R.mipmaps&&R.mipmaps.length>0){k.__webglFramebuffer[_e]=[];for(let Ie=0;Ie<R.mipmaps.length;Ie++)k.__webglFramebuffer[_e][Ie]=i.createFramebuffer()}else k.__webglFramebuffer[_e]=i.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){k.__webglFramebuffer=[];for(let _e=0;_e<R.mipmaps.length;_e++)k.__webglFramebuffer[_e]=i.createFramebuffer()}else k.__webglFramebuffer=i.createFramebuffer();if(Me)for(let _e=0,Ie=ae.length;_e<Ie;_e++){const Ue=n.get(ae[_e]);Ue.__webglTexture===void 0&&(Ue.__webglTexture=i.createTexture(),o.memory.textures++)}if(P.samples>0&&j(P)===!1){k.__webglMultisampledFramebuffer=i.createFramebuffer(),k.__webglColorRenderbuffer=[],t.bindFramebuffer(i.FRAMEBUFFER,k.__webglMultisampledFramebuffer);for(let _e=0;_e<ae.length;_e++){const Ie=ae[_e];k.__webglColorRenderbuffer[_e]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,k.__webglColorRenderbuffer[_e]);const Ue=s.convert(Ie.format,Ie.colorSpace),xe=s.convert(Ie.type),Re=b(Ie.internalFormat,Ue,xe,Ie.colorSpace,P.isXRRenderTarget===!0),ze=W(P);i.renderbufferStorageMultisample(i.RENDERBUFFER,ze,Re,P.width,P.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+_e,i.RENDERBUFFER,k.__webglColorRenderbuffer[_e])}i.bindRenderbuffer(i.RENDERBUFFER,null),P.depthBuffer&&(k.__webglDepthRenderbuffer=i.createRenderbuffer(),Z(k.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(i.FRAMEBUFFER,null)}}if(se){t.bindTexture(i.TEXTURE_CUBE_MAP,ee.__webglTexture),ye(i.TEXTURE_CUBE_MAP,R);for(let _e=0;_e<6;_e++)if(R.mipmaps&&R.mipmaps.length>0)for(let Ie=0;Ie<R.mipmaps.length;Ie++)be(k.__webglFramebuffer[_e][Ie],P,R,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+_e,Ie);else be(k.__webglFramebuffer[_e],P,R,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+_e,0);m(R)&&g(i.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Me){for(let _e=0,Ie=ae.length;_e<Ie;_e++){const Ue=ae[_e],xe=n.get(Ue);t.bindTexture(i.TEXTURE_2D,xe.__webglTexture),ye(i.TEXTURE_2D,Ue),be(k.__webglFramebuffer,P,Ue,i.COLOR_ATTACHMENT0+_e,i.TEXTURE_2D,0),m(Ue)&&g(i.TEXTURE_2D)}t.unbindTexture()}else{let _e=i.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(_e=P.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),t.bindTexture(_e,ee.__webglTexture),ye(_e,R),R.mipmaps&&R.mipmaps.length>0)for(let Ie=0;Ie<R.mipmaps.length;Ie++)be(k.__webglFramebuffer[Ie],P,R,i.COLOR_ATTACHMENT0,_e,Ie);else be(k.__webglFramebuffer,P,R,i.COLOR_ATTACHMENT0,_e,0);m(R)&&g(_e),t.unbindTexture()}P.depthBuffer&&I(P)}function D(P){const R=P.textures;for(let k=0,ee=R.length;k<ee;k++){const ae=R[k];if(m(ae)){const se=M(P),Me=n.get(ae).__webglTexture;t.bindTexture(se,Me),g(se),t.unbindTexture()}}}const L=[],T=[];function H(P){if(P.samples>0){if(j(P)===!1){const R=P.textures,k=P.width,ee=P.height;let ae=i.COLOR_BUFFER_BIT;const se=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Me=n.get(P),_e=R.length>1;if(_e)for(let Ue=0;Ue<R.length;Ue++)t.bindFramebuffer(i.FRAMEBUFFER,Me.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+Ue,i.RENDERBUFFER,null),t.bindFramebuffer(i.FRAMEBUFFER,Me.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+Ue,i.TEXTURE_2D,null,0);t.bindFramebuffer(i.READ_FRAMEBUFFER,Me.__webglMultisampledFramebuffer);const Ie=P.texture.mipmaps;Ie&&Ie.length>0?t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Me.__webglFramebuffer[0]):t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Me.__webglFramebuffer);for(let Ue=0;Ue<R.length;Ue++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(ae|=i.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(ae|=i.STENCIL_BUFFER_BIT)),_e){i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,Me.__webglColorRenderbuffer[Ue]);const xe=n.get(R[Ue]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,xe,0)}i.blitFramebuffer(0,0,k,ee,0,0,k,ee,ae,i.NEAREST),l===!0&&(L.length=0,T.length=0,L.push(i.COLOR_ATTACHMENT0+Ue),P.depthBuffer&&P.resolveDepthBuffer===!1&&(L.push(se),T.push(se),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,T)),i.invalidateFramebuffer(i.READ_FRAMEBUFFER,L))}if(t.bindFramebuffer(i.READ_FRAMEBUFFER,null),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),_e)for(let Ue=0;Ue<R.length;Ue++){t.bindFramebuffer(i.FRAMEBUFFER,Me.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+Ue,i.RENDERBUFFER,Me.__webglColorRenderbuffer[Ue]);const xe=n.get(R[Ue]).__webglTexture;t.bindFramebuffer(i.FRAMEBUFFER,Me.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+Ue,i.TEXTURE_2D,xe,0)}t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Me.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&l){const R=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT;i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[R])}}}function W(P){return Math.min(r.maxSamples,P.samples)}function j(P){const R=n.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function Y(P){const R=o.render.frame;u.get(P)!==R&&(u.set(P,R),P.update())}function re(P,R){const k=P.colorSpace,ee=P.format,ae=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||k!==an&&k!==Pi&&(at.getTransfer(k)===yt?(ee!==Qt||ae!==vi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",k)),R}function Q(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(c.width=P.naturalWidth||P.width,c.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(c.width=P.displayWidth,c.height=P.displayHeight):(c.width=P.width,c.height=P.height),c}this.allocateTextureUnit=B,this.resetTextureUnits=N,this.setTexture2D=X,this.setTexture2DArray=z,this.setTexture3D=te,this.setTextureCube=J,this.rebindTextures=U,this.setupRenderTarget=G,this.updateRenderTargetMipmap=D,this.updateMultisampleRenderTarget=H,this.setupDepthRenderbuffer=I,this.setupFrameBufferTexture=be,this.useMultisampledRTT=j}function fy(i,e){function t(n,r=Pi){let s;const o=at.getTransfer(r);if(n===vi)return i.UNSIGNED_BYTE;if(n===Hu)return i.UNSIGNED_SHORT_4_4_4_4;if(n===Gu)return i.UNSIGNED_SHORT_5_5_5_1;if(n===ep)return i.UNSIGNED_INT_5_9_9_9_REV;if(n===Jd)return i.BYTE;if(n===Qd)return i.SHORT;if(n===bo)return i.UNSIGNED_SHORT;if(n===Vu)return i.INT;if(n===or)return i.UNSIGNED_INT;if(n===on)return i.FLOAT;if(n===hi)return i.HALF_FLOAT;if(n===tp)return i.ALPHA;if(n===np)return i.RGB;if(n===Qt)return i.RGBA;if(n===So)return i.DEPTH_COMPONENT;if(n===wo)return i.DEPTH_STENCIL;if(n===Wu)return i.RED;if(n===il)return i.RED_INTEGER;if(n===ip)return i.RG;if(n===Xu)return i.RG_INTEGER;if(n===ju)return i.RGBA_INTEGER;if(n===_a||n===xa||n===ya||n===ba)if(o===yt)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===_a)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===xa)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===ya)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===ba)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===_a)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===xa)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===ya)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===ba)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===jc||n===Yc||n===qc||n===$c)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===jc)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Yc)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===qc)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===$c)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Kc||n===Zc||n===Jc)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Kc||n===Zc)return o===yt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===Jc)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Qc||n===eu||n===tu||n===nu||n===iu||n===ru||n===su||n===ou||n===au||n===lu||n===cu||n===uu||n===hu||n===fu)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===Qc)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===eu)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===tu)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===nu)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===iu)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===ru)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===su)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===ou)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===au)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===lu)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===cu)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===uu)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===hu)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===fu)return o===yt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Ma||n===du||n===pu)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===Ma)return o===yt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===du)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===pu)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===rp||n===mu||n===gu||n===vu)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===Ma)return s.COMPRESSED_RED_RGTC1_EXT;if(n===mu)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===gu)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===vu)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Mo?i.UNSIGNED_INT_24_8:i[n]!==void 0?i[n]:null}return{convert:t}}const zI=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,kI=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class VI{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const r=new At,s=e.properties.get(r);s.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=r}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new gn({vertexShader:zI,fragmentShader:kI,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new wt(new kr(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class HI extends bi{constructor(e,t){super();const n=this;let r=null,s=1,o=null,a="local-floor",l=1,c=null,u=null,h=null,f=null,d=null,p=null;const v=new VI,m=t.getContextAttributes();let g=null,M=null;const b=[],y=[],C=new pe;let w=null;const E=new St;E.viewport=new it;const S=new St;S.viewport=new it;const x=[E,S],_=new Jx;let A=null,N=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(le){let ge=b[le];return ge===void 0&&(ge=new Sc,b[le]=ge),ge.getTargetRaySpace()},this.getControllerGrip=function(le){let ge=b[le];return ge===void 0&&(ge=new Sc,b[le]=ge),ge.getGripSpace()},this.getHand=function(le){let ge=b[le];return ge===void 0&&(ge=new Sc,b[le]=ge),ge.getHandSpace()};function B(le){const ge=y.indexOf(le.inputSource);if(ge===-1)return;const be=b[ge];be!==void 0&&(be.update(le.inputSource,le.frame,c||o),be.dispatchEvent({type:le.type,data:le.inputSource}))}function V(){r.removeEventListener("select",B),r.removeEventListener("selectstart",B),r.removeEventListener("selectend",B),r.removeEventListener("squeeze",B),r.removeEventListener("squeezestart",B),r.removeEventListener("squeezeend",B),r.removeEventListener("end",V),r.removeEventListener("inputsourceschange",X);for(let le=0;le<b.length;le++){const ge=y[le];ge!==null&&(y[le]=null,b[le].disconnect(ge))}A=null,N=null,v.reset(),e.setRenderTarget(g),d=null,f=null,h=null,r=null,M=null,Ce.stop(),n.isPresenting=!1,e.setPixelRatio(w),e.setSize(C.width,C.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(le){s=le,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(le){a=le,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(le){c=le},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(le){if(r=le,r!==null){if(g=e.getRenderTarget(),r.addEventListener("select",B),r.addEventListener("selectstart",B),r.addEventListener("selectend",B),r.addEventListener("squeeze",B),r.addEventListener("squeezestart",B),r.addEventListener("squeezeend",B),r.addEventListener("end",V),r.addEventListener("inputsourceschange",X),m.xrCompatible!==!0&&await t.makeXRCompatible(),w=e.getPixelRatio(),e.getSize(C),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let be=null,Z=null,K=null;m.depth&&(K=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,be=m.stencil?wo:So,Z=m.stencil?Mo:or);const I={colorFormat:t.RGBA8,depthFormat:K,scaleFactor:s};h=new XRWebGLBinding(r,t),f=h.createProjectionLayer(I),r.updateRenderState({layers:[f]}),e.setPixelRatio(1),e.setSize(f.textureWidth,f.textureHeight,!1),M=new _i(f.textureWidth,f.textureHeight,{format:Qt,type:vi,depthTexture:new nh(f.textureWidth,f.textureHeight,Z,void 0,void 0,void 0,void 0,void 0,void 0,be),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}else{const be={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,t,be),r.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),M=new _i(d.framebufferWidth,d.framebufferHeight,{format:Qt,type:vi,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}M.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await r.requestReferenceSpace(a),Ce.setContext(r),Ce.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode},this.getDepthTexture=function(){return v.getDepthTexture()};function X(le){for(let ge=0;ge<le.removed.length;ge++){const be=le.removed[ge],Z=y.indexOf(be);Z>=0&&(y[Z]=null,b[Z].disconnect(be))}for(let ge=0;ge<le.added.length;ge++){const be=le.added[ge];let Z=y.indexOf(be);if(Z===-1){for(let I=0;I<b.length;I++)if(I>=y.length){y.push(be),Z=I;break}else if(y[I]===null){y[I]=be,Z=I;break}if(Z===-1)break}const K=b[Z];K&&K.connect(be)}}const z=new F,te=new F;function J(le,ge,be){z.setFromMatrixPosition(ge.matrixWorld),te.setFromMatrixPosition(be.matrixWorld);const Z=z.distanceTo(te),K=ge.projectionMatrix.elements,I=be.projectionMatrix.elements,U=K[14]/(K[10]-1),G=K[14]/(K[10]+1),D=(K[9]+1)/K[5],L=(K[9]-1)/K[5],T=(K[8]-1)/K[0],H=(I[8]+1)/I[0],W=U*T,j=U*H,Y=Z/(-T+H),re=Y*-T;if(ge.matrixWorld.decompose(le.position,le.quaternion,le.scale),le.translateX(re),le.translateZ(Y),le.matrixWorld.compose(le.position,le.quaternion,le.scale),le.matrixWorldInverse.copy(le.matrixWorld).invert(),K[10]===-1)le.projectionMatrix.copy(ge.projectionMatrix),le.projectionMatrixInverse.copy(ge.projectionMatrixInverse);else{const Q=U+Y,P=G+Y,R=W-re,k=j+(Z-re),ee=D*G/P*Q,ae=L*G/P*Q;le.projectionMatrix.makePerspective(R,k,ee,ae,Q,P),le.projectionMatrixInverse.copy(le.projectionMatrix).invert()}}function ue(le,ge){ge===null?le.matrixWorld.copy(le.matrix):le.matrixWorld.multiplyMatrices(ge.matrixWorld,le.matrix),le.matrixWorldInverse.copy(le.matrixWorld).invert()}this.updateCamera=function(le){if(r===null)return;let ge=le.near,be=le.far;v.texture!==null&&(v.depthNear>0&&(ge=v.depthNear),v.depthFar>0&&(be=v.depthFar)),_.near=S.near=E.near=ge,_.far=S.far=E.far=be,(A!==_.near||N!==_.far)&&(r.updateRenderState({depthNear:_.near,depthFar:_.far}),A=_.near,N=_.far),E.layers.mask=le.layers.mask|2,S.layers.mask=le.layers.mask|4,_.layers.mask=E.layers.mask|S.layers.mask;const Z=le.parent,K=_.cameras;ue(_,Z);for(let I=0;I<K.length;I++)ue(K[I],Z);K.length===2?J(_,E,S):_.projectionMatrix.copy(E.projectionMatrix),de(le,_,Z)};function de(le,ge,be){be===null?le.matrix.copy(ge.matrixWorld):(le.matrix.copy(be.matrixWorld),le.matrix.invert(),le.matrix.multiply(ge.matrixWorld)),le.matrix.decompose(le.position,le.quaternion,le.scale),le.updateMatrixWorld(!0),le.projectionMatrix.copy(ge.projectionMatrix),le.projectionMatrixInverse.copy(ge.projectionMatrixInverse),le.isPerspectiveCamera&&(le.fov=To*2*Math.atan(1/le.projectionMatrix.elements[5]),le.zoom=1)}this.getCamera=function(){return _},this.getFoveation=function(){if(!(f===null&&d===null))return l},this.setFoveation=function(le){l=le,f!==null&&(f.fixedFoveation=le),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=le)},this.hasDepthSensing=function(){return v.texture!==null},this.getDepthSensingMesh=function(){return v.getMesh(_)};let oe=null;function ye(le,ge){if(u=ge.getViewerPose(c||o),p=ge,u!==null){const be=u.views;d!==null&&(e.setRenderTargetFramebuffer(M,d.framebuffer),e.setRenderTarget(M));let Z=!1;be.length!==_.cameras.length&&(_.cameras.length=0,Z=!0);for(let U=0;U<be.length;U++){const G=be[U];let D=null;if(d!==null)D=d.getViewport(G);else{const T=h.getViewSubImage(f,G);D=T.viewport,U===0&&(e.setRenderTargetTextures(M,T.colorTexture,T.depthStencilTexture),e.setRenderTarget(M))}let L=x[U];L===void 0&&(L=new St,L.layers.enable(U),L.viewport=new it,x[U]=L),L.matrix.fromArray(G.transform.matrix),L.matrix.decompose(L.position,L.quaternion,L.scale),L.projectionMatrix.fromArray(G.projectionMatrix),L.projectionMatrixInverse.copy(L.projectionMatrix).invert(),L.viewport.set(D.x,D.y,D.width,D.height),U===0&&(_.matrix.copy(L.matrix),_.matrix.decompose(_.position,_.quaternion,_.scale)),Z===!0&&_.cameras.push(L)}const K=r.enabledFeatures;if(K&&K.includes("depth-sensing")&&r.depthUsage=="gpu-optimized"&&h){const U=h.getDepthInformation(be[0]);U&&U.isValid&&U.texture&&v.init(e,U,r.renderState)}}for(let be=0;be<b.length;be++){const Z=y[be],K=b[be];Z!==null&&K!==void 0&&K.update(Z,ge,c||o)}oe&&oe(le,ge),ge.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ge}),p=null}const Ce=new ay;Ce.setAnimationLoop(ye),this.setAnimationLoop=function(le){oe=le},this.dispose=function(){}}}const rs=new In,GI=new ke;function WI(i,e){function t(m,g){m.matrixAutoUpdate===!0&&m.updateMatrix(),g.value.copy(m.matrix)}function n(m,g){g.color.getRGB(m.fogColor.value,hx(i)),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function r(m,g,M,b,y){g.isMeshBasicMaterial||g.isMeshLambertMaterial?s(m,g):g.isMeshToonMaterial?(s(m,g),h(m,g)):g.isMeshPhongMaterial?(s(m,g),u(m,g)):g.isMeshStandardMaterial?(s(m,g),f(m,g),g.isMeshPhysicalMaterial&&d(m,g,y)):g.isMeshMatcapMaterial?(s(m,g),p(m,g)):g.isMeshDepthMaterial?s(m,g):g.isMeshDistanceMaterial?(s(m,g),v(m,g)):g.isMeshNormalMaterial?s(m,g):g.isLineBasicMaterial?(o(m,g),g.isLineDashedMaterial&&a(m,g)):g.isPointsMaterial?l(m,g,M,b):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function s(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.bumpMap&&(m.bumpMap.value=g.bumpMap,t(g.bumpMap,m.bumpMapTransform),m.bumpScale.value=g.bumpScale,g.side===pn&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,t(g.normalMap,m.normalMapTransform),m.normalScale.value.copy(g.normalScale),g.side===pn&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,t(g.displacementMap,m.displacementMapTransform),m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,m.emissiveMapTransform)),g.specularMap&&(m.specularMap.value=g.specularMap,t(g.specularMap,m.specularMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const M=e.get(g),b=M.envMap,y=M.envMapRotation;b&&(m.envMap.value=b,rs.copy(y),rs.x*=-1,rs.y*=-1,rs.z*=-1,b.isCubeTexture&&b.isRenderTargetTexture===!1&&(rs.y*=-1,rs.z*=-1),m.envMapRotation.value.setFromMatrix4(GI.makeRotationFromEuler(rs)),m.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap&&(m.lightMap.value=g.lightMap,m.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,m.lightMapTransform)),g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,m.aoMapTransform))}function o(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform))}function a(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function l(m,g,M,b){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*M,m.scale.value=b*.5,g.map&&(m.map.value=g.map,t(g.map,m.uvTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function u(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function h(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function f(m,g){m.metalness.value=g.metalness,g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,m.metalnessMapTransform)),m.roughness.value=g.roughness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,m.roughnessMapTransform)),g.envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function d(m,g,M){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,m.sheenColorMapTransform)),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,m.sheenRoughnessMapTransform))),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,m.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(m.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===pn&&m.clearcoatNormalScale.value.negate())),g.dispersion>0&&(m.dispersion.value=g.dispersion),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,m.iridescenceMapTransform)),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=M.texture,m.transmissionSamplerSize.value.set(M.width,M.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,m.transmissionMapTransform)),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(m.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(m.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,m.specularColorMapTransform)),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function v(m,g){const M=e.get(g).light;m.referencePosition.value.setFromMatrixPosition(M.matrixWorld),m.nearDistance.value=M.shadow.camera.near,m.farDistance.value=M.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:r}}function XI(i,e,t,n){let r={},s={},o=[];const a=i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS);function l(M,b){const y=b.program;n.uniformBlockBinding(M,y)}function c(M,b){let y=r[M.id];y===void 0&&(p(M),y=u(M),r[M.id]=y,M.addEventListener("dispose",m));const C=b.program;n.updateUBOMapping(M,C);const w=e.render.frame;s[M.id]!==w&&(f(M),s[M.id]=w)}function u(M){const b=h();M.__bindingPointIndex=b;const y=i.createBuffer(),C=M.__size,w=M.usage;return i.bindBuffer(i.UNIFORM_BUFFER,y),i.bufferData(i.UNIFORM_BUFFER,C,w),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,b,y),y}function h(){for(let M=0;M<a;M++)if(o.indexOf(M)===-1)return o.push(M),M;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(M){const b=r[M.id],y=M.uniforms,C=M.__cache;i.bindBuffer(i.UNIFORM_BUFFER,b);for(let w=0,E=y.length;w<E;w++){const S=Array.isArray(y[w])?y[w]:[y[w]];for(let x=0,_=S.length;x<_;x++){const A=S[x];if(d(A,w,x,C)===!0){const N=A.__offset,B=Array.isArray(A.value)?A.value:[A.value];let V=0;for(let X=0;X<B.length;X++){const z=B[X],te=v(z);typeof z=="number"||typeof z=="boolean"?(A.__data[0]=z,i.bufferSubData(i.UNIFORM_BUFFER,N+V,A.__data)):z.isMatrix3?(A.__data[0]=z.elements[0],A.__data[1]=z.elements[1],A.__data[2]=z.elements[2],A.__data[3]=0,A.__data[4]=z.elements[3],A.__data[5]=z.elements[4],A.__data[6]=z.elements[5],A.__data[7]=0,A.__data[8]=z.elements[6],A.__data[9]=z.elements[7],A.__data[10]=z.elements[8],A.__data[11]=0):(z.toArray(A.__data,V),V+=te.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,N,A.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function d(M,b,y,C){const w=M.value,E=b+"_"+y;if(C[E]===void 0)return typeof w=="number"||typeof w=="boolean"?C[E]=w:C[E]=w.clone(),!0;{const S=C[E];if(typeof w=="number"||typeof w=="boolean"){if(S!==w)return C[E]=w,!0}else if(S.equals(w)===!1)return S.copy(w),!0}return!1}function p(M){const b=M.uniforms;let y=0;const C=16;for(let E=0,S=b.length;E<S;E++){const x=Array.isArray(b[E])?b[E]:[b[E]];for(let _=0,A=x.length;_<A;_++){const N=x[_],B=Array.isArray(N.value)?N.value:[N.value];for(let V=0,X=B.length;V<X;V++){const z=B[V],te=v(z),J=y%C,ue=J%te.boundary,de=J+ue;y+=ue,de!==0&&C-de<te.storage&&(y+=C-de),N.__data=new Float32Array(te.storage/Float32Array.BYTES_PER_ELEMENT),N.__offset=y,y+=te.storage}}}const w=y%C;return w>0&&(y+=C-w),M.__size=y,M.__cache={},this}function v(M){const b={boundary:0,storage:0};return typeof M=="number"||typeof M=="boolean"?(b.boundary=4,b.storage=4):M.isVector2?(b.boundary=8,b.storage=8):M.isVector3||M.isColor?(b.boundary=16,b.storage=12):M.isVector4?(b.boundary=16,b.storage=16):M.isMatrix3?(b.boundary=48,b.storage=48):M.isMatrix4?(b.boundary=64,b.storage=64):M.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",M),b}function m(M){const b=M.target;b.removeEventListener("dispose",m);const y=o.indexOf(b.__bindingPointIndex);o.splice(y,1),i.deleteBuffer(r[b.id]),delete r[b.id],delete s[b.id]}function g(){for(const M in r)i.deleteBuffer(r[M]);o=[],r={},s={}}return{bind:l,update:c,dispose:g}}class Aa{constructor(e={}){const{canvas:t=lx(),context:n=null,depth:r=!0,stencil:s=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reverseDepthBuffer:f=!1}=e;this.isWebGLRenderer=!0;let d;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");d=n.getContextAttributes().alpha}else d=o;const p=new Uint32Array(4),v=new Int32Array(4);let m=null,g=null;const M=[],b=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=gi,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const y=this;let C=!1;this._outputColorSpace=Bt;let w=0,E=0,S=null,x=-1,_=null;const A=new it,N=new it;let B=null;const V=new we(0);let X=0,z=t.width,te=t.height,J=1,ue=null,de=null;const oe=new it(0,0,z,te),ye=new it(0,0,z,te);let Ce=!1;const le=new Oo;let ge=!1,be=!1;const Z=new ke,K=new ke,I=new F,U=new it,G={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let D=!1;function L(){return S===null?J:1}let T=n;function H(O,ne){return t.getContext(O,ne)}try{const O={alpha:!0,depth:r,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Do}`),t.addEventListener("webglcontextlost",ve,!1),t.addEventListener("webglcontextrestored",De,!1),t.addEventListener("webglcontextcreationerror",Ae,!1),T===null){const ne="webgl2";if(T=H(ne,O),T===null)throw H(ne)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(O){throw console.error("THREE.WebGLRenderer: "+O.message),O}let W,j,Y,re,Q,P,R,k,ee,ae,se,Me,_e,Ie,Ue,xe,Re,ze,We,Ee,q,me,Le,$;function Te(){W=new iC(T),W.init(),me=new fy(T,W),j=new KR(T,W,e,me),Y=new FI(T,W),j.reverseDepthBuffer&&f&&Y.buffers.depth.setReversed(!0),re=new oC(T),Q=new wI,P=new BI(T,W,Y,Q,j,me,re),R=new JR(y),k=new nC(y),ee=new f1(T),Le=new qR(T,ee),ae=new rC(T,ee,re,Le),se=new lC(T,ae,ee,re),We=new aC(T,j,P),xe=new ZR(Q),Me=new SI(y,R,k,W,j,Le,xe),_e=new WI(y,Q),Ie=new EI,Ue=new LI(W),ze=new YR(y,R,k,Y,se,d,l),Re=new UI(y,se,j),$=new XI(T,re,j,Y),Ee=new $R(T,W,re),q=new sC(T,W,re),re.programs=Me.programs,y.capabilities=j,y.extensions=W,y.properties=Q,y.renderLists=Ie,y.shadowMap=Re,y.state=Y,y.info=re}Te();const fe=new HI(y,T);this.xr=fe,this.getContext=function(){return T},this.getContextAttributes=function(){return T.getContextAttributes()},this.forceContextLoss=function(){const O=W.get("WEBGL_lose_context");O&&O.loseContext()},this.forceContextRestore=function(){const O=W.get("WEBGL_lose_context");O&&O.restoreContext()},this.getPixelRatio=function(){return J},this.setPixelRatio=function(O){O!==void 0&&(J=O,this.setSize(z,te,!1))},this.getSize=function(O){return O.set(z,te)},this.setSize=function(O,ne,ce=!0){if(fe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}z=O,te=ne,t.width=Math.floor(O*J),t.height=Math.floor(ne*J),ce===!0&&(t.style.width=O+"px",t.style.height=ne+"px"),this.setViewport(0,0,O,ne)},this.getDrawingBufferSize=function(O){return O.set(z*J,te*J).floor()},this.setDrawingBufferSize=function(O,ne,ce){z=O,te=ne,J=ce,t.width=Math.floor(O*ce),t.height=Math.floor(ne*ce),this.setViewport(0,0,O,ne)},this.getCurrentViewport=function(O){return O.copy(A)},this.getViewport=function(O){return O.copy(oe)},this.setViewport=function(O,ne,ce,he){O.isVector4?oe.set(O.x,O.y,O.z,O.w):oe.set(O,ne,ce,he),Y.viewport(A.copy(oe).multiplyScalar(J).round())},this.getScissor=function(O){return O.copy(ye)},this.setScissor=function(O,ne,ce,he){O.isVector4?ye.set(O.x,O.y,O.z,O.w):ye.set(O,ne,ce,he),Y.scissor(N.copy(ye).multiplyScalar(J).round())},this.getScissorTest=function(){return Ce},this.setScissorTest=function(O){Y.setScissorTest(Ce=O)},this.setOpaqueSort=function(O){ue=O},this.setTransparentSort=function(O){de=O},this.getClearColor=function(O){return O.copy(ze.getClearColor())},this.setClearColor=function(){ze.setClearColor(...arguments)},this.getClearAlpha=function(){return ze.getClearAlpha()},this.setClearAlpha=function(){ze.setClearAlpha(...arguments)},this.clear=function(O=!0,ne=!0,ce=!0){let he=0;if(O){let ie=!1;if(S!==null){const Se=S.texture.format;ie=Se===ju||Se===Xu||Se===il}if(ie){const Se=S.texture.type,Ne=Se===vi||Se===or||Se===bo||Se===Mo||Se===Hu||Se===Gu,Oe=ze.getClearColor(),Be=ze.getClearAlpha(),$e=Oe.r,Ye=Oe.g,He=Oe.b;Ne?(p[0]=$e,p[1]=Ye,p[2]=He,p[3]=Be,T.clearBufferuiv(T.COLOR,0,p)):(v[0]=$e,v[1]=Ye,v[2]=He,v[3]=Be,T.clearBufferiv(T.COLOR,0,v))}else he|=T.COLOR_BUFFER_BIT}ne&&(he|=T.DEPTH_BUFFER_BIT),ce&&(he|=T.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),T.clear(he)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ve,!1),t.removeEventListener("webglcontextrestored",De,!1),t.removeEventListener("webglcontextcreationerror",Ae,!1),ze.dispose(),Ie.dispose(),Ue.dispose(),Q.dispose(),R.dispose(),k.dispose(),se.dispose(),Le.dispose(),$.dispose(),Me.dispose(),fe.dispose(),fe.removeEventListener("sessionstart",qp),fe.removeEventListener("sessionend",$p),Hr.stop()};function ve(O){O.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),C=!0}function De(){console.log("THREE.WebGLRenderer: Context Restored."),C=!1;const O=re.autoReset,ne=Re.enabled,ce=Re.autoUpdate,he=Re.needsUpdate,ie=Re.type;Te(),re.autoReset=O,Re.enabled=ne,Re.autoUpdate=ce,Re.needsUpdate=he,Re.type=ie}function Ae(O){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",O.statusMessage)}function Xe(O){const ne=O.target;ne.removeEventListener("dispose",Xe),bt(ne)}function bt(O){Nt(O),Q.remove(O)}function Nt(O){const ne=Q.get(O).programs;ne!==void 0&&(ne.forEach(function(ce){Me.releaseProgram(ce)}),O.isShaderMaterial&&Me.releaseShaderCache(O))}this.renderBufferDirect=function(O,ne,ce,he,ie,Se){ne===null&&(ne=G);const Ne=ie.isMesh&&ie.matrixWorld.determinant()<0,Oe=cb(O,ne,ce,he,ie);Y.setMaterial(he,Ne);let Be=ce.index,$e=1;if(he.wireframe===!0){if(Be=ae.getWireframeAttribute(ce),Be===void 0)return;$e=2}const Ye=ce.drawRange,He=ce.attributes.position;let ht=Ye.start*$e,mt=(Ye.start+Ye.count)*$e;Se!==null&&(ht=Math.max(ht,Se.start*$e),mt=Math.min(mt,(Se.start+Se.count)*$e)),Be!==null?(ht=Math.max(ht,0),mt=Math.min(mt,Be.count)):He!=null&&(ht=Math.max(ht,0),mt=Math.min(mt,He.count));const Gt=mt-ht;if(Gt<0||Gt===1/0)return;Le.setup(ie,he,Oe,ce,Be);let Ut,dt=Ee;if(Be!==null&&(Ut=ee.get(Be),dt=q,dt.setIndex(Ut)),ie.isMesh)he.wireframe===!0?(Y.setLineWidth(he.wireframeLinewidth*L()),dt.setMode(T.LINES)):dt.setMode(T.TRIANGLES);else if(ie.isLine){let je=he.linewidth;je===void 0&&(je=1),Y.setLineWidth(je*L()),ie.isLineSegments?dt.setMode(T.LINES):ie.isLineLoop?dt.setMode(T.LINE_LOOP):dt.setMode(T.LINE_STRIP)}else ie.isPoints?dt.setMode(T.POINTS):ie.isSprite&&dt.setMode(T.TRIANGLES);if(ie.isBatchedMesh)if(ie._multiDrawInstances!==null)Mc("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),dt.renderMultiDrawInstances(ie._multiDrawStarts,ie._multiDrawCounts,ie._multiDrawCount,ie._multiDrawInstances);else if(W.get("WEBGL_multi_draw"))dt.renderMultiDraw(ie._multiDrawStarts,ie._multiDrawCounts,ie._multiDrawCount);else{const je=ie._multiDrawStarts,nn=ie._multiDrawCounts,gt=ie._multiDrawCount,si=Be?ee.get(Be).bytesPerElement:1,ks=Q.get(he).currentProgram.getUniforms();for(let Bn=0;Bn<gt;Bn++)ks.setValue(T,"_gl_DrawID",Bn),dt.render(je[Bn]/si,nn[Bn])}else if(ie.isInstancedMesh)dt.renderInstances(ht,Gt,ie.count);else if(ce.isInstancedBufferGeometry){const je=ce._maxInstanceCount!==void 0?ce._maxInstanceCount:1/0,nn=Math.min(ce.instanceCount,je);dt.renderInstances(ht,Gt,nn)}else dt.render(ht,Gt)};function ut(O,ne,ce){O.transparent===!0&&O.side===En&&O.forceSinglePass===!1?(O.side=pn,O.needsUpdate=!0,vl(O,ne,ce),O.side=Fi,O.needsUpdate=!0,vl(O,ne,ce),O.side=En):vl(O,ne,ce)}this.compile=function(O,ne,ce=null){ce===null&&(ce=O),g=Ue.get(ce),g.init(ne),b.push(g),ce.traverseVisible(function(ie){ie.isLight&&ie.layers.test(ne.layers)&&(g.pushLight(ie),ie.castShadow&&g.pushShadow(ie))}),O!==ce&&O.traverseVisible(function(ie){ie.isLight&&ie.layers.test(ne.layers)&&(g.pushLight(ie),ie.castShadow&&g.pushShadow(ie))}),g.setupLights();const he=new Set;return O.traverse(function(ie){if(!(ie.isMesh||ie.isPoints||ie.isLine||ie.isSprite))return;const Se=ie.material;if(Se)if(Array.isArray(Se))for(let Ne=0;Ne<Se.length;Ne++){const Oe=Se[Ne];ut(Oe,ce,ie),he.add(Oe)}else ut(Se,ce,ie),he.add(Se)}),g=b.pop(),he},this.compileAsync=function(O,ne,ce=null){const he=this.compile(O,ne,ce);return new Promise(ie=>{function Se(){if(he.forEach(function(Ne){Q.get(Ne).currentProgram.isReady()&&he.delete(Ne)}),he.size===0){ie(O);return}setTimeout(Se,10)}W.get("KHR_parallel_shader_compile")!==null?Se():setTimeout(Se,10)})};let ln=null;function ki(O){ln&&ln(O)}function qp(){Hr.stop()}function $p(){Hr.start()}const Hr=new ay;Hr.setAnimationLoop(ki),typeof self<"u"&&Hr.setContext(self),this.setAnimationLoop=function(O){ln=O,fe.setAnimationLoop(O),O===null?Hr.stop():Hr.start()},fe.addEventListener("sessionstart",qp),fe.addEventListener("sessionend",$p),this.render=function(O,ne){if(ne!==void 0&&ne.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(C===!0)return;if(O.matrixWorldAutoUpdate===!0&&O.updateMatrixWorld(),ne.parent===null&&ne.matrixWorldAutoUpdate===!0&&ne.updateMatrixWorld(),fe.enabled===!0&&fe.isPresenting===!0&&(fe.cameraAutoUpdate===!0&&fe.updateCamera(ne),ne=fe.getCamera()),O.isScene===!0&&O.onBeforeRender(y,O,ne,S),g=Ue.get(O,b.length),g.init(ne),b.push(g),K.multiplyMatrices(ne.projectionMatrix,ne.matrixWorldInverse),le.setFromProjectionMatrix(K),be=this.localClippingEnabled,ge=xe.init(this.clippingPlanes,be),m=Ie.get(O,M.length),m.init(),M.push(m),fe.enabled===!0&&fe.isPresenting===!0){const Se=y.xr.getDepthSensingMesh();Se!==null&&Th(Se,ne,-1/0,y.sortObjects)}Th(O,ne,0,y.sortObjects),m.finish(),y.sortObjects===!0&&m.sort(ue,de),D=fe.enabled===!1||fe.isPresenting===!1||fe.hasDepthSensing()===!1,D&&ze.addToRenderList(m,O),this.info.render.frame++,ge===!0&&xe.beginShadows();const ce=g.state.shadowsArray;Re.render(ce,O,ne),ge===!0&&xe.endShadows(),this.info.autoReset===!0&&this.info.reset();const he=m.opaque,ie=m.transmissive;if(g.setupLights(),ne.isArrayCamera){const Se=ne.cameras;if(ie.length>0)for(let Ne=0,Oe=Se.length;Ne<Oe;Ne++){const Be=Se[Ne];Zp(he,ie,O,Be)}D&&ze.render(O);for(let Ne=0,Oe=Se.length;Ne<Oe;Ne++){const Be=Se[Ne];Kp(m,O,Be,Be.viewport)}}else ie.length>0&&Zp(he,ie,O,ne),D&&ze.render(O),Kp(m,O,ne);S!==null&&E===0&&(P.updateMultisampleRenderTarget(S),P.updateRenderTargetMipmap(S)),O.isScene===!0&&O.onAfterRender(y,O,ne),Le.resetDefaultState(),x=-1,_=null,b.pop(),b.length>0?(g=b[b.length-1],ge===!0&&xe.setGlobalState(y.clippingPlanes,g.state.camera)):g=null,M.pop(),M.length>0?m=M[M.length-1]:m=null};function Th(O,ne,ce,he){if(O.visible===!1)return;if(O.layers.test(ne.layers)){if(O.isGroup)ce=O.renderOrder;else if(O.isLOD)O.autoUpdate===!0&&O.update(ne);else if(O.isLight)g.pushLight(O),O.castShadow&&g.pushShadow(O);else if(O.isSprite){if(!O.frustumCulled||le.intersectsSprite(O)){he&&U.setFromMatrixPosition(O.matrixWorld).applyMatrix4(K);const Ne=se.update(O),Oe=O.material;Oe.visible&&m.push(O,Ne,Oe,ce,U.z,null)}}else if((O.isMesh||O.isLine||O.isPoints)&&(!O.frustumCulled||le.intersectsObject(O))){const Ne=se.update(O),Oe=O.material;if(he&&(O.boundingSphere!==void 0?(O.boundingSphere===null&&O.computeBoundingSphere(),U.copy(O.boundingSphere.center)):(Ne.boundingSphere===null&&Ne.computeBoundingSphere(),U.copy(Ne.boundingSphere.center)),U.applyMatrix4(O.matrixWorld).applyMatrix4(K)),Array.isArray(Oe)){const Be=Ne.groups;for(let $e=0,Ye=Be.length;$e<Ye;$e++){const He=Be[$e],ht=Oe[He.materialIndex];ht&&ht.visible&&m.push(O,Ne,ht,ce,U.z,He)}}else Oe.visible&&m.push(O,Ne,Oe,ce,U.z,null)}}const Se=O.children;for(let Ne=0,Oe=Se.length;Ne<Oe;Ne++)Th(Se[Ne],ne,ce,he)}function Kp(O,ne,ce,he){const ie=O.opaque,Se=O.transmissive,Ne=O.transparent;g.setupLightsView(ce),ge===!0&&xe.setGlobalState(y.clippingPlanes,ce),he&&Y.viewport(A.copy(he)),ie.length>0&&gl(ie,ne,ce),Se.length>0&&gl(Se,ne,ce),Ne.length>0&&gl(Ne,ne,ce),Y.buffers.depth.setTest(!0),Y.buffers.depth.setMask(!0),Y.buffers.color.setMask(!0),Y.setPolygonOffset(!1)}function Zp(O,ne,ce,he){if((ce.isScene===!0?ce.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[he.id]===void 0&&(g.state.transmissionRenderTarget[he.id]=new _i(1,1,{generateMipmaps:!0,type:W.has("EXT_color_buffer_half_float")||W.has("EXT_color_buffer_float")?hi:vi,minFilter:Xn,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:at.workingColorSpace}));const Se=g.state.transmissionRenderTarget[he.id],Ne=he.viewport||A;Se.setSize(Ne.z*y.transmissionResolutionScale,Ne.w*y.transmissionResolutionScale);const Oe=y.getRenderTarget();y.setRenderTarget(Se),y.getClearColor(V),X=y.getClearAlpha(),X<1&&y.setClearColor(16777215,.5),y.clear(),D&&ze.render(ce);const Be=y.toneMapping;y.toneMapping=gi;const $e=he.viewport;if(he.viewport!==void 0&&(he.viewport=void 0),g.setupLightsView(he),ge===!0&&xe.setGlobalState(y.clippingPlanes,he),gl(O,ce,he),P.updateMultisampleRenderTarget(Se),P.updateRenderTargetMipmap(Se),W.has("WEBGL_multisampled_render_to_texture")===!1){let Ye=!1;for(let He=0,ht=ne.length;He<ht;He++){const mt=ne[He],Gt=mt.object,Ut=mt.geometry,dt=mt.material,je=mt.group;if(dt.side===En&&Gt.layers.test(he.layers)){const nn=dt.side;dt.side=pn,dt.needsUpdate=!0,Jp(Gt,ce,he,Ut,dt,je),dt.side=nn,dt.needsUpdate=!0,Ye=!0}}Ye===!0&&(P.updateMultisampleRenderTarget(Se),P.updateRenderTargetMipmap(Se))}y.setRenderTarget(Oe),y.setClearColor(V,X),$e!==void 0&&(he.viewport=$e),y.toneMapping=Be}function gl(O,ne,ce){const he=ne.isScene===!0?ne.overrideMaterial:null;for(let ie=0,Se=O.length;ie<Se;ie++){const Ne=O[ie],Oe=Ne.object,Be=Ne.geometry,$e=Ne.group;let Ye=Ne.material;Ye.allowOverride===!0&&he!==null&&(Ye=he),Oe.layers.test(ce.layers)&&Jp(Oe,ne,ce,Be,Ye,$e)}}function Jp(O,ne,ce,he,ie,Se){O.onBeforeRender(y,ne,ce,he,ie,Se),O.modelViewMatrix.multiplyMatrices(ce.matrixWorldInverse,O.matrixWorld),O.normalMatrix.getNormalMatrix(O.modelViewMatrix),ie.onBeforeRender(y,ne,ce,he,O,Se),ie.transparent===!0&&ie.side===En&&ie.forceSinglePass===!1?(ie.side=pn,ie.needsUpdate=!0,y.renderBufferDirect(ce,ne,he,ie,O,Se),ie.side=Fi,ie.needsUpdate=!0,y.renderBufferDirect(ce,ne,he,ie,O,Se),ie.side=En):y.renderBufferDirect(ce,ne,he,ie,O,Se),O.onAfterRender(y,ne,ce,he,ie,Se)}function vl(O,ne,ce){ne.isScene!==!0&&(ne=G);const he=Q.get(O),ie=g.state.lights,Se=g.state.shadowsArray,Ne=ie.state.version,Oe=Me.getParameters(O,ie.state,Se,ne,ce),Be=Me.getProgramCacheKey(Oe);let $e=he.programs;he.environment=O.isMeshStandardMaterial?ne.environment:null,he.fog=ne.fog,he.envMap=(O.isMeshStandardMaterial?k:R).get(O.envMap||he.environment),he.envMapRotation=he.environment!==null&&O.envMap===null?ne.environmentRotation:O.envMapRotation,$e===void 0&&(O.addEventListener("dispose",Xe),$e=new Map,he.programs=$e);let Ye=$e.get(Be);if(Ye!==void 0){if(he.currentProgram===Ye&&he.lightsStateVersion===Ne)return em(O,Oe),Ye}else Oe.uniforms=Me.getUniforms(O),O.onBeforeCompile(Oe,y),Ye=Me.acquireProgram(Oe,Be),$e.set(Be,Ye),he.uniforms=Oe.uniforms;const He=he.uniforms;return(!O.isShaderMaterial&&!O.isRawShaderMaterial||O.clipping===!0)&&(He.clippingPlanes=xe.uniform),em(O,Oe),he.needsLights=hb(O),he.lightsStateVersion=Ne,he.needsLights&&(He.ambientLightColor.value=ie.state.ambient,He.lightProbe.value=ie.state.probe,He.directionalLights.value=ie.state.directional,He.directionalLightShadows.value=ie.state.directionalShadow,He.spotLights.value=ie.state.spot,He.spotLightShadows.value=ie.state.spotShadow,He.rectAreaLights.value=ie.state.rectArea,He.ltc_1.value=ie.state.rectAreaLTC1,He.ltc_2.value=ie.state.rectAreaLTC2,He.pointLights.value=ie.state.point,He.pointLightShadows.value=ie.state.pointShadow,He.hemisphereLights.value=ie.state.hemi,He.directionalShadowMap.value=ie.state.directionalShadowMap,He.directionalShadowMatrix.value=ie.state.directionalShadowMatrix,He.spotShadowMap.value=ie.state.spotShadowMap,He.spotLightMatrix.value=ie.state.spotLightMatrix,He.spotLightMap.value=ie.state.spotLightMap,He.pointShadowMap.value=ie.state.pointShadowMap,He.pointShadowMatrix.value=ie.state.pointShadowMatrix),he.currentProgram=Ye,he.uniformsList=null,Ye}function Qp(O){if(O.uniformsList===null){const ne=O.currentProgram.getUniforms();O.uniformsList=wc.seqWithValue(ne.seq,O.uniforms)}return O.uniformsList}function em(O,ne){const ce=Q.get(O);ce.outputColorSpace=ne.outputColorSpace,ce.batching=ne.batching,ce.batchingColor=ne.batchingColor,ce.instancing=ne.instancing,ce.instancingColor=ne.instancingColor,ce.instancingMorph=ne.instancingMorph,ce.skinning=ne.skinning,ce.morphTargets=ne.morphTargets,ce.morphNormals=ne.morphNormals,ce.morphColors=ne.morphColors,ce.morphTargetsCount=ne.morphTargetsCount,ce.numClippingPlanes=ne.numClippingPlanes,ce.numIntersection=ne.numClipIntersection,ce.vertexAlphas=ne.vertexAlphas,ce.vertexTangents=ne.vertexTangents,ce.toneMapping=ne.toneMapping}function cb(O,ne,ce,he,ie){ne.isScene!==!0&&(ne=G),P.resetTextureUnits();const Se=ne.fog,Ne=he.isMeshStandardMaterial?ne.environment:null,Oe=S===null?y.outputColorSpace:S.isXRRenderTarget===!0?S.texture.colorSpace:an,Be=(he.isMeshStandardMaterial?k:R).get(he.envMap||Ne),$e=he.vertexColors===!0&&!!ce.attributes.color&&ce.attributes.color.itemSize===4,Ye=!!ce.attributes.tangent&&(!!he.normalMap||he.anisotropy>0),He=!!ce.morphAttributes.position,ht=!!ce.morphAttributes.normal,mt=!!ce.morphAttributes.color;let Gt=gi;he.toneMapped&&(S===null||S.isXRRenderTarget===!0)&&(Gt=y.toneMapping);const Ut=ce.morphAttributes.position||ce.morphAttributes.normal||ce.morphAttributes.color,dt=Ut!==void 0?Ut.length:0,je=Q.get(he),nn=g.state.lights;if(ge===!0&&(be===!0||O!==_)){const _n=O===_&&he.id===x;xe.setState(he,O,_n)}let gt=!1;he.version===je.__version?(je.needsLights&&je.lightsStateVersion!==nn.state.version||je.outputColorSpace!==Oe||ie.isBatchedMesh&&je.batching===!1||!ie.isBatchedMesh&&je.batching===!0||ie.isBatchedMesh&&je.batchingColor===!0&&ie.colorTexture===null||ie.isBatchedMesh&&je.batchingColor===!1&&ie.colorTexture!==null||ie.isInstancedMesh&&je.instancing===!1||!ie.isInstancedMesh&&je.instancing===!0||ie.isSkinnedMesh&&je.skinning===!1||!ie.isSkinnedMesh&&je.skinning===!0||ie.isInstancedMesh&&je.instancingColor===!0&&ie.instanceColor===null||ie.isInstancedMesh&&je.instancingColor===!1&&ie.instanceColor!==null||ie.isInstancedMesh&&je.instancingMorph===!0&&ie.morphTexture===null||ie.isInstancedMesh&&je.instancingMorph===!1&&ie.morphTexture!==null||je.envMap!==Be||he.fog===!0&&je.fog!==Se||je.numClippingPlanes!==void 0&&(je.numClippingPlanes!==xe.numPlanes||je.numIntersection!==xe.numIntersection)||je.vertexAlphas!==$e||je.vertexTangents!==Ye||je.morphTargets!==He||je.morphNormals!==ht||je.morphColors!==mt||je.toneMapping!==Gt||je.morphTargetsCount!==dt)&&(gt=!0):(gt=!0,je.__version=he.version);let si=je.currentProgram;gt===!0&&(si=vl(he,ne,ie));let ks=!1,Bn=!1,ko=!1;const It=si.getUniforms(),$n=je.uniforms;if(Y.useProgram(si.program)&&(ks=!0,Bn=!0,ko=!0),he.id!==x&&(x=he.id,Bn=!0),ks||_!==O){Y.buffers.depth.getReversed()?(Z.copy(O.projectionMatrix),zw(Z),kw(Z),It.setValue(T,"projectionMatrix",Z)):It.setValue(T,"projectionMatrix",O.projectionMatrix),It.setValue(T,"viewMatrix",O.matrixWorldInverse);const Ln=It.map.cameraPosition;Ln!==void 0&&Ln.setValue(T,I.setFromMatrixPosition(O.matrixWorld)),j.logarithmicDepthBuffer&&It.setValue(T,"logDepthBufFC",2/(Math.log(O.far+1)/Math.LN2)),(he.isMeshPhongMaterial||he.isMeshToonMaterial||he.isMeshLambertMaterial||he.isMeshBasicMaterial||he.isMeshStandardMaterial||he.isShaderMaterial)&&It.setValue(T,"isOrthographic",O.isOrthographicCamera===!0),_!==O&&(_=O,Bn=!0,ko=!0)}if(ie.isSkinnedMesh){It.setOptional(T,ie,"bindMatrix"),It.setOptional(T,ie,"bindMatrixInverse");const _n=ie.skeleton;_n&&(_n.boneTexture===null&&_n.computeBoneTexture(),It.setValue(T,"boneTexture",_n.boneTexture,P))}ie.isBatchedMesh&&(It.setOptional(T,ie,"batchingTexture"),It.setValue(T,"batchingTexture",ie._matricesTexture,P),It.setOptional(T,ie,"batchingIdTexture"),It.setValue(T,"batchingIdTexture",ie._indirectTexture,P),It.setOptional(T,ie,"batchingColorTexture"),ie._colorsTexture!==null&&It.setValue(T,"batchingColorTexture",ie._colorsTexture,P));const Kn=ce.morphAttributes;if((Kn.position!==void 0||Kn.normal!==void 0||Kn.color!==void 0)&&We.update(ie,ce,si),(Bn||je.receiveShadow!==ie.receiveShadow)&&(je.receiveShadow=ie.receiveShadow,It.setValue(T,"receiveShadow",ie.receiveShadow)),he.isMeshGouraudMaterial&&he.envMap!==null&&($n.envMap.value=Be,$n.flipEnvMap.value=Be.isCubeTexture&&Be.isRenderTargetTexture===!1?-1:1),he.isMeshStandardMaterial&&he.envMap===null&&ne.environment!==null&&($n.envMapIntensity.value=ne.environmentIntensity),Bn&&(It.setValue(T,"toneMappingExposure",y.toneMappingExposure),je.needsLights&&ub($n,ko),Se&&he.fog===!0&&_e.refreshFogUniforms($n,Se),_e.refreshMaterialUniforms($n,he,J,te,g.state.transmissionRenderTarget[O.id]),wc.upload(T,Qp(je),$n,P)),he.isShaderMaterial&&he.uniformsNeedUpdate===!0&&(wc.upload(T,Qp(je),$n,P),he.uniformsNeedUpdate=!1),he.isSpriteMaterial&&It.setValue(T,"center",ie.center),It.setValue(T,"modelViewMatrix",ie.modelViewMatrix),It.setValue(T,"normalMatrix",ie.normalMatrix),It.setValue(T,"modelMatrix",ie.matrixWorld),he.isShaderMaterial||he.isRawShaderMaterial){const _n=he.uniformsGroups;for(let Ln=0,Eh=_n.length;Ln<Eh;Ln++){const Gr=_n[Ln];$.update(Gr,si),$.bind(Gr,si)}}return si}function ub(O,ne){O.ambientLightColor.needsUpdate=ne,O.lightProbe.needsUpdate=ne,O.directionalLights.needsUpdate=ne,O.directionalLightShadows.needsUpdate=ne,O.pointLights.needsUpdate=ne,O.pointLightShadows.needsUpdate=ne,O.spotLights.needsUpdate=ne,O.spotLightShadows.needsUpdate=ne,O.rectAreaLights.needsUpdate=ne,O.hemisphereLights.needsUpdate=ne}function hb(O){return O.isMeshLambertMaterial||O.isMeshToonMaterial||O.isMeshPhongMaterial||O.isMeshStandardMaterial||O.isShadowMaterial||O.isShaderMaterial&&O.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(O,ne,ce){const he=Q.get(O);he.__autoAllocateDepthBuffer=O.resolveDepthBuffer===!1,he.__autoAllocateDepthBuffer===!1&&(he.__useRenderToTexture=!1),Q.get(O.texture).__webglTexture=ne,Q.get(O.depthTexture).__webglTexture=he.__autoAllocateDepthBuffer?void 0:ce,he.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(O,ne){const ce=Q.get(O);ce.__webglFramebuffer=ne,ce.__useDefaultFramebuffer=ne===void 0};const fb=T.createFramebuffer();this.setRenderTarget=function(O,ne=0,ce=0){S=O,w=ne,E=ce;let he=!0,ie=null,Se=!1,Ne=!1;if(O){const Be=Q.get(O);if(Be.__useDefaultFramebuffer!==void 0)Y.bindFramebuffer(T.FRAMEBUFFER,null),he=!1;else if(Be.__webglFramebuffer===void 0)P.setupRenderTarget(O);else if(Be.__hasExternalTextures)P.rebindTextures(O,Q.get(O.texture).__webglTexture,Q.get(O.depthTexture).__webglTexture);else if(O.depthBuffer){const He=O.depthTexture;if(Be.__boundDepthTexture!==He){if(He!==null&&Q.has(He)&&(O.width!==He.image.width||O.height!==He.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");P.setupDepthRenderbuffer(O)}}const $e=O.texture;($e.isData3DTexture||$e.isDataArrayTexture||$e.isCompressedArrayTexture)&&(Ne=!0);const Ye=Q.get(O).__webglFramebuffer;O.isWebGLCubeRenderTarget?(Array.isArray(Ye[ne])?ie=Ye[ne][ce]:ie=Ye[ne],Se=!0):O.samples>0&&P.useMultisampledRTT(O)===!1?ie=Q.get(O).__webglMultisampledFramebuffer:Array.isArray(Ye)?ie=Ye[ce]:ie=Ye,A.copy(O.viewport),N.copy(O.scissor),B=O.scissorTest}else A.copy(oe).multiplyScalar(J).floor(),N.copy(ye).multiplyScalar(J).floor(),B=Ce;if(ce!==0&&(ie=fb),Y.bindFramebuffer(T.FRAMEBUFFER,ie)&&he&&Y.drawBuffers(O,ie),Y.viewport(A),Y.scissor(N),Y.setScissorTest(B),Se){const Be=Q.get(O.texture);T.framebufferTexture2D(T.FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_CUBE_MAP_POSITIVE_X+ne,Be.__webglTexture,ce)}else if(Ne){const Be=Q.get(O.texture),$e=ne;T.framebufferTextureLayer(T.FRAMEBUFFER,T.COLOR_ATTACHMENT0,Be.__webglTexture,ce,$e)}else if(O!==null&&ce!==0){const Be=Q.get(O.texture);T.framebufferTexture2D(T.FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_2D,Be.__webglTexture,ce)}x=-1},this.readRenderTargetPixels=function(O,ne,ce,he,ie,Se,Ne){if(!(O&&O.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Oe=Q.get(O).__webglFramebuffer;if(O.isWebGLCubeRenderTarget&&Ne!==void 0&&(Oe=Oe[Ne]),Oe){Y.bindFramebuffer(T.FRAMEBUFFER,Oe);try{const Be=O.texture,$e=Be.format,Ye=Be.type;if(!j.textureFormatReadable($e)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!j.textureTypeReadable(Ye)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ne>=0&&ne<=O.width-he&&ce>=0&&ce<=O.height-ie&&T.readPixels(ne,ce,he,ie,me.convert($e),me.convert(Ye),Se)}finally{const Be=S!==null?Q.get(S).__webglFramebuffer:null;Y.bindFramebuffer(T.FRAMEBUFFER,Be)}}},this.readRenderTargetPixelsAsync=async function(O,ne,ce,he,ie,Se,Ne){if(!(O&&O.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Oe=Q.get(O).__webglFramebuffer;if(O.isWebGLCubeRenderTarget&&Ne!==void 0&&(Oe=Oe[Ne]),Oe)if(ne>=0&&ne<=O.width-he&&ce>=0&&ce<=O.height-ie){Y.bindFramebuffer(T.FRAMEBUFFER,Oe);const Be=O.texture,$e=Be.format,Ye=Be.type;if(!j.textureFormatReadable($e))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!j.textureTypeReadable(Ye))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const He=T.createBuffer();T.bindBuffer(T.PIXEL_PACK_BUFFER,He),T.bufferData(T.PIXEL_PACK_BUFFER,Se.byteLength,T.STREAM_READ),T.readPixels(ne,ce,he,ie,me.convert($e),me.convert(Ye),0);const ht=S!==null?Q.get(S).__webglFramebuffer:null;Y.bindFramebuffer(T.FRAMEBUFFER,ht);const mt=T.fenceSync(T.SYNC_GPU_COMMANDS_COMPLETE,0);return T.flush(),await Bw(T,mt,4),T.bindBuffer(T.PIXEL_PACK_BUFFER,He),T.getBufferSubData(T.PIXEL_PACK_BUFFER,0,Se),T.deleteBuffer(He),T.deleteSync(mt),Se}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(O,ne=null,ce=0){const he=Math.pow(2,-ce),ie=Math.floor(O.image.width*he),Se=Math.floor(O.image.height*he),Ne=ne!==null?ne.x:0,Oe=ne!==null?ne.y:0;P.setTexture2D(O,0),T.copyTexSubImage2D(T.TEXTURE_2D,ce,0,0,Ne,Oe,ie,Se),Y.unbindTexture()};const db=T.createFramebuffer(),pb=T.createFramebuffer();this.copyTextureToTexture=function(O,ne,ce=null,he=null,ie=0,Se=null){Se===null&&(ie!==0?(Mc("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Se=ie,ie=0):Se=0);let Ne,Oe,Be,$e,Ye,He,ht,mt,Gt;const Ut=O.isCompressedTexture?O.mipmaps[Se]:O.image;if(ce!==null)Ne=ce.max.x-ce.min.x,Oe=ce.max.y-ce.min.y,Be=ce.isBox3?ce.max.z-ce.min.z:1,$e=ce.min.x,Ye=ce.min.y,He=ce.isBox3?ce.min.z:0;else{const Kn=Math.pow(2,-ie);Ne=Math.floor(Ut.width*Kn),Oe=Math.floor(Ut.height*Kn),O.isDataArrayTexture?Be=Ut.depth:O.isData3DTexture?Be=Math.floor(Ut.depth*Kn):Be=1,$e=0,Ye=0,He=0}he!==null?(ht=he.x,mt=he.y,Gt=he.z):(ht=0,mt=0,Gt=0);const dt=me.convert(ne.format),je=me.convert(ne.type);let nn;ne.isData3DTexture?(P.setTexture3D(ne,0),nn=T.TEXTURE_3D):ne.isDataArrayTexture||ne.isCompressedArrayTexture?(P.setTexture2DArray(ne,0),nn=T.TEXTURE_2D_ARRAY):(P.setTexture2D(ne,0),nn=T.TEXTURE_2D),T.pixelStorei(T.UNPACK_FLIP_Y_WEBGL,ne.flipY),T.pixelStorei(T.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ne.premultiplyAlpha),T.pixelStorei(T.UNPACK_ALIGNMENT,ne.unpackAlignment);const gt=T.getParameter(T.UNPACK_ROW_LENGTH),si=T.getParameter(T.UNPACK_IMAGE_HEIGHT),ks=T.getParameter(T.UNPACK_SKIP_PIXELS),Bn=T.getParameter(T.UNPACK_SKIP_ROWS),ko=T.getParameter(T.UNPACK_SKIP_IMAGES);T.pixelStorei(T.UNPACK_ROW_LENGTH,Ut.width),T.pixelStorei(T.UNPACK_IMAGE_HEIGHT,Ut.height),T.pixelStorei(T.UNPACK_SKIP_PIXELS,$e),T.pixelStorei(T.UNPACK_SKIP_ROWS,Ye),T.pixelStorei(T.UNPACK_SKIP_IMAGES,He);const It=O.isDataArrayTexture||O.isData3DTexture,$n=ne.isDataArrayTexture||ne.isData3DTexture;if(O.isDepthTexture){const Kn=Q.get(O),_n=Q.get(ne),Ln=Q.get(Kn.__renderTarget),Eh=Q.get(_n.__renderTarget);Y.bindFramebuffer(T.READ_FRAMEBUFFER,Ln.__webglFramebuffer),Y.bindFramebuffer(T.DRAW_FRAMEBUFFER,Eh.__webglFramebuffer);for(let Gr=0;Gr<Be;Gr++)It&&(T.framebufferTextureLayer(T.READ_FRAMEBUFFER,T.COLOR_ATTACHMENT0,Q.get(O).__webglTexture,ie,He+Gr),T.framebufferTextureLayer(T.DRAW_FRAMEBUFFER,T.COLOR_ATTACHMENT0,Q.get(ne).__webglTexture,Se,Gt+Gr)),T.blitFramebuffer($e,Ye,Ne,Oe,ht,mt,Ne,Oe,T.DEPTH_BUFFER_BIT,T.NEAREST);Y.bindFramebuffer(T.READ_FRAMEBUFFER,null),Y.bindFramebuffer(T.DRAW_FRAMEBUFFER,null)}else if(ie!==0||O.isRenderTargetTexture||Q.has(O)){const Kn=Q.get(O),_n=Q.get(ne);Y.bindFramebuffer(T.READ_FRAMEBUFFER,db),Y.bindFramebuffer(T.DRAW_FRAMEBUFFER,pb);for(let Ln=0;Ln<Be;Ln++)It?T.framebufferTextureLayer(T.READ_FRAMEBUFFER,T.COLOR_ATTACHMENT0,Kn.__webglTexture,ie,He+Ln):T.framebufferTexture2D(T.READ_FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_2D,Kn.__webglTexture,ie),$n?T.framebufferTextureLayer(T.DRAW_FRAMEBUFFER,T.COLOR_ATTACHMENT0,_n.__webglTexture,Se,Gt+Ln):T.framebufferTexture2D(T.DRAW_FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_2D,_n.__webglTexture,Se),ie!==0?T.blitFramebuffer($e,Ye,Ne,Oe,ht,mt,Ne,Oe,T.COLOR_BUFFER_BIT,T.NEAREST):$n?T.copyTexSubImage3D(nn,Se,ht,mt,Gt+Ln,$e,Ye,Ne,Oe):T.copyTexSubImage2D(nn,Se,ht,mt,$e,Ye,Ne,Oe);Y.bindFramebuffer(T.READ_FRAMEBUFFER,null),Y.bindFramebuffer(T.DRAW_FRAMEBUFFER,null)}else $n?O.isDataTexture||O.isData3DTexture?T.texSubImage3D(nn,Se,ht,mt,Gt,Ne,Oe,Be,dt,je,Ut.data):ne.isCompressedArrayTexture?T.compressedTexSubImage3D(nn,Se,ht,mt,Gt,Ne,Oe,Be,dt,Ut.data):T.texSubImage3D(nn,Se,ht,mt,Gt,Ne,Oe,Be,dt,je,Ut):O.isDataTexture?T.texSubImage2D(T.TEXTURE_2D,Se,ht,mt,Ne,Oe,dt,je,Ut.data):O.isCompressedTexture?T.compressedTexSubImage2D(T.TEXTURE_2D,Se,ht,mt,Ut.width,Ut.height,dt,Ut.data):T.texSubImage2D(T.TEXTURE_2D,Se,ht,mt,Ne,Oe,dt,je,Ut);T.pixelStorei(T.UNPACK_ROW_LENGTH,gt),T.pixelStorei(T.UNPACK_IMAGE_HEIGHT,si),T.pixelStorei(T.UNPACK_SKIP_PIXELS,ks),T.pixelStorei(T.UNPACK_SKIP_ROWS,Bn),T.pixelStorei(T.UNPACK_SKIP_IMAGES,ko),Se===0&&ne.generateMipmaps&&T.generateMipmap(nn),Y.unbindTexture()},this.copyTextureToTexture3D=function(O,ne,ce=null,he=null,ie=0){return Mc('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(O,ne,ce,he,ie)},this.initRenderTarget=function(O){Q.get(O).__webglFramebuffer===void 0&&P.setupRenderTarget(O)},this.initTexture=function(O){O.isCubeTexture?P.setTextureCube(O,0):O.isData3DTexture?P.setTexture3D(O,0):O.isDataArrayTexture||O.isCompressedArrayTexture?P.setTexture2DArray(O,0):P.setTexture2D(O,0),Y.unbindTexture()},this.resetState=function(){w=0,E=0,S=null,Y.reset(),Le.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ei}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=at._getDrawingBufferColorSpace(e),t.unpackColorSpace=at._getUnpackColorSpace()}}const jI=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:zu,AddEquation:Tr,AddOperation:z0,AdditiveAnimationBlendMode:sp,AdditiveBlending:Oc,AgXToneMapping:W0,AlphaFormat:tp,AlwaysCompare:ox,AlwaysDepth:kc,AlwaysStencilFunc:rd,AmbientLight:Xx,AnimationAction:ty,AnimationClip:Ro,AnimationLoader:fE,AnimationMixer:BE,AnimationObjectGroup:OE,AnimationUtils:lE,ArcCurve:yx,ArrayCamera:Jx,ArrowHelper:r1,AttachedBindMode:id,Audio:Qx,AudioAnalyser:EE,AudioContext:Dp,AudioListener:SE,AudioLoader:yE,AxesHelper:s1,BackSide:pn,BasicDepthPacking:Z0,BasicShadowMap:VS,BatchedMesh:vx,Bone:Qu,BooleanKeyframeTrack:Bs,Box2:iy,Box3:Xt,Box3Helper:n1,BoxGeometry:Br,BoxHelper:t1,BufferAttribute:lt,BufferGeometry:Ze,BufferGeometryLoader:Kx,ByteType:Jd,Cache:tr,Camera:ol,CameraHelper:e1,CanvasTexture:IT,CapsuleGeometry:ih,CatmullRomCurve3:bx,CineonToneMapping:H0,CircleGeometry:rh,ClampToEdgeWrapping:Jt,Clock:vh,Color:we,ColorKeyframeTrack:Ep,ColorManagement:at,CompressedArrayTexture:RT,CompressedCubeTexture:CT,CompressedTexture:ys,CompressedTextureLoader:dE,ConeGeometry:ul,ConstantAlphaFactor:O0,ConstantColorFactor:N0,Controls:o1,CubeCamera:fx,CubeReflectionMapping:rr,CubeRefractionMapping:Dr,CubeTexture:al,CubeTextureLoader:pE,CubeUVReflectionMapping:No,CubicBezierCurve:vp,CubicBezierCurve3:Mx,CubicInterpolant:zx,CullFaceBack:ed,CullFaceFront:x0,CullFaceFrontBack:kS,CullFaceNone:_0,Curve:Si,CurvePath:wx,CustomBlending:y0,CustomToneMapping:G0,CylinderGeometry:cl,Cylindrical:XE,Data3DTexture:$u,DataArrayTexture:rl,DataTexture:ni,DataTextureLoader:Gx,DataUtils:aa,DecrementStencilOp:JS,DecrementWrapStencilOp:ew,DefaultLoadingManager:Hx,DepthArrayTexture:PT,DepthFormat:So,DepthStencilFormat:wo,DepthTexture:nh,DetachedBindMode:j0,DirectionalLight:Lp,DirectionalLightHelper:QE,DiscreteInterpolant:kx,DodecahedronGeometry:sh,DoubleSide:En,DstAlphaFactor:C0,DstColorFactor:P0,DynamicCopyUsage:mw,DynamicDrawUsage:cw,DynamicReadUsage:fw,EdgesGeometry:xx,EllipseCurve:oh,EqualCompare:nx,EqualDepth:Hc,EqualStencilFunc:rw,EquirectangularReflectionMapping:yo,EquirectangularRefractionMapping:za,Euler:In,EventDispatcher:bi,ExtrudeGeometry:ah,FileLoader:xi,Float16BufferAttribute:aT,Float32BufferAttribute:Fe,FloatType:on,Fog:Ju,FogExp2:Zu,FramebufferTexture:AT,FrontSide:Fi,Frustum:Oo,FrustumArray:eh,GLBufferAttribute:WE,GLSL1:vw,GLSL3:sd,GreaterCompare:ix,GreaterDepth:Wc,GreaterEqualCompare:sx,GreaterEqualDepth:Gc,GreaterEqualStencilFunc:lw,GreaterStencilFunc:ow,GridHelper:ZE,Group:er,HalfFloatType:hi,HemisphereLight:Wx,HemisphereLightHelper:KE,IcosahedronGeometry:lh,ImageBitmapLoader:Zx,ImageLoader:qa,ImageUtils:cx,IncrementStencilOp:ZS,IncrementWrapStencilOp:QS,InstancedBufferAttribute:Cs,InstancedBufferGeometry:$x,InstancedInterleavedBuffer:GE,InstancedMesh:dp,Int16BufferAttribute:sT,Int32BufferAttribute:oT,Int8BufferAttribute:nT,IntType:Vu,InterleavedBuffer:Uo,InterleavedBufferAttribute:zi,Interpolant:Fo,InterpolateDiscrete:Es,InterpolateLinear:As,InterpolateSmooth:bc,InterpolationSamplingMode:yw,InterpolationSamplingType:xw,InvertStencilOp:tw,KeepStencilOp:as,KeyframeTrack:ri,LOD:gx,LatheGeometry:ch,Layers:Ku,LessCompare:tx,LessDepth:Vc,LessEqualCompare:ap,LessEqualDepth:ws,LessEqualStencilFunc:sw,LessStencilFunc:iw,Light:Vr,LightProbe:qx,Line:ar,Line3:ry,LineBasicMaterial:vn,LineCurve:_p,LineCurve3:Sx,LineDashedMaterial:Ox,LineLoop:pp,LineSegments:Mi,LinearFilter:Ct,LinearInterpolant:Tp,LinearMipMapLinearFilter:XS,LinearMipMapNearestFilter:WS,LinearMipmapLinearFilter:Xn,LinearMipmapNearestFilter:_s,LinearSRGBColorSpace:an,LinearToneMapping:k0,LinearTransfer:Va,Loader:Pn,LoaderUtils:Pr,LoadingManager:Ap,LoopOnce:Y0,LoopPingPong:$0,LoopRepeat:q0,MOUSE:Hn,Material:Yt,MaterialLoader:gh,MathUtils:Bi,Matrix2:Op,Matrix3:Je,Matrix4:ke,MaxEquation:w0,Mesh:wt,MeshBasicMaterial:Cn,MeshDepthMaterial:Mp,MeshDistanceMaterial:Sp,MeshLambertMaterial:Nx,MeshMatcapMaterial:Ux,MeshNormalMaterial:Dx,MeshPhongMaterial:Px,MeshPhysicalMaterial:qn,MeshStandardMaterial:dl,MeshToonMaterial:Lx,MinEquation:S0,MirroredRepeatWrapping:Ts,MixOperation:B0,MultiplyBlending:nd,MultiplyOperation:tl,NearestFilter:Lt,NearestMipMapLinearFilter:GS,NearestMipMapNearestFilter:HS,NearestMipmapLinearFilter:Er,NearestMipmapNearestFilter:nl,NeutralToneMapping:X0,NeverCompare:ex,NeverDepth:zc,NeverStencilFunc:nw,NoBlending:nr,NoColorSpace:Pi,NoToneMapping:gi,NormalAnimationBlendMode:Yu,NormalBlending:vs,NotEqualCompare:rx,NotEqualDepth:Xc,NotEqualStencilFunc:aw,NumberKeyframeTrack:Ps,Object3D:ct,ObjectLoader:_E,ObjectSpaceNormalMap:Q0,OctahedronGeometry:hl,OneFactor:E0,OneMinusConstantAlphaFactor:F0,OneMinusConstantColorFactor:U0,OneMinusDstAlphaFactor:I0,OneMinusDstColorFactor:L0,OneMinusSrcAlphaFactor:Bc,OneMinusSrcColorFactor:R0,OrthographicCamera:Di,PCFShadowMap:Kd,PCFSoftShadowMap:Zd,PMREMGenerator:Su,Path:Mu,PerspectiveCamera:St,Plane:Ii,PlaneGeometry:kr,PlaneHelper:i1,PointLight:Pp,PointLightHelper:qE,Points:mp,PointsMaterial:th,PolarGridHelper:JE,PolyhedronGeometry:zr,PositionalAudio:TE,PropertyBinding:rt,PropertyMixer:ey,QuadraticBezierCurve:xp,QuadraticBezierCurve3:yp,Quaternion:en,QuaternionKeyframeTrack:Ls,QuaternionLinearInterpolant:Vx,RED_GREEN_RGTC2_Format:gu,RED_RGTC1_Format:rp,REVISION:Do,RGBADepthPacking:J0,RGBAFormat:Qt,RGBAIntegerFormat:ju,RGBA_ASTC_10x10_Format:uu,RGBA_ASTC_10x5_Format:au,RGBA_ASTC_10x6_Format:lu,RGBA_ASTC_10x8_Format:cu,RGBA_ASTC_12x10_Format:hu,RGBA_ASTC_12x12_Format:fu,RGBA_ASTC_4x4_Format:Qc,RGBA_ASTC_5x4_Format:eu,RGBA_ASTC_5x5_Format:tu,RGBA_ASTC_6x5_Format:nu,RGBA_ASTC_6x6_Format:iu,RGBA_ASTC_8x5_Format:ru,RGBA_ASTC_8x6_Format:su,RGBA_ASTC_8x8_Format:ou,RGBA_BPTC_Format:Ma,RGBA_ETC2_EAC_Format:Jc,RGBA_PVRTC_2BPPV1_Format:$c,RGBA_PVRTC_4BPPV1_Format:qc,RGBA_S3TC_DXT1_Format:xa,RGBA_S3TC_DXT3_Format:ya,RGBA_S3TC_DXT5_Format:ba,RGBDepthPacking:YS,RGBFormat:np,RGBIntegerFormat:jS,RGB_BPTC_SIGNED_Format:du,RGB_BPTC_UNSIGNED_Format:pu,RGB_ETC1_Format:Kc,RGB_ETC2_Format:Zc,RGB_PVRTC_2BPPV1_Format:Yc,RGB_PVRTC_4BPPV1_Format:jc,RGB_S3TC_DXT1_Format:_a,RGDepthPacking:qS,RGFormat:ip,RGIntegerFormat:Xu,RawShaderMaterial:Ea,Ray:Fs,Raycaster:ny,RectAreaLight:jx,RedFormat:Wu,RedIntegerFormat:il,ReinhardToneMapping:V0,RenderTarget:qu,RenderTarget3D:zE,RenderTargetArray:kE,RepeatWrapping:sr,ReplaceStencilOp:KS,ReverseSubtractEquation:M0,RingGeometry:uh,SIGNED_RED_GREEN_RGTC2_Format:vu,SIGNED_RED_RGTC1_Format:mu,SRGBColorSpace:Bt,SRGBTransfer:yt,Scene:Rs,ShaderChunk:nt,ShaderLib:ci,ShaderMaterial:gn,ShadowMaterial:Ix,Shape:bs,ShapeGeometry:hh,ShapePath:oy,ShapeUtils:fi,ShortType:Qd,Skeleton:ll,SkeletonHelper:YE,SkinnedMesh:fp,Source:Ar,Sphere:jt,SphereGeometry:fl,Spherical:hd,SphericalHarmonics3:Yx,SplineCurve:bp,SpotLight:Ip,SpotLightHelper:jE,Sprite:mx,SpriteMaterial:hp,SrcAlphaFactor:Fc,SrcAlphaSaturateFactor:D0,SrcColorFactor:A0,StaticCopyUsage:pw,StaticDrawUsage:Ha,StaticReadUsage:hw,StereoCamera:bE,StreamCopyUsage:gw,StreamDrawUsage:uw,StreamReadUsage:dw,StringKeyframeTrack:zs,SubtractEquation:b0,SubtractiveBlending:td,TOUCH:Zi,TangentSpaceNormalMap:Fr,TetrahedronGeometry:fh,Texture:At,TextureLoader:Rp,TextureUtils:h1,TimestampQuery:_w,TorusGeometry:dh,TorusKnotGeometry:ph,Triangle:Rn,TriangleFanDrawMode:_u,TriangleStripDrawMode:op,TrianglesDrawMode:K0,TubeGeometry:mh,UVMapping:ku,Uint16BufferAttribute:cp,Uint32BufferAttribute:up,Uint8BufferAttribute:iT,Uint8ClampedBufferAttribute:rT,Uniform:_h,UniformsGroup:HE,UniformsLib:Pe,UniformsUtils:sl,UnsignedByteType:vi,UnsignedInt248Type:Mo,UnsignedInt5999Type:ep,UnsignedIntType:or,UnsignedShort4444Type:Hu,UnsignedShort5551Type:Gu,UnsignedShortType:bo,VSMShadowMap:Ri,Vector2:pe,Vector3:F,Vector4:it,VectorKeyframeTrack:Ds,VideoFrameTexture:ET,VideoTexture:_x,WebGL3DRenderTarget:Xw,WebGLArrayRenderTarget:Ww,WebGLCoordinateSystem:ei,WebGLCubeRenderTarget:dx,WebGLRenderTarget:_i,WebGLRenderer:Aa,WebGLUtils:fy,WebGPUCoordinateSystem:Ga,WebXRController:Sc,WireframeGeometry:Cx,WrapAroundEnding:ka,ZeroCurvatureEnding:fs,ZeroFactor:T0,ZeroSlopeEnding:ds,ZeroStencilOp:$S,createCanvasElement:lx},Symbol.toStringTag,{value:"Module"}));function Nr(i){return Nd()?(m_(i),!0):!1}function Qn(){const i=new Set,e=s=>{i.delete(s)};return{on:s=>{i.add(s);const o=()=>e(s);return Nr(o),{off:o}},off:e,trigger:(...s)=>Promise.all(Array.from(i).map(o=>o(...s))),clear:()=>{i.clear()}}}const wf=new WeakMap,YI=(...i)=>{var e;const t=i[0],n=(e=xo())==null?void 0:e.proxy;if(n==null&&!q_())throw new Error("injectLocal must be called in setup");return n&&wf.has(n)&&t in wf.get(n)?wf.get(n)[t]:ti(...i)},pd=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const qI=i=>i!=null,$I=Object.prototype.toString,KI=i=>$I.call(i)==="[object Object]",md=()=>{};function ZI(i,e){function t(...n){return new Promise((r,s)=>{Promise.resolve(i(()=>e.apply(this,n),{fn:e,thisArg:this,args:n})).then(r).catch(s)})}return t}function JI(i,e={}){let t,n,r=md;const s=l=>{clearTimeout(l),r(),r=md};let o;return l=>{const c=Fn(i),u=Fn(e.maxWait);return t&&s(t),c<=0||u!==void 0&&u<=0?(n&&(s(n),n=null),Promise.resolve(l())):new Promise((h,f)=>{r=e.rejectOnCancel?f:h,o=l,u&&!n&&(n=setTimeout(()=>{t&&s(t),n=null,h(o())},u)),t=setTimeout(()=>{n&&s(n),n=null,h(l())},c)})}}function av(i){return i.endsWith("rem")?Number.parseFloat(i)*16:Number.parseFloat(i)}function QI(i,e,t=!1){return e.reduce((n,r)=>(r in i&&(!t||i[r]!==void 0)&&(n[r]=i[r]),n),{})}function eP(i){return xo()}function Ra(i){return Array.isArray(i)?i:[i]}function tP(i,e=200,t={}){return ZI(JI(e,t),i)}function lv(i,e=200,t={}){const n=Pt(i.value),r=tP(()=>{n.value=i.value},e,t);return Vt(i,()=>r()),n}function nP(i,e={}){if(!kt(i))return Nu(i);const t=Array.isArray(i.value)?Array.from({length:i.value.length}):{};for(const n in i.value)t[n]=Qb(()=>({get(){return i.value[n]},set(r){var s;if((s=Fn(e.replaceRef))!=null?s:!0)if(Array.isArray(i.value)){const a=[...i.value];a[n]=r,i.value=a}else{const a={...i.value,[n]:r};Object.setPrototypeOf(a,Object.getPrototypeOf(i.value)),i.value=a}else i.value[n]=r}}));return t}const rn=Fn;function Bp(i,e=!0,t){eP()?Qa(i,t):e?i():Gd(i)}function iP(i,e=1e3,t={}){const{immediate:n=!0,immediateCallback:r=!1}=t;let s=null;const o=ft(!1);function a(){s&&(clearInterval(s),s=null)}function l(){o.value=!1,a()}function c(){const u=Fn(e);u<=0||(o.value=!0,r&&i(),a(),o.value&&(s=setInterval(i,u)))}if(n&&pd&&c(),kt(e)||typeof e=="function"){const u=Vt(e,()=>{o.value&&pd&&c()});Nr(u)}return Nr(l),{isActive:o,pause:l,resume:c}}function dy(i,e,t){return Vt(i,e,{...t,immediate:!0})}const cr=pd?window:void 0;function di(i){var e;const t=Fn(i);return(e=t==null?void 0:t.$el)!=null?e:t}function Ns(...i){const e=[],t=()=>{e.forEach(a=>a()),e.length=0},n=(a,l,c,u)=>(a.addEventListener(l,c,u),()=>a.removeEventListener(l,c,u)),r=xt(()=>{const a=Ra(Fn(i[0])).filter(l=>l!=null);return a.every(l=>typeof l!="string")?a:void 0}),s=dy(()=>{var a,l;return[(l=(a=r.value)==null?void 0:a.map(c=>di(c)))!=null?l:[cr].filter(c=>c!=null),Ra(Fn(r.value?i[1]:i[0])),Ra(Ve(r.value?i[2]:i[1])),Fn(r.value?i[3]:i[2])]},([a,l,c,u])=>{if(t(),!(a!=null&&a.length)||!(l!=null&&l.length)||!(c!=null&&c.length))return;const h=KI(u)?{...u}:u;e.push(...a.flatMap(f=>l.flatMap(d=>c.map(p=>n(f,d,p,h)))))},{flush:"post"}),o=()=>{s(),t()};return Nr(t),o}function rP(){const i=ft(!1),e=xo();return e&&Qa(()=>{i.value=!0},e),i}function yh(i){const e=rP();return xt(()=>(e.value,!!i()))}function sP(i,e,t={}){const{window:n=cr,...r}=t;let s;const o=yh(()=>n&&"MutationObserver"in n),a=()=>{s&&(s.disconnect(),s=void 0)},l=xt(()=>{const f=Fn(i),d=Ra(f).map(di).filter(qI);return new Set(d)}),c=Vt(()=>l.value,f=>{a(),o.value&&f.size&&(s=new MutationObserver(e),f.forEach(d=>s.observe(d,r)))},{immediate:!0,flush:"post"}),u=()=>s==null?void 0:s.takeRecords(),h=()=>{c(),a()};return Nr(h),{isSupported:o,stop:h,takeRecords:u}}function zp(i,e={}){const{immediate:t=!0,fpsLimit:n=void 0,window:r=cr,once:s=!1}=e,o=ft(!1),a=xt(()=>n?1e3/Fn(n):null);let l=0,c=null;function u(d){if(!o.value||!r)return;l||(l=d);const p=d-l;if(a.value&&p<a.value){c=r.requestAnimationFrame(u);return}if(l=d,i({delta:p,timestamp:d}),s){o.value=!1,c=null;return}c=r.requestAnimationFrame(u)}function h(){!o.value&&r&&(o.value=!0,l=0,c=r.requestAnimationFrame(u))}function f(){o.value=!1,c!=null&&r&&(r.cancelAnimationFrame(c),c=null)}return t&&h(),Nr(f),{isActive:Ms(o),pause:f,resume:h}}const oP=Symbol("vueuse-ssr-width");function aP(){const i=q_()?YI(oP,null):null;return typeof i=="number"?i:void 0}function py(i,e={}){const{window:t=cr,ssrWidth:n=aP()}=e,r=yh(()=>t&&"matchMedia"in t&&typeof t.matchMedia=="function"),s=ft(typeof n=="number"),o=ft(),a=ft(!1),l=c=>{a.value=c.matches};return Lo(()=>{if(s.value){s.value=!r.value;const c=Fn(i).split(",");a.value=c.some(u=>{const h=u.includes("not all"),f=u.match(/\(\s*min-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/),d=u.match(/\(\s*max-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/);let p=!!(f||d);return f&&p&&(p=n>=av(f[1])),d&&p&&(p=n<=av(d[1])),h?!p:p});return}r.value&&(o.value=t.matchMedia(Fn(i)),a.value=o.value.matches)}),Ns(o,"change",l,{passive:!0}),xt(()=>a.value)}function lP(i={}){const{window:e=cr}=i,t=ft(1),n=py(()=>`(resolution: ${t.value}dppx)`,i);let r=md;return e&&(r=dy(n,()=>t.value=e.devicePixelRatio)),{pixelRatio:Ms(t),stop:r}}function my(i,e,t={}){const{window:n=cr,...r}=t;let s;const o=yh(()=>n&&"ResizeObserver"in n),a=()=>{s&&(s.disconnect(),s=void 0)},l=xt(()=>{const h=Fn(i);return Array.isArray(h)?h.map(f=>di(f)):[di(h)]}),c=Vt(l,h=>{if(a(),o.value&&n){s=new ResizeObserver(e);for(const f of h)f&&s.observe(f,r)}},{immediate:!0,flush:"post"}),u=()=>{a(),c()};return Nr(u),{isSupported:o,stop:u}}function cP(i,e={}){const{reset:t=!0,windowResize:n=!0,windowScroll:r=!0,immediate:s=!0,updateTiming:o="sync"}=e,a=ft(0),l=ft(0),c=ft(0),u=ft(0),h=ft(0),f=ft(0),d=ft(0),p=ft(0);function v(){const g=di(i);if(!g){t&&(a.value=0,l.value=0,c.value=0,u.value=0,h.value=0,f.value=0,d.value=0,p.value=0);return}const M=g.getBoundingClientRect();a.value=M.height,l.value=M.bottom,c.value=M.left,u.value=M.right,h.value=M.top,f.value=M.width,d.value=M.x,p.value=M.y}function m(){o==="sync"?v():o==="next-frame"&&requestAnimationFrame(()=>v())}return my(i,m),Vt(()=>di(i),g=>!g&&m()),sP(i,m,{attributeFilter:["style","class"]}),r&&Ns("scroll",m,{capture:!0,passive:!0}),n&&Ns("resize",m,{passive:!0}),Bp(()=>{s&&m()}),{height:a,bottom:l,left:c,right:u,top:h,width:f,x:d,y:p,update:m}}function uP(i,e={width:0,height:0},t={}){const{window:n=cr,box:r="content-box"}=t,s=xt(()=>{var h,f;return(f=(h=di(i))==null?void 0:h.namespaceURI)==null?void 0:f.includes("svg")}),o=ft(e.width),a=ft(e.height),{stop:l}=my(i,([h])=>{const f=r==="border-box"?h.borderBoxSize:r==="content-box"?h.contentBoxSize:h.devicePixelContentBoxSize;if(n&&s.value){const d=di(i);if(d){const p=d.getBoundingClientRect();o.value=p.width,a.value=p.height}}else if(f){const d=Ra(f);o.value=d.reduce((p,{inlineSize:v})=>p+v,0),a.value=d.reduce((p,{blockSize:v})=>p+v,0)}else o.value=h.contentRect.width,a.value=h.contentRect.height},t);Bp(()=>{const h=di(i);h&&(o.value="offsetWidth"in h?h.offsetWidth:e.width,a.value="offsetHeight"in h?h.offsetHeight:e.height)});const c=Vt(()=>di(i),h=>{o.value=h?e.width:0,a.value=h?e.height:0});function u(){l(),c()}return{width:o,height:a,stop:u}}function hP(i){var e;const t=ft(0);if(typeof performance>"u")return t;const n=(e=i==null?void 0:i.every)!=null?e:10;let r=performance.now(),s=0;return zp(()=>{if(s+=1,s>=n){const o=performance.now(),a=o-r;t.value=Math.round(1e3/(a/s)),r=o,s=0}}),t}function fP(i={}){const e=Pt(),t=yh(()=>typeof performance<"u"&&"memory"in performance);if(t.value){const{interval:n=1e3}=i;iP(()=>{e.value=performance.memory},n,{immediate:i.immediate,immediateCallback:i.immediateCallback})}return{isSupported:t,memory:e}}const gy={x:0,y:0,pointerId:0,pressure:0,tiltX:0,tiltY:0,width:0,height:0,twist:0,pointerType:null},dP=Object.keys(gy);function pP(i={}){const{target:e=cr}=i,t=ft(!1),n=Pt(i.initialValue||{});Object.assign(n.value,gy,n.value);const r=s=>{t.value=!0,!(i.pointerTypes&&!i.pointerTypes.includes(s.pointerType))&&(n.value=QI(s,dP,!1))};if(e){const s={passive:!0};Ns(e,["pointerdown","pointermove","pointerup"],r,s),Ns(e,"pointerleave",()=>t.value=!1,s)}return{...nP(n),isInside:t}}function mP(i={}){const{window:e=cr,initialWidth:t=Number.POSITIVE_INFINITY,initialHeight:n=Number.POSITIVE_INFINITY,listenOrientation:r=!0,includeScrollbar:s=!0,type:o="inner"}=i,a=ft(t),l=ft(n),c=()=>{if(e)if(o==="outer")a.value=e.outerWidth,l.value=e.outerHeight;else if(o==="visual"&&e.visualViewport){const{width:h,height:f,scale:d}=e.visualViewport;a.value=Math.round(h*d),l.value=Math.round(f*d)}else s?(a.value=e.innerWidth,l.value=e.innerHeight):(a.value=e.document.documentElement.clientWidth,l.value=e.document.documentElement.clientHeight)};c(),Bp(c);const u={passive:!0};if(Ns("resize",c,u),e&&o==="visual"&&e.visualViewport&&Ns(e.visualViewport,"resize",c,u),r){const h=py("(orientation: portrait)");Vt(h,()=>c())}return{width:a,height:l}}var gP=Object.defineProperty,vP=(i,e,t)=>e in i?gP(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,cv=(i,e,t)=>vP(i,typeof e!="symbol"?e+"":e,t);const _P="@tresjs/core",xP="module",yP="4.3.3",bP="pnpm@9.15.5",MP="Declarative ThreeJS using Vue Components",SP="Alvaro Saburido <hola@alvarosaburido.dev> (https://github.com/alvarosabu/)",wP="MIT",TP={type:"git",url:"git+https://github.com/Tresjs/tres.git"},EP=["vue","3d","threejs","three","threejs-vue"],AP=!1,RP={".":{types:"./dist/index.d.ts",import:"./dist/tres.js",require:"./dist/tres.umd.cjs"},"./components":{types:"./dist/src/components/index.d.ts"},"./composables":{types:"./dist/src/composables/index.d.ts"},"./types":{types:"./dist/src/types/index.d.ts"},"./utils":{types:"./dist/src/utils/index.d.ts"},"./*":"./*"},CP="./dist/tres.js",IP="./dist/tres.js",PP="./dist/index.d.ts",LP=["*.d.ts","dist"],DP={access:"public"},NP={dev:"pnpm --filter='./playground/vue' dev","dev:nuxt":"pnpm --filter='./playground/nuxt' dev",build:"vite build",test:"vitest","test:ci":"vitest run","test:ui":"vitest --ui --coverage.enabled=true",release:"release-it",coverage:"vitest run --coverage",lint:"eslint .","lint:fix":"eslint . --fix","docs:dev":"vitepress dev docs","docs:build":"vitepress build docs","docs:serve":"vitepress serve docs","docs:preview":"vitepress preview docs","docs:contributors":"esno scripts/update-contributors.ts"},UP={three:">=0.133",vue:">=3.4"},OP={"@alvarosabu/utils":"^3.2.0","@vue/devtools-api":"^6.6.3","@vueuse/core":"^12.5.0"},FP={"@release-it/conventional-changelog":"^10.0.0","@stackblitz/sdk":"^1.11.0","@tresjs/cientos":"4.1.0","@tresjs/eslint-config":"^1.4.0","@types/three":"^0.173.0","@typescript-eslint/eslint-plugin":"^8.23.0","@typescript-eslint/parser":"^8.23.0","@vitejs/plugin-vue":"^5.2.1","@vitest/coverage-c8":"^0.33.0","@vitest/coverage-v8":"^3.0.5","@vitest/ui":"^3.0.5","@vue/test-utils":"^2.4.6",eslint:"^9.19.0","eslint-plugin-vue":"^9.32.0",esno:"^4.8.0",gsap:"^3.12.7",jsdom:"^26.0.0",kolorist:"^1.8.0",ohmyfetch:"^0.4.21",pathe:"^2.0.2","release-it":"^18.1.2","rollup-plugin-analyzer":"^4.0.0","rollup-plugin-copy":"^3.5.0","rollup-plugin-visualizer":"^5.14.0",sponsorkit:"^16.3.0",three:"^0.173.0",unocss:"^65.4.3",unplugin:"^2.1.2","unplugin-vue-components":"^28.0.0",vite:"^6.1.0","vite-plugin-banner":"^0.8.0","vite-plugin-dts":"4.5.0","vite-plugin-inspect":"^10.1.0","vite-plugin-require-transform":"^1.0.21","vite-svg-loader":"^5.1.0",vitepress:"1.6.3",vitest:"3.0.5",vue:"3.5.13","vue-demi":"^0.14.10"},BP={name:_P,type:xP,version:yP,packageManager:bP,description:MP,author:SP,license:wP,repository:TP,keywords:EP,sideEffects:AP,exports:RP,main:CP,module:IP,types:PP,files:LP,publishConfig:DP,scripts:NP,peerDependencies:UP,dependencies:OP,devDependencies:FP};class zP extends wt{constructor(...e){super(...e),cv(this,"type","HightlightMesh"),cv(this,"createTime"),this.createTime=Date.now()}onBeforeRender(){const e=(Date.now()-this.createTime)/1e3,t=1+.07*Math.sin(2.5*e);this.scale.set(t,t,t)}}function gd(i){return typeof i>"u"}function wu(i){return Array.isArray(i)}function kP(i){return typeof i=="number"}function vy(i){return typeof i=="string"}function hs(i){return typeof i=="function"}function ur(i){return i===Object(i)&&!wu(i)&&!hs(i)}function Rr(i){return ur(i)&&"isObject3D"in i&&!!i.isObject3D}function uv(i){return ur(i)&&"isCamera"in i&&!!i.isCamera}function VP(i){return ur(i)&&"isBufferGeometry"in i&&!!i.isBufferGeometry}function HP(i){return ur(i)&&"isMaterial"in i&&!!i.isMaterial}function GP(i){return ur(i)&&"isLight"in i&&!!i.isLight}function WP(i){return ur(i)&&"isFog"in i&&!!i.isFog}function XP(i){return ur(i)&&"isScene"in i&&!!i.isScene}function fc(i){return Rr(i)||VP(i)||HP(i)||WP(i)}function jP(i){return ur(i)&&!!i.isPrimitive}const _y=(i,e)=>{for(const t of Object.keys(e))e[t]instanceof Object&&Object.assign(e[t],_y(i[t],e[t]));return Object.assign(i||{},e),i},YP="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",qP=ZP(YP);function hv(i){return i&&i.nodeType===1}function dc(i){return i.replace(/-([a-z])/g,(e,t)=>t.toUpperCase())}const $P=/\B([A-Z])/g;function KP(i){return i.replace($P,"-$1").toLowerCase()}function ZP(i,e){const t=Object.create(null),n=i.split(",");for(let r=0;r<n.length;r++)t[n[r]]=!0;return e?r=>!!t[r.toLowerCase()]:r=>!!t[r]}const fv=(i,e)=>{if(!e)return;const t=Array.isArray(e)?e:e.match(/([^[.\]])+/g);return t==null?void 0:t.reduce((n,r)=>n&&n[r],i)},JP=(i,e,t)=>{const n=Array.isArray(e)?e:e.match(/([^[.\]])+/g);n&&n.reduce((r,s,o)=>(r[s]===void 0&&(r[s]={}),o===n.length-1&&(r[s]=t),r[s]),i)};function xy(i,e){if(hv(i)&&hv(e)){const r=i.attributes,s=e.attributes;return r.length!==s.length?!1:Array.from(r).every(({name:o,value:a})=>e.getAttribute(o)===a)}if(i===e)return!0;if(i===null||typeof i!="object"||e===null||typeof e!="object")return!1;const t=Object.keys(i),n=Object.keys(e);if(t.length!==n.length)return!1;for(const r of t)if(!n.includes(r)||!xy(i[r],e[r]))return!1;return!0}function QP(i,e){if(!Array.isArray(i)||!Array.isArray(e)||i.length!==e.length)return!1;for(let t=0;t<i.length;t++)if(!xy(i[t],e[t]))return!1;return!0}function e2(i,e,t,n){const r=l=>{if(l.uuid===e)return l;for(const c of l.children){const u=r(c);if(u)return u}},s=r(i);if(!s){console.warn("Object with UUID not found in the scene.");return}let o=s;for(let l=0;l<t.length-1;l++)if(o[t[l]]!==void 0)o=o[t[l]];else{console.warn(`Property path is not valid: ${t.join(".")}`);return}const a=t[t.length-1];o[a]!==void 0?o[a]=n:console.warn(`Property path is not valid: ${t.join(".")}`)}function t2(i){const e=new Cn({color:11003607,transparent:!0,opacity:.2,depthTest:!1,side:En});return new zP(i.geometry.clone(),e)}function n2(i){return"map"in i}function dv(i){n2(i)&&i.map&&i.map.dispose(),i.dispose()}function yy(i){var e,t;if(i.parent&&((e=i.removeFromParent)==null||e.call(i)),delete i.__tres,[...i.children].forEach(n=>yy(n)),!(i instanceof Rs)){const n=i;i&&((t=i.dispose)==null||t.call(i)),n.geometry&&n.geometry.dispose(),Array.isArray(n.material)?n.material.forEach(r=>dv(r)):n.material&&dv(n.material)}}function i2(i,e){let t=0;for(let n=0;n<i.length;n++)e(i[n],n)&&(i[t]=i[n],t++);return i.length=t,i}function vd(i,e){let t=i;if(e.includes("-")){const n=e.split("-");let r=n.shift();for(;t&&n.length;)r in t?(t=t[r],r=n.shift()):r=pv(r,n.shift());return{target:t,key:pv(r,...n)}}else return{target:t,key:e}}function pv(...i){return i.map((e,t)=>t===0?e:e.charAt(0).toUpperCase()+e.slice(1)).join("")}const mv=/-\d+$/;function r2(i,e,t){if(vy(t)){if(mv.test(t)){const s=t.replace(mv,""),{target:o,key:a}=vd(i,s);if(!Array.isArray(o[a])){const l=o[a],c=[];c.__tresDetach=()=>{c.every(u=>gd(u))&&(o[a]=l)},o[a]=c}}const{target:n,key:r}=vd(i,t);e.__tres.previousAttach=n[r],n[r]=Co(e)}else e.__tres.previousAttach=t(i,e)}function s2(i,e,t){var n,r,s;if(vy(t)){const{target:o,key:a}=vd(i,t),l=e.__tres.previousAttach;l===void 0?delete o[a]:o[a]=l,"__tresDetach"in o&&o.__tresDetach()}else(r=(n=e.__tres)==null?void 0:n.previousAttach)==null||r.call(n,i,e);(s=e.__tres)==null||delete s.previousAttach}function cs(i,e,t){const n=i;return n.__tres={type:"unknown",eventCount:0,root:t,handlers:{},memoizedProps:{},objects:[],parent:null,previousAttach:null,...e},n.__tres.attach||(n.isMaterial?n.__tres.attach="material":n.isBufferGeometry?n.__tres.attach="geometry":n.isFog&&(n.__tres.attach="fog")),n}function by(i){var e;const t=(e=i==null?void 0:i.__tres)==null?void 0:e.root;t&&t.render&&t.render.canBeInvalidated.value&&t.invalidate()}function o2(i,e,t){var n;if(!hs(i.setPixelRatio))return;let r=0;if(t&&wu(t)){const s=t;if(s.length>=2){const[o,a]=s;r=Bi.clamp(e,o,a)}}else kP(t)?r=t:r=e;r!==((n=i.getPixelRatio)==null?void 0:n.call(i))&&i.setPixelRatio(r)}function a2(i,e,t,n,r){const s=[...e.__tres.objects],o=Co(e);if(i=Co(i),o===i)return!0;const a=cs(i,e.__tres??{},r),l=e.parent??e.__tres.parent??null,c={...e.__tres.memoizedProps};delete c.object;for(const u of s)My(u,r),Sy(u,r);o.__tres.objects=[],n.remove(e);for(const[u,h]of Object.entries(c))n.patchProp(a,u,a[u],h);t(i),n.insert(e,l);for(const u of s)n.insert(u,e);return!0}function Co(i){return jP(i)?(i.object.__tres=i.__tres,i.object):i}function My(i,e){var t,n,r,s;const o=((t=i.__tres)==null?void 0:t.parent)||e.scene.value;i.__tres&&(i.__tres.parent=null),o&&o.__tres&&"objects"in o.__tres&&i2(o.__tres.objects,a=>a!==i),(n=i.__tres)!=null&&n.attach?s2(o,i,i.__tres.attach):((s=(r=i.parent)==null?void 0:r.remove)==null||s.call(r,Co(i)),i.parent=null)}function Sy(i,e){var t;(t=i.traverse)==null||t.call(i,n=>{var r;e.deregisterCamera(n),(r=e.eventManager)==null||r.deregisterPointerMissedObject(n)}),e.deregisterCamera(i),by(i)}const l2=({sizes:i})=>{const e=Pt([]),t=xt(()=>e.value[0]),n=o=>{const a=o instanceof ol?o:e.value.find(c=>c.uuid===o);if(!a)return;const l=e.value.filter(({uuid:c})=>c!==a.uuid);e.value=[a,...l]},r=(o,a=!1)=>{if(uv(o)){const l=o;if(e.value.some(({uuid:c})=>c===l.uuid))return;a?n(l):e.value.push(l)}},s=o=>{if(uv(o)){const a=o;e.value=e.value.filter(({uuid:l})=>l!==a.uuid)}};return Lo(()=>{i.aspectRatio.value&&e.value.forEach(o=>{!o.manual&&(o instanceof St||c2(o))&&(o instanceof St?o.aspect=i.aspectRatio.value:(o.left=i.width.value*-.5,o.right=i.width.value*.5,o.top=i.height.value*.5,o.bottom=i.height.value*-.5),o.updateProjectionMatrix())})}),Oi(()=>{e.value=[]}),{camera:t,cameras:e,registerCamera:r,deregisterCamera:s,setCameraActive:n}};function c2(i){return i.hasOwnProperty("isOrthographicCamera")&&i.isOrthographicCamera}const Tu="[TresJS ▲ ■ ●] ";function u2(...i){typeof i[0]=="string"?i[0]=Tu+i[0]:i.unshift(Tu),console.error(...i)}function h2(...i){typeof i[0]=="string"?i[0]=Tu+i[0]:i.unshift(Tu),console.warn(...i)}function f2(i,e){}function wy(){return{logError:u2,logWarning:h2,logMessage:f2}}const _d=Pt({}),xd=i=>Object.assign(_d.value,i);function Tf(){const i=new Map,e=new Set;let t=0,n=!1;const r=()=>{const o=Array.from(i.entries()).sort((a,l)=>{const c=a[1].priority-l[1].priority;return c===0?a[1].addI-l[1].addI:c});e.clear(),o.forEach(a=>e.add(a[0]))},s=o=>{i.delete(o),e.delete(o)};return{on:(o,a=0)=>{i.set(o,{priority:a,addI:t++});const l=()=>s(o);return Nr(l),n=!0,{off:l}},off:s,trigger:(...o)=>{n&&(r(),n=!1),e.forEach(a=>a(...o))},dispose:()=>{i.clear(),e.clear()},get count(){return i.size}}}function d2(){let i=!0,e=!0,t=!1;const n=new vh(!1),r=Pt(n.running),s=Pt(!1);let o;const a=Bi.generateUUID();let l=null;const c=Tf(),u=Tf(),h=Tf();w();let f={};function d(E){f=E}function p(E,S,x=0){switch(S){case"before":return c.on(E,x);case"render":return l||(l=E),u.dispose(),u.on(E);case"after":return h.on(E,x)}}function v(){e&&(e=!1,w(),C())}function m(){e=!0,w(),cancelAnimationFrame(o)}function g(){t=!1,w()}function M(){t=!0,w()}function b(){s.value=!0}function y(){s.value=!1}function C(){if(!i){o=requestAnimationFrame(C);return}const E=n.getDelta(),S=n.getElapsedTime(),x={camera:Ve(f.camera),scene:Ve(f.scene),renderer:Ve(f.renderer),raycaster:Ve(f.raycaster),controls:Ve(f.controls),invalidate:f.invalidate,advance:f.advance},_={delta:E,elapsed:S,clock:n,...x};r.value&&c.trigger(_),s.value||(u.count?u.trigger(_):l&&l(_)),r.value&&h.trigger(_),o=requestAnimationFrame(C)}function w(){const E=!e&&!t;n.running!==E&&(n.running?n.stop():n.start()),r.value=n.running}return{loopId:a,register:(E,S,x)=>p(E,S,x),start:v,stop:m,pause:M,resume:g,pauseRender:b,resumeRender:y,isRenderPaused:s,isActive:r,setContext:d,setReady:E=>i=E}}function kp(i){let e=0;return i.traverse(t=>{if(t.isMesh&&t.geometry&&t.type!=="HightlightMesh"){const n=t.geometry,r=n.attributes.position.count*3*Float32Array.BYTES_PER_ELEMENT,s=n.index?n.index.count*Uint32Array.BYTES_PER_ELEMENT:0,o=n.attributes.normal?n.attributes.normal.count*3*Float32Array.BYTES_PER_ELEMENT:0,a=n.attributes.uv?n.attributes.uv.count*2*Float32Array.BYTES_PER_ELEMENT:0,l=r+s+o+a;e+=l}}),e}function p2(i){return(i/1024).toFixed(2)}const m2=Number.parseInt(Do.replace("dev",""));function g2(i){return i instanceof we?i:Array.isArray(i)?new we(...i):new we(i)}const pc={realistic:{shadows:!0,physicallyCorrectLights:!0,outputColorSpace:Bt,toneMapping:zu,toneMappingExposure:3,shadowMap:{enabled:!0,type:Zd}},flat:{toneMapping:gi,toneMappingExposure:1}};function v2({canvas:i,options:e,contextParts:{sizes:t,render:n,invalidate:r,advance:s}}){const o=xt(()=>({alpha:rn(e.alpha)??!0,depth:rn(e.depth),canvas:di(i),context:rn(e.context),stencil:rn(e.stencil),antialias:rn(e.antialias)??!0,precision:rn(e.precision),powerPreference:rn(e.powerPreference),premultipliedAlpha:rn(e.premultipliedAlpha),preserveDrawingBuffer:rn(e.preserveDrawingBuffer),logarithmicDepthBuffer:rn(e.logarithmicDepthBuffer),failIfMajorPerformanceCaveat:rn(e.failIfMajorPerformanceCaveat)})),a=ft(new Aa(o.value));function l(){e.renderMode==="on-demand"&&r()}Vt(o,()=>{a.value.dispose(),a.value=new Aa(o.value),l()}),Vt([t.width,t.height],()=>{a.value.setSize(t.width.value,t.height.value),l()},{immediate:!0}),Vt(()=>e.clearColor,l);const{pixelRatio:c}=lP(),{logError:u}=wy(),h=(()=>{const d=new Aa,p={shadowMap:{enabled:d.shadowMap.enabled,type:d.shadowMap.type},toneMapping:d.toneMapping,toneMappingExposure:d.toneMappingExposure,outputColorSpace:d.outputColorSpace};return d.dispose(),p})(),f=rn(e.renderMode);return f==="on-demand"&&r(),f==="manual"&&setTimeout(()=>{s()},100),Lo(()=>{const d=rn(e.preset);d&&(d in pc||u(`Renderer Preset must be one of these: ${Object.keys(pc).join(", ")}`),_y(a.value,pc[d])),o2(a.value,c.value,rn(e.dpr)),f==="always"&&(n.frames.value=Math.max(1,n.frames.value));const p=(g,M)=>{const b=rn(g),y=()=>{if(d)return fv(pc[d],M)};if(b!==void 0)return b;const C=y();return C!==void 0?C:fv(h,M)},v=(g,M)=>JP(a.value,M,p(g,M));v(e.shadows,"shadowMap.enabled"),v(e.toneMapping??zu,"toneMapping"),v(e.shadowMapType,"shadowMap.type"),m2<150&&v(!e.useLegacyLights,"physicallyCorrectLights"),v(e.outputColorSpace,"outputColorSpace"),v(e.toneMappingExposure,"toneMappingExposure");const m=p(e.clearColor,"clearColor");m&&a.value.setClearColor(m?g2(m):new we(0))}),Oi(()=>{a.value.dispose(),a.value.forceContextLoss()}),{renderer:a}}function _2(i,e,t=10){const n=rn(i)?mP():uP(xt(()=>rn(e).parentElement)),r=Ms(lv(n.width,t)),s=Ms(lv(n.height,t)),o=xt(()=>r.value/s.value);return{height:s,width:r,aspectRatio:o}}const x2=(i,e)=>{const t=xt(()=>e.renderer.value.domElement),n=ft([]),{x:r,y:s}=pP({target:t});let o=0;const{width:a,height:l,top:c,left:u}=cP(t),h=({x:oe,y:ye})=>{if(t.value)return{x:(oe-u.value)/a.value*2-1,y:-((ye-c.value)/l.value)*2+1}},f=({x:oe,y:ye})=>{if(e.camera.value)return e.raycaster.value.setFromCamera(new pe(oe,ye),e.camera.value),n.value=e.raycaster.value.intersectObjects(i.value,!0),n.value},d=oe=>{const ye=h({x:(oe==null?void 0:oe.clientX)??r.value,y:(oe==null?void 0:oe.clientY)??s.value});return ye?f(ye)||[]:[]},p=Qn(),v=Qn(),m=Qn(),g=Qn(),M=Qn(),b=Qn(),y=Qn(),C=Qn();function w(oe){const ye={};for(const Ce in oe)typeof Ce!="function"&&(ye[Ce]=oe[Ce]);return ye}const E=(oe,ye)=>{var Ce,le,ge;const be=w(ye),Z=new F(ye==null?void 0:ye.clientX,ye==null?void 0:ye.clientY,0).unproject((Ce=e.camera)==null?void 0:Ce.value);oe.trigger({...be,intersections:n.value,unprojectedPoint:Z,ray:(le=e.raycaster)==null?void 0:le.value.ray,camera:(ge=e.camera)==null?void 0:ge.value,sourceEvent:ye,delta:o,stopPropagating:!1})};let S;const x=oe=>{d(oe),E(m,oe),S=oe},_=()=>{S&&x(S)};let A,N,B;const V=oe=>{var ye;A=(ye=n.value[0])==null?void 0:ye.object,o=0,N=new pe((oe==null?void 0:oe.clientX)??r.value,(oe==null?void 0:oe.clientY)??s.value),E(M,oe)};let X,z=!1;const te=oe=>{var ye,Ce,le;oe instanceof PointerEvent&&(n.value.length===0&&E(b,oe),A===((ye=n.value[0])==null?void 0:ye.object)&&(B=new pe((oe==null?void 0:oe.clientX)??r.value,(oe==null?void 0:oe.clientY)??s.value),o=N==null?void 0:N.distanceTo(B),oe.button===0?(E(p,oe),X===((Ce=n.value[0])==null?void 0:Ce.object)?z=!0:(X=(le=n.value[0])==null?void 0:le.object,z=!1)):oe.button===2&&E(y,oe)),E(g,oe))},J=oe=>{z&&(E(v,oe),X=void 0,z=!1)},ue=oe=>E(m,oe),de=oe=>E(C,oe);return t.value.addEventListener("pointerup",te),t.value.addEventListener("pointerdown",V),t.value.addEventListener("pointermove",x),t.value.addEventListener("pointerleave",ue),t.value.addEventListener("dblclick",J),t.value.addEventListener("wheel",de),Oi(()=>{t!=null&&t.value&&(t.value.removeEventListener("pointerup",te),t.value.removeEventListener("pointerdown",V),t.value.removeEventListener("pointermove",x),t.value.removeEventListener("pointerleave",ue),t.value.removeEventListener("dblclick",J),t.value.removeEventListener("wheel",de))}),{intersects:n,onClick:oe=>p.on(oe).off,onDblClick:oe=>v.on(oe).off,onContextMenu:oe=>y.on(oe).off,onPointerMove:oe=>m.on(oe).off,onPointerUp:oe=>g.on(oe).off,onPointerDown:oe=>M.on(oe).off,onPointerMissed:oe=>b.on(oe).off,onWheel:oe=>C.on(oe).off,forceUpdate:_}};function Ef(i,e){if(Array.isArray(i))for(const t of i)t(e);typeof i=="function"&&i(e)}function y2(i,e,t){var n;const r=ft(),s=ft();i&&(r.value=i),e&&(s.value=e);const o=x=>{var _;return((_=x.__tres)==null?void 0:_.eventCount)>0},a=x=>{var _;return((_=x.children)==null?void 0:_.some(A=>a(A)))||o(x)},l=ft(((n=r.value)==null?void 0:n.children).filter(a)||[]);function c(x,_){const A=[],N=()=>_.stopPropagating=!0;_.stopPropagation=N;for(const B of _==null?void 0:_.intersections){if(_.stopPropagating)return;_={..._,...B};const{object:V}=B;_.eventObject=V,Ef(V[x],_),A.push(V);let X=V.parent;for(;X!==null&&!_.stopPropagating&&!A.includes(X);)_.eventObject=X,Ef(X[x],_),A.push(X),X=X.parent;const z=KP(x.slice(2));t(z,{intersection:B,event:_})}}const{onClick:u,onDblClick:h,onContextMenu:f,onPointerMove:d,onPointerDown:p,onPointerUp:v,onPointerMissed:m,onWheel:g,forceUpdate:M}=x2(l,e);v(x=>c("onPointerUp",x)),p(x=>c("onPointerDown",x)),u(x=>c("onClick",x)),h(x=>c("onDoubleClick",x)),f(x=>c("onContextMenu",x)),g(x=>c("onWheel",x));let b=[];d(x=>{const _=x.intersections.map(({object:N})=>N),A=x.intersections;b.forEach(({object:N})=>{_.includes(N)||(x.intersections=b,c("onPointerLeave",x),c("onPointerOut",x))}),x.intersections=A,x.intersections.forEach(({object:N})=>{b.includes(N)||(c("onPointerEnter",x),c("onPointerOver",x))}),c("onPointerMove",x),b=x.intersections});const y=[];m(x=>{const _=()=>x.stopPropagating=!0;x.stopPropagation=_,y.forEach(A=>{x.stopPropagating||(x.eventObject=A,Ef(A.onPointerMissed,x))}),t("pointer-missed",{event:x})});function C(x){fc(x)&&Rr(x)&&l.value.push(x)}function w(x){if(fc(x)&&Rr(x)){const _=l.value.indexOf(x);_>-1&&l.value.splice(_,1)}}function E(x){fc(x)&&Rr(x)&&x.onPointerMissed&&y.push(x)}function S(x){if(fc(x)&&Rr(x)){const _=y.indexOf(x);_>-1&&y.splice(_,1)}}return e.eventManager={forceUpdate:M,registerObject:C,deregisterObject:w,registerPointerMissedObject:E,deregisterPointerMissedObject:S},{forceUpdate:M,registerObject:C,deregisterObject:w,registerPointerMissedObject:E,deregisterPointerMissedObject:S}}function b2(i,e,t=100){t=t<=0?100:t;const n=Qn(),r=new Set;let s=!1,o=!1,a=null;function l(){a&&clearTimeout(a),!o&&!s&&i()?(n.trigger(e),r.forEach(h=>h()),r.clear(),s=!0):!o&&!s&&(a=setTimeout(l,t))}function c(){o=!0,a&&clearTimeout(a)}l();const u=(h,...f)=>{h(...f)};return{on:h=>{if(s)return u(h,e),{off:()=>{}};{const f=n.on(h);return r.add(f.off),n.on(h)}},off:n.off,trigger:n.trigger,clear:n.clear,cancel:c}}const Af=new WeakMap;function M2(i){if(i=i||zo(),Af.has(i))return Af.get(i);const e=100,t=Date.now(),n=b2(()=>{if(Date.now()-t>=e)return!0;{const r=i.renderer.value,s=(r==null?void 0:r.domElement)||{width:0,height:0};return!!(r&&s.width>0&&s.height>0)}},i);return Af.set(i,n),n}function S2({scene:i,canvas:e,windowSize:t,rendererOptions:n,emit:r}){const s=ft(i),o=_2(t,e),{camera:a,cameras:l,registerCamera:c,deregisterCamera:u,setCameraActive:h}=l2({sizes:o}),f={mode:Pt(n.renderMode||"always"),priority:Pt(0),frames:Pt(0),maxFrames:60,canBeInvalidated:xt(()=>f.mode.value==="on-demand"&&f.frames.value===0)};function d(B=1){n.renderMode==="on-demand"&&(f.frames.value=Math.min(f.maxFrames,f.frames.value+B))}function p(){n.renderMode==="manual"&&(f.frames.value=1)}const{renderer:v}=v2({canvas:e,options:n,contextParts:{sizes:o,render:f,invalidate:d,advance:p}}),m={sizes:o,scene:s,camera:a,cameras:Ms(l),renderer:v,raycaster:ft(new ny),controls:Pt(null),perf:{maxFrames:160,fps:{value:0,accumulator:[]},memory:{currentMem:0,allocatedMem:0,accumulator:[]}},render:f,advance:p,extend:xd,invalidate:d,registerCamera:c,setCameraActive:h,deregisterCamera:u,loop:d2()};Ir("useTres",m),m.scene.value.__tres={root:m},m.loop.register(()=>{a.value&&f.frames.value>0&&(v.value.render(i,a.value),r("render",m.renderer.value)),f.priority.value=0,f.mode.value==="always"?f.frames.value=1:f.frames.value=Math.max(0,f.frames.value-1)},"render");const{on:g,cancel:M}=M2(m);m.loop.setReady(!1),m.loop.start(),g(()=>{r("ready",m),m.loop.setReady(!0),y2(i,m,r)}),Oi(()=>{M(),m.loop.stop()});const b=100,y=hP({every:b}),{isSupported:C,memory:w}=fP({interval:b}),E=160;let S=performance.now();const x=({timestamp:B})=>{m.scene.value&&(m.perf.memory.allocatedMem=kp(m.scene.value)),B-S>=b&&(S=B,m.perf.fps.accumulator.push(y.value),m.perf.fps.accumulator.length>E&&m.perf.fps.accumulator.shift(),m.perf.fps.value=y.value,C.value&&w.value&&(m.perf.memory.accumulator.push(w.value.usedJSHeapSize/1024/1024),m.perf.memory.accumulator.length>E&&m.perf.memory.accumulator.shift(),m.perf.memory.currentMem=m.perf.memory.accumulator.reduce((V,X)=>V+X,0)/m.perf.memory.accumulator.length))};let _=0;const A=1,{pause:N}=zp(({delta:B})=>{window.__TRES__DEVTOOLS__&&(x({timestamp:performance.now()}),_+=B,_>=A&&(window.__TRES__DEVTOOLS__.cb(m),_=0))},{immediate:!0});return Oi(()=>{N()}),m}function zo(){const i=ti("useTres");if(!i)throw new Error("useTresContext must be used together with useTresContextProvider");return i}function Ty(){const{camera:i,scene:e,renderer:t,loop:n,raycaster:r,controls:s,invalidate:o,advance:a}=zo();n.setContext({camera:i,scene:e,renderer:t,raycaster:r,controls:s,invalidate:o,advance:a});function l(h,f=0){return n.register(h,"before",f)}function c(h){return n.register(h,"render")}function u(h,f=0){return n.register(h,"after",f)}return{pause:n.pause,resume:n.resume,pauseRender:n.pauseRender,resumeRender:n.resumeRender,isActive:n.isActive,onBeforeRender:l,render:c,onAfterRender:u}}const w2=Qn(),T2=Qn(),Ey=Qn(),Ca=new vh;let Tc=0,Ec=0;zp(()=>{w2.trigger({delta:Tc,elapsed:Ec,clock:Ca}),T2.trigger({delta:Tc,elapsed:Ec,clock:Ca}),Ey.trigger({delta:Tc,elapsed:Ec,clock:Ca})},{immediate:!1});Ey.on(()=>{Tc=Ca.getDelta(),Ec=Ca.getElapsedTime()});function E2(i,e={},t={}){let n=i;const r=a=>{n=a};let s=new Proxy({},{});const o={has(a,l){return l in e||l in n},get(a,l,c){return l in e?e[l](n):n[l]},set(a,l,c){const u=t[l];return u&&typeof u=="function"?u(c,n,s,r):n[l]=c,!0}};return s=new Proxy({},o),s}const{logError:gv}=wy(),vv=["onClick","onContextMenu","onPointerMove","onPointerEnter","onPointerLeave","onPointerOver","onPointerOut","onDoubleClick","onPointerDown","onPointerUp","onPointerCancel","onPointerMissed","onLostPointerCapture","onWheel"],A2=i=>{const e=i.scene.value;function t(c,u,h,f){if(f||(f={}),f.args||(f.args=[]),c==="template"||qP(c))return null;let d=c.replace("Tres",""),p;if(c==="primitive"){(!ur(f.object)||kt(f.object))&&gv("Tres primitives need an 'object' prop, whose value is an object or shallowRef<object>"),d=f.object.type;const v={};p=E2(f.object,{object:m=>m,isPrimitive:()=>!0,__tres:()=>v},{object:(m,g,M,b)=>{a2(m,M,b,{patchProp:s,remove:r,insert:n},i)},__tres:m=>{Object.assign(v,m)}})}else{const v=_d.value[d];v||gv(`${d} is not defined on the THREE namespace. Use extend to add it to the catalog.`),p=new v(...f.args)}return p?(p.isCamera&&(f!=null&&f.position||p.position.set(3,3,3),f!=null&&f.lookAt||p.lookAt(0,0,0)),p=cs(p,{...p.__tres,type:d,memoizedProps:f,eventCount:0,primitive:c==="primitive",attach:f.attach},i),p):null}function n(c,u){var h,f,d;if(!c)return;u=u||e;const p=c.__tres?c:cs(c,{},i),v=u.__tres?u:cs(u,{},i);c=Co(p),u=Co(v),c.__tres&&((h=c.__tres)==null?void 0:h.eventCount)>0&&((f=i.eventManager)==null||f.registerObject(c)),i.registerCamera(c),(d=i.eventManager)==null||d.registerPointerMissedObject(c),p.__tres.attach?r2(v,p,p.__tres.attach):Rr(c)&&Rr(v)&&(v.add(c),c.dispatchEvent({type:"added"})),p.__tres.parent=v,v.__tres.objects&&!v.__tres.objects.includes(p)&&v.__tres.objects.push(p)}function r(c,u){var h,f,d,p;if(!c)return;c!=null&&c.__tres&&((h=c.__tres)==null?void 0:h.eventCount)>0&&((f=i.eventManager)==null||f.deregisterObject(c)),u=gd(u)?"default":u;const v=(d=c.__tres)==null?void 0:d.dispose;gd(v)||(v===null?u=!1:u=v);const m=(p=c.__tres)==null?void 0:p.primitive,g=u==="default"?!m:!!u;if(c.__tres&&"objects"in c.__tres&&[...c.__tres.objects].forEach(M=>r(M,u)),g&&c.children&&[...c.children].forEach(M=>r(M,u)),My(c,i),Sy(c,i),g&&!XP(c)){if(hs(u))u(c);else if(hs(c.dispose))try{c.dispose()}catch{}}"__tres"in c&&delete c.__tres}function s(c,u,h,f){var d,p;if(!c)return;let v=c,m=u;if(c.__tres&&(c.__tres.memoizedProps[u]=f),u==="attach"){const y=((d=c.__tres)==null?void 0:d.parent)||c.parent;r(c),cs(c,{attach:f},i),y&&n(c,y);return}if(u==="dispose"){c.__tres||(c=cs(c,{},i)),c.__tres.dispose=f;return}if(Rr(c)&&m==="blocks-pointer-events"){f||f===""?c[m]=f:delete c[m];return}vv.includes(u)&&c.__tres&&(c.__tres.eventCount+=1);let g=dc(m),M=v==null?void 0:v[g];if(m==="args"){const y=c,C=h??[],w=f??[],E=((p=c.__tres)==null?void 0:p.type)||c.type;E&&C.length&&!QP(C,w)&&(v=Object.assign(y,new _d.value[E](...f)));return}if(v.type==="BufferGeometry"){if(m==="args")return;v.setAttribute(dc(m),new lt(...f));return}if(m.includes("-")&&M===void 0){const y=m.split("-");M=y.reduce((C,w)=>C[dc(w)],v),m=y.pop(),g=m,M!=null&&M.set||(v=y.reduce((C,w)=>C[dc(w)],v))}let b=f;if(b===""&&(b=!0),hs(M)){vv.includes(u)||(wu(b)?c[g](...b):c[g](b)),g.startsWith("on")&&hs(b)&&(v[g]=b);return}!(M!=null&&M.set)&&!hs(M)?v[g]=b:M.constructor===b.constructor&&M!=null&&M.copy?M==null||M.copy(b):wu(b)?M.set(...b):!M.isColor&&M.setScalar?M.setScalar(b):M.set(b),by(c)}function o(c){var u;return((u=c==null?void 0:c.__tres)==null?void 0:u.parent)||null}function a(c){const u=cs(new ct,{type:"Comment"},i);return u.name=c,u}function l(c){var u;const h=o(c),f=((u=h==null?void 0:h.__tres)==null?void 0:u.objects)||[],d=f.indexOf(c);return d<0||d>=f.length-1?null:f[d+1]}return{insert:n,remove:r,createElement:t,patchProp:s,parentNode:o,createText:()=>{},createComment:a,setText:()=>{},setElementText:()=>{},nextSibling:l,querySelector:()=>{},setScopeId:()=>{},cloneNode:()=>{},insertStaticContent:()=>{}}};function R2(){return Ay().__VUE_DEVTOOLS_GLOBAL_HOOK__}function Ay(){return typeof navigator<"u"&&typeof window<"u"?window:typeof globalThis<"u"?globalThis:{}}const C2=typeof Proxy=="function",I2="devtools-plugin:setup",P2="plugin:settings:set";let ta,yd;function L2(){var i;return ta!==void 0||(typeof window<"u"&&window.performance?(ta=!0,yd=window.performance):typeof globalThis<"u"&&!((i=globalThis.perf_hooks)===null||i===void 0)&&i.performance?(ta=!0,yd=globalThis.perf_hooks.performance):ta=!1),ta}function D2(){return L2()?yd.now():Date.now()}class N2{constructor(e,t){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=e,this.hook=t;const n={};if(e.settings)for(const o in e.settings){const a=e.settings[o];n[o]=a.defaultValue}const r=`__vue-devtools-plugin-settings__${e.id}`;let s=Object.assign({},n);try{const o=localStorage.getItem(r),a=JSON.parse(o);Object.assign(s,a)}catch{}this.fallbacks={getSettings(){return s},setSettings(o){try{localStorage.setItem(r,JSON.stringify(o))}catch{}s=o},now(){return D2()}},t&&t.on(P2,(o,a)=>{o===this.plugin.id&&this.fallbacks.setSettings(a)}),this.proxiedOn=new Proxy({},{get:(o,a)=>this.target?this.target.on[a]:(...l)=>{this.onQueue.push({method:a,args:l})}}),this.proxiedTarget=new Proxy({},{get:(o,a)=>this.target?this.target[a]:a==="on"?this.proxiedOn:Object.keys(this.fallbacks).includes(a)?(...l)=>(this.targetQueue.push({method:a,args:l,resolve:()=>{}}),this.fallbacks[a](...l)):(...l)=>new Promise(c=>{this.targetQueue.push({method:a,args:l,resolve:c})})})}async setRealTarget(e){this.target=e;for(const t of this.onQueue)this.target.on[t.method](...t.args);for(const t of this.targetQueue)t.resolve(await this.target[t.method](...t.args))}}function U2(i,e){const t=i,n=Ay(),r=R2(),s=C2&&t.enableEarlyProxy;if(r&&(n.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__||!s))r.emit(I2,i,e);else{const o=s?new N2(t,r):null;(n.__VUE_DEVTOOLS_PLUGINS__=n.__VUE_DEVTOOLS_PLUGINS__||[]).push({pluginDescriptor:t,setupFn:e,proxy:o}),o&&e(o.proxiedTarget)}}function O2(i,e){const t=`▲ ■ ●${i}`;typeof _v=="function"?_v(t,e):console.log(t)}function _v(i,e){throw new Error(i+e)}const Ry=i=>{const e={id:i.uuid,label:i.type,children:[],tags:[]};i.name!==""&&e.tags.push({label:i.name,textColor:5750629,backgroundColor:15793395});const t=kp(i);return t>0&&e.tags.push({label:`${p2(t)} KB`,textColor:15707189,backgroundColor:16775644,tooltip:"Memory usage"}),i.type.includes("Light")&&(GP(i)&&e.tags.push({label:`${i.intensity}`,textColor:9738662,backgroundColor:16316922,tooltip:"Intensity"}),e.tags.push({label:`#${new we(i.color).getHexString()}`,textColor:9738662,backgroundColor:16316922,tooltip:"Color"})),i.type.includes("Camera")&&(e.tags.push({label:`${i.fov}°`,textColor:9738662,backgroundColor:16316922,tooltip:"Field of view"}),e.tags.push({label:`x: ${Math.round(i.position.x)} y: ${Math.round(i.position.y)} z: ${Math.round(i.position.z)}`,textColor:9738662,backgroundColor:16316922,tooltip:"Position"})),e};function Cy(i,e,t=""){i.children.forEach(n=>{if(n.type==="HightlightMesh"||t&&!n.type.includes(t)&&!n.name.includes(t))return;const r=Ry(n);e.children.push(r),Cy(n,r,t)})}const F2=[],na="tres:inspector",B2=Za({sceneGraph:null});function z2(i,e){U2({id:"dev.esm.tres",label:"TresJS 🪐",logo:"https://raw.githubusercontent.com/Tresjs/tres/main/public/favicon.svg",packageName:"tresjs",homepage:"https://tresjs.org",componentStateTypes:F2,app:i},t=>{typeof t.now!="function"&&O2("You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html."),t.addInspector({id:na,label:"TresJS 🪐",icon:"account_tree",treeFilterPlaceholder:"Search instances"}),setInterval(()=>{t.sendInspectorTree(na)},1e3),setInterval(()=>{t.notifyComponentUpdate()},5e3),t.on.getInspectorTree(s=>{if(s.inspectorId===na){const o=Ry(e.scene.value);Cy(e.scene.value,o,s.filter),B2.sceneGraph=o,s.rootNodes=[o]}});let n=null,r=null;t.on.getInspectorState(s=>{var o;if(s.inspectorId===na){const[a]=e.scene.value.getObjectsByProperty("uuid",s.nodeId);if(!a)return;if(r&&n&&n.parent&&r.remove(n),a.isMesh){const l=t2(a);a.add(l),n=l,r=a}s.state={object:Object.entries(a).map(([l,c])=>l==="children"?{key:l,value:c.filter(u=>u.type!=="HightlightMesh")}:{key:l,value:c,editable:!0}).filter(({key:l})=>l!=="parent")},a.isScene&&(s.state={...s.state,state:[{key:"Scene Info",value:{objects:a.children.length,memory:kp(a),calls:e.renderer.value.info.render.calls,triangles:e.renderer.value.info.render.triangles,points:e.renderer.value.info.render.points,lines:e.renderer.value.info.render.lines}},{key:"Programs",value:((o=e.renderer.value.info.programs)==null?void 0:o.map(l=>({...l,programName:l.name})))||[]}]})}}),t.on.editInspectorState(s=>{s.inspectorId===na&&e2(e.scene.value,s.nodeId,s.path,s.state.value)})})}const k2=["data-scene","data-tres"],V2=Ui({__name:"TresCanvas",props:{shadows:{type:Boolean,default:void 0},clearColor:{},toneMapping:{},shadowMapType:{},useLegacyLights:{type:Boolean,default:void 0},outputColorSpace:{},toneMappingExposure:{},renderMode:{default:"always"},dpr:{},camera:{},preset:{},windowSize:{type:Boolean,default:void 0},enableProvideBridge:{type:Boolean,default:!0},context:{},alpha:{type:Boolean,default:void 0},premultipliedAlpha:{type:Boolean},antialias:{type:Boolean,default:void 0},stencil:{type:Boolean,default:void 0},preserveDrawingBuffer:{type:Boolean,default:void 0},powerPreference:{},depth:{type:Boolean,default:void 0},failIfMajorPerformanceCaveat:{type:Boolean,default:void 0},precision:{},logarithmicDepthBuffer:{type:Boolean,default:void 0},reverseDepthBuffer:{type:Boolean}},emits:["render","click","double-click","context-menu","pointer-move","pointer-up","pointer-down","pointer-enter","pointer-leave","pointer-over","pointer-out","pointer-missed","wheel","ready"],setup(i,{expose:e,emit:t}){const n=i,r=t,s=G_(),o=Pt(),a=ft(new Rs),l=xo();xd(jI);const c=(p,v=!1)=>Ui({setup(){var m;const g=(m=xo())==null?void 0:m.appContext;g&&(g.app=l==null?void 0:l.appContext.app);const M={};function b(y){y&&(y.parent&&b(y.parent),y.provides&&Object.assign(M,y.provides))}return l!=null&&l.parent&&n.enableProvideBridge&&(b(l.parent),Reflect.ownKeys(M).forEach(y=>{Ir(y,M[y])})),Ir("useTres",p),Ir("extend",xd),typeof window<"u"&&z2(g==null?void 0:g.app,p),()=>Uc(Tn,null,v?[]:s.default())}}),u=(p,v=!1)=>{const m=c(p,v),{render:g}=r0(A2(p));g(Uc(m),a.value)},h=(p,v=!1)=>{yy(p.scene.value),v&&(p.renderer.value.dispose(),p.renderer.value.renderLists.dispose(),p.renderer.value.forceContextLoss()),a.value.__tres={root:p}},f=ft(null);e({context:f,dispose:()=>h(f.value,!0)});const d=()=>{h(f.value),u(f.value,!0)};return Qa(()=>{const p=o;f.value=S2({scene:a.value,canvas:p,windowSize:n.windowSize??!1,rendererOptions:n,emit:r});const{registerCamera:v,camera:m,cameras:g,deregisterCamera:M}=f.value;u(f.value);const b=()=>{const y=new St(45,window.innerWidth/window.innerHeight,.1,1e3);y.position.set(3,3,3),y.lookAt(0,0,0),v(y);const C=Lo(()=>{g.value.length>=2&&(y.removeFromParent(),M(y),C==null||C())})};Vt(()=>n.camera,(y,C)=>{y&&v(y),C&&(C.removeFromParent(),M(C))},{immediate:!0}),m.value||b()}),Oi(d),(p,v)=>(dn(),ui("canvas",{ref_key:"canvas",ref:o,"data-scene":a.value.uuid,class:Lu(p.$attrs.class),"data-tres":`tresjs ${Ve(BP).version}`,style:Pu({display:"block",width:"100%",height:"100%",position:p.windowSize?"fixed":"relative",top:0,left:0,pointerEvents:"auto",touchAction:"none",...p.$attrs.style})},null,14,k2))}}),H2={install(i){i.component("TresCanvas",V2)}};/*!
 * pinia v3.0.2
 * (c) 2025 Eduardo San Martin Morote
 * @license MIT
 */const G2=Symbol();var xv;(function(i){i.direct="direct",i.patchObject="patch object",i.patchFunction="patch function"})(xv||(xv={}));function W2(){const i=Ib(!0),e=i.run(()=>Pt({}));let t=[],n=[];const r=Hd({install(s){r._a=s,s.provide(G2,r),s.config.globalProperties.$pinia=r,n.forEach(o=>t.push(o)),n=[]},use(s){return this._a?t.push(s):n.push(s),this},_p:t,_a:null,_e:i,_s:new Map,state:e});return r}/*!
  * vue-router v4.5.1
  * (c) 2025 Eduardo San Martin Morote
  * @license MIT
  */const co=typeof document<"u";function Iy(i){return typeof i=="object"||"displayName"in i||"props"in i||"__vccOpts"in i}function X2(i){return i.__esModule||i[Symbol.toStringTag]==="Module"||i.default&&Iy(i.default)}const vt=Object.assign;function Rf(i,e){const t={};for(const n in e){const r=e[n];t[n]=yi(r)?r.map(i):i(r)}return t}const Ia=()=>{},yi=Array.isArray,Py=/#/g,j2=/&/g,Y2=/\//g,q2=/=/g,$2=/\?/g,Ly=/\+/g,K2=/%5B/g,Z2=/%5D/g,Dy=/%5E/g,J2=/%60/g,Ny=/%7B/g,Q2=/%7C/g,Uy=/%7D/g,eL=/%20/g;function Vp(i){return encodeURI(""+i).replace(Q2,"|").replace(K2,"[").replace(Z2,"]")}function tL(i){return Vp(i).replace(Ny,"{").replace(Uy,"}").replace(Dy,"^")}function bd(i){return Vp(i).replace(Ly,"%2B").replace(eL,"+").replace(Py,"%23").replace(j2,"%26").replace(J2,"`").replace(Ny,"{").replace(Uy,"}").replace(Dy,"^")}function nL(i){return bd(i).replace(q2,"%3D")}function iL(i){return Vp(i).replace(Py,"%23").replace($2,"%3F")}function rL(i){return i==null?"":iL(i).replace(Y2,"%2F")}function $a(i){try{return decodeURIComponent(""+i)}catch{}return""+i}const sL=/\/$/,oL=i=>i.replace(sL,"");function Cf(i,e,t="/"){let n,r={},s="",o="";const a=e.indexOf("#");let l=e.indexOf("?");return a<l&&a>=0&&(l=-1),l>-1&&(n=e.slice(0,l),s=e.slice(l+1,a>-1?a:e.length),r=i(s)),a>-1&&(n=n||e.slice(0,a),o=e.slice(a,e.length)),n=uL(n??e,t),{fullPath:n+(s&&"?")+s+o,path:n,query:r,hash:$a(o)}}function aL(i,e){const t=e.query?i(e.query):"";return e.path+(t&&"?")+t+(e.hash||"")}function yv(i,e){return!e||!i.toLowerCase().startsWith(e.toLowerCase())?i:i.slice(e.length)||"/"}function lL(i,e,t){const n=e.matched.length-1,r=t.matched.length-1;return n>-1&&n===r&&Io(e.matched[n],t.matched[r])&&Oy(e.params,t.params)&&i(e.query)===i(t.query)&&e.hash===t.hash}function Io(i,e){return(i.aliasOf||i)===(e.aliasOf||e)}function Oy(i,e){if(Object.keys(i).length!==Object.keys(e).length)return!1;for(const t in i)if(!cL(i[t],e[t]))return!1;return!0}function cL(i,e){return yi(i)?bv(i,e):yi(e)?bv(e,i):i===e}function bv(i,e){return yi(e)?i.length===e.length&&i.every((t,n)=>t===e[n]):i.length===1&&i[0]===e}function uL(i,e){if(i.startsWith("/"))return i;if(!i)return e;const t=e.split("/"),n=i.split("/"),r=n[n.length-1];(r===".."||r===".")&&n.push("");let s=t.length-1,o,a;for(o=0;o<n.length;o++)if(a=n[o],a!==".")if(a==="..")s>1&&s--;else break;return t.slice(0,s).join("/")+"/"+n.slice(o).join("/")}const _r={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var Ka;(function(i){i.pop="pop",i.push="push"})(Ka||(Ka={}));var Pa;(function(i){i.back="back",i.forward="forward",i.unknown=""})(Pa||(Pa={}));function hL(i){if(!i)if(co){const e=document.querySelector("base");i=e&&e.getAttribute("href")||"/",i=i.replace(/^\w+:\/\/[^\/]+/,"")}else i="/";return i[0]!=="/"&&i[0]!=="#"&&(i="/"+i),oL(i)}const fL=/^[^#]+#/;function dL(i,e){return i.replace(fL,"#")+e}function pL(i,e){const t=document.documentElement.getBoundingClientRect(),n=i.getBoundingClientRect();return{behavior:e.behavior,left:n.left-t.left-(e.left||0),top:n.top-t.top-(e.top||0)}}const bh=()=>({left:window.scrollX,top:window.scrollY});function mL(i){let e;if("el"in i){const t=i.el,n=typeof t=="string"&&t.startsWith("#"),r=typeof t=="string"?n?document.getElementById(t.slice(1)):document.querySelector(t):t;if(!r)return;e=pL(r,i)}else e=i;"scrollBehavior"in document.documentElement.style?window.scrollTo(e):window.scrollTo(e.left!=null?e.left:window.scrollX,e.top!=null?e.top:window.scrollY)}function Mv(i,e){return(history.state?history.state.position-e:-1)+i}const Md=new Map;function gL(i,e){Md.set(i,e)}function vL(i){const e=Md.get(i);return Md.delete(i),e}let _L=()=>location.protocol+"//"+location.host;function Fy(i,e){const{pathname:t,search:n,hash:r}=e,s=i.indexOf("#");if(s>-1){let a=r.includes(i.slice(s))?i.slice(s).length:1,l=r.slice(a);return l[0]!=="/"&&(l="/"+l),yv(l,"")}return yv(t,i)+n+r}function xL(i,e,t,n){let r=[],s=[],o=null;const a=({state:f})=>{const d=Fy(i,location),p=t.value,v=e.value;let m=0;if(f){if(t.value=d,e.value=f,o&&o===p){o=null;return}m=v?f.position-v.position:0}else n(d);r.forEach(g=>{g(t.value,p,{delta:m,type:Ka.pop,direction:m?m>0?Pa.forward:Pa.back:Pa.unknown})})};function l(){o=t.value}function c(f){r.push(f);const d=()=>{const p=r.indexOf(f);p>-1&&r.splice(p,1)};return s.push(d),d}function u(){const{history:f}=window;f.state&&f.replaceState(vt({},f.state,{scroll:bh()}),"")}function h(){for(const f of s)f();s=[],window.removeEventListener("popstate",a),window.removeEventListener("beforeunload",u)}return window.addEventListener("popstate",a),window.addEventListener("beforeunload",u,{passive:!0}),{pauseListeners:l,listen:c,destroy:h}}function Sv(i,e,t,n=!1,r=!1){return{back:i,current:e,forward:t,replaced:n,position:window.history.length,scroll:r?bh():null}}function yL(i){const{history:e,location:t}=window,n={value:Fy(i,t)},r={value:e.state};r.value||s(n.value,{back:null,current:n.value,forward:null,position:e.length-1,replaced:!0,scroll:null},!0);function s(l,c,u){const h=i.indexOf("#"),f=h>-1?(t.host&&document.querySelector("base")?i:i.slice(h))+l:_L()+i+l;try{e[u?"replaceState":"pushState"](c,"",f),r.value=c}catch(d){console.error(d),t[u?"replace":"assign"](f)}}function o(l,c){const u=vt({},e.state,Sv(r.value.back,l,r.value.forward,!0),c,{position:r.value.position});s(l,u,!0),n.value=l}function a(l,c){const u=vt({},r.value,e.state,{forward:l,scroll:bh()});s(u.current,u,!0);const h=vt({},Sv(n.value,l,null),{position:u.position+1},c);s(l,h,!1),n.value=l}return{location:n,state:r,push:a,replace:o}}function bL(i){i=hL(i);const e=yL(i),t=xL(i,e.state,e.location,e.replace);function n(s,o=!0){o||t.pauseListeners(),history.go(s)}const r=vt({location:"",base:i,go:n,createHref:dL.bind(null,i)},e,t);return Object.defineProperty(r,"location",{enumerable:!0,get:()=>e.location.value}),Object.defineProperty(r,"state",{enumerable:!0,get:()=>e.state.value}),r}function ML(i){return i=location.host?i||location.pathname+location.search:"",i.includes("#")||(i+="#"),bL(i)}function SL(i){return typeof i=="string"||i&&typeof i=="object"}function By(i){return typeof i=="string"||typeof i=="symbol"}const zy=Symbol("");var wv;(function(i){i[i.aborted=4]="aborted",i[i.cancelled=8]="cancelled",i[i.duplicated=16]="duplicated"})(wv||(wv={}));function Po(i,e){return vt(new Error,{type:i,[zy]:!0},e)}function qi(i,e){return i instanceof Error&&zy in i&&(e==null||!!(i.type&e))}const Tv="[^/]+?",wL={sensitive:!1,strict:!1,start:!0,end:!0},TL=/[.+*?^${}()[\]/\\]/g;function EL(i,e){const t=vt({},wL,e),n=[];let r=t.start?"^":"";const s=[];for(const c of i){const u=c.length?[]:[90];t.strict&&!c.length&&(r+="/");for(let h=0;h<c.length;h++){const f=c[h];let d=40+(t.sensitive?.25:0);if(f.type===0)h||(r+="/"),r+=f.value.replace(TL,"\\$&"),d+=40;else if(f.type===1){const{value:p,repeatable:v,optional:m,regexp:g}=f;s.push({name:p,repeatable:v,optional:m});const M=g||Tv;if(M!==Tv){d+=10;try{new RegExp(`(${M})`)}catch(y){throw new Error(`Invalid custom RegExp for param "${p}" (${M}): `+y.message)}}let b=v?`((?:${M})(?:/(?:${M}))*)`:`(${M})`;h||(b=m&&c.length<2?`(?:/${b})`:"/"+b),m&&(b+="?"),r+=b,d+=20,m&&(d+=-8),v&&(d+=-20),M===".*"&&(d+=-50)}u.push(d)}n.push(u)}if(t.strict&&t.end){const c=n.length-1;n[c][n[c].length-1]+=.7000000000000001}t.strict||(r+="/?"),t.end?r+="$":t.strict&&!r.endsWith("/")&&(r+="(?:/|$)");const o=new RegExp(r,t.sensitive?"":"i");function a(c){const u=c.match(o),h={};if(!u)return null;for(let f=1;f<u.length;f++){const d=u[f]||"",p=s[f-1];h[p.name]=d&&p.repeatable?d.split("/"):d}return h}function l(c){let u="",h=!1;for(const f of i){(!h||!u.endsWith("/"))&&(u+="/"),h=!1;for(const d of f)if(d.type===0)u+=d.value;else if(d.type===1){const{value:p,repeatable:v,optional:m}=d,g=p in c?c[p]:"";if(yi(g)&&!v)throw new Error(`Provided param "${p}" is an array but it is not repeatable (* or + modifiers)`);const M=yi(g)?g.join("/"):g;if(!M)if(m)f.length<2&&(u.endsWith("/")?u=u.slice(0,-1):h=!0);else throw new Error(`Missing required param "${p}"`);u+=M}}return u||"/"}return{re:o,score:n,keys:s,parse:a,stringify:l}}function AL(i,e){let t=0;for(;t<i.length&&t<e.length;){const n=e[t]-i[t];if(n)return n;t++}return i.length<e.length?i.length===1&&i[0]===80?-1:1:i.length>e.length?e.length===1&&e[0]===80?1:-1:0}function ky(i,e){let t=0;const n=i.score,r=e.score;for(;t<n.length&&t<r.length;){const s=AL(n[t],r[t]);if(s)return s;t++}if(Math.abs(r.length-n.length)===1){if(Ev(n))return 1;if(Ev(r))return-1}return r.length-n.length}function Ev(i){const e=i[i.length-1];return i.length>0&&e[e.length-1]<0}const RL={type:0,value:""},CL=/[a-zA-Z0-9_]/;function IL(i){if(!i)return[[]];if(i==="/")return[[RL]];if(!i.startsWith("/"))throw new Error(`Invalid path "${i}"`);function e(d){throw new Error(`ERR (${t})/"${c}": ${d}`)}let t=0,n=t;const r=[];let s;function o(){s&&r.push(s),s=[]}let a=0,l,c="",u="";function h(){c&&(t===0?s.push({type:0,value:c}):t===1||t===2||t===3?(s.length>1&&(l==="*"||l==="+")&&e(`A repeatable param (${c}) must be alone in its segment. eg: '/:ids+.`),s.push({type:1,value:c,regexp:u,repeatable:l==="*"||l==="+",optional:l==="*"||l==="?"})):e("Invalid state to consume buffer"),c="")}function f(){c+=l}for(;a<i.length;){if(l=i[a++],l==="\\"&&t!==2){n=t,t=4;continue}switch(t){case 0:l==="/"?(c&&h(),o()):l===":"?(h(),t=1):f();break;case 4:f(),t=n;break;case 1:l==="("?t=2:CL.test(l)?f():(h(),t=0,l!=="*"&&l!=="?"&&l!=="+"&&a--);break;case 2:l===")"?u[u.length-1]=="\\"?u=u.slice(0,-1)+l:t=3:u+=l;break;case 3:h(),t=0,l!=="*"&&l!=="?"&&l!=="+"&&a--,u="";break;default:e("Unknown state");break}}return t===2&&e(`Unfinished custom RegExp for param "${c}"`),h(),o(),r}function PL(i,e,t){const n=EL(IL(i.path),t),r=vt(n,{record:i,parent:e,children:[],alias:[]});return e&&!r.record.aliasOf==!e.record.aliasOf&&e.children.push(r),r}function LL(i,e){const t=[],n=new Map;e=Iv({strict:!1,end:!0,sensitive:!1},e);function r(h){return n.get(h)}function s(h,f,d){const p=!d,v=Rv(h);v.aliasOf=d&&d.record;const m=Iv(e,h),g=[v];if("alias"in h){const y=typeof h.alias=="string"?[h.alias]:h.alias;for(const C of y)g.push(Rv(vt({},v,{components:d?d.record.components:v.components,path:C,aliasOf:d?d.record:v})))}let M,b;for(const y of g){const{path:C}=y;if(f&&C[0]!=="/"){const w=f.record.path,E=w[w.length-1]==="/"?"":"/";y.path=f.record.path+(C&&E+C)}if(M=PL(y,f,m),d?d.alias.push(M):(b=b||M,b!==M&&b.alias.push(M),p&&h.name&&!Cv(M)&&o(h.name)),Vy(M)&&l(M),v.children){const w=v.children;for(let E=0;E<w.length;E++)s(w[E],M,d&&d.children[E])}d=d||M}return b?()=>{o(b)}:Ia}function o(h){if(By(h)){const f=n.get(h);f&&(n.delete(h),t.splice(t.indexOf(f),1),f.children.forEach(o),f.alias.forEach(o))}else{const f=t.indexOf(h);f>-1&&(t.splice(f,1),h.record.name&&n.delete(h.record.name),h.children.forEach(o),h.alias.forEach(o))}}function a(){return t}function l(h){const f=UL(h,t);t.splice(f,0,h),h.record.name&&!Cv(h)&&n.set(h.record.name,h)}function c(h,f){let d,p={},v,m;if("name"in h&&h.name){if(d=n.get(h.name),!d)throw Po(1,{location:h});m=d.record.name,p=vt(Av(f.params,d.keys.filter(b=>!b.optional).concat(d.parent?d.parent.keys.filter(b=>b.optional):[]).map(b=>b.name)),h.params&&Av(h.params,d.keys.map(b=>b.name))),v=d.stringify(p)}else if(h.path!=null)v=h.path,d=t.find(b=>b.re.test(v)),d&&(p=d.parse(v),m=d.record.name);else{if(d=f.name?n.get(f.name):t.find(b=>b.re.test(f.path)),!d)throw Po(1,{location:h,currentLocation:f});m=d.record.name,p=vt({},f.params,h.params),v=d.stringify(p)}const g=[];let M=d;for(;M;)g.unshift(M.record),M=M.parent;return{name:m,path:v,params:p,matched:g,meta:NL(g)}}i.forEach(h=>s(h));function u(){t.length=0,n.clear()}return{addRoute:s,resolve:c,removeRoute:o,clearRoutes:u,getRoutes:a,getRecordMatcher:r}}function Av(i,e){const t={};for(const n of e)n in i&&(t[n]=i[n]);return t}function Rv(i){const e={path:i.path,redirect:i.redirect,name:i.name,meta:i.meta||{},aliasOf:i.aliasOf,beforeEnter:i.beforeEnter,props:DL(i),children:i.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in i?i.components||null:i.component&&{default:i.component}};return Object.defineProperty(e,"mods",{value:{}}),e}function DL(i){const e={},t=i.props||!1;if("component"in i)e.default=t;else for(const n in i.components)e[n]=typeof t=="object"?t[n]:t;return e}function Cv(i){for(;i;){if(i.record.aliasOf)return!0;i=i.parent}return!1}function NL(i){return i.reduce((e,t)=>vt(e,t.meta),{})}function Iv(i,e){const t={};for(const n in i)t[n]=n in e?e[n]:i[n];return t}function UL(i,e){let t=0,n=e.length;for(;t!==n;){const s=t+n>>1;ky(i,e[s])<0?n=s:t=s+1}const r=OL(i);return r&&(n=e.lastIndexOf(r,n-1)),n}function OL(i){let e=i;for(;e=e.parent;)if(Vy(e)&&ky(i,e)===0)return e}function Vy({record:i}){return!!(i.name||i.components&&Object.keys(i.components).length||i.redirect)}function FL(i){const e={};if(i===""||i==="?")return e;const n=(i[0]==="?"?i.slice(1):i).split("&");for(let r=0;r<n.length;++r){const s=n[r].replace(Ly," "),o=s.indexOf("="),a=$a(o<0?s:s.slice(0,o)),l=o<0?null:$a(s.slice(o+1));if(a in e){let c=e[a];yi(c)||(c=e[a]=[c]),c.push(l)}else e[a]=l}return e}function Pv(i){let e="";for(let t in i){const n=i[t];if(t=nL(t),n==null){n!==void 0&&(e+=(e.length?"&":"")+t);continue}(yi(n)?n.map(s=>s&&bd(s)):[n&&bd(n)]).forEach(s=>{s!==void 0&&(e+=(e.length?"&":"")+t,s!=null&&(e+="="+s))})}return e}function BL(i){const e={};for(const t in i){const n=i[t];n!==void 0&&(e[t]=yi(n)?n.map(r=>r==null?null:""+r):n==null?n:""+n)}return e}const zL=Symbol(""),Lv=Symbol(""),Hp=Symbol(""),Gp=Symbol(""),Sd=Symbol("");function ia(){let i=[];function e(n){return i.push(n),()=>{const r=i.indexOf(n);r>-1&&i.splice(r,1)}}function t(){i=[]}return{add:e,list:()=>i.slice(),reset:t}}function Sr(i,e,t,n,r,s=o=>o()){const o=n&&(n.enterCallbacks[r]=n.enterCallbacks[r]||[]);return()=>new Promise((a,l)=>{const c=f=>{f===!1?l(Po(4,{from:t,to:e})):f instanceof Error?l(f):SL(f)?l(Po(2,{from:e,to:f})):(o&&n.enterCallbacks[r]===o&&typeof f=="function"&&o.push(f),a())},u=s(()=>i.call(n&&n.instances[r],e,t,c));let h=Promise.resolve(u);i.length<3&&(h=h.then(c)),h.catch(f=>l(f))})}function If(i,e,t,n,r=s=>s()){const s=[];for(const o of i)for(const a in o.components){let l=o.components[a];if(!(e!=="beforeRouteEnter"&&!o.instances[a]))if(Iy(l)){const u=(l.__vccOpts||l)[e];u&&s.push(Sr(u,t,n,o,a,r))}else{let c=l();s.push(()=>c.then(u=>{if(!u)throw new Error(`Couldn't resolve component "${a}" at "${o.path}"`);const h=X2(u)?u.default:u;o.mods[a]=u,o.components[a]=h;const d=(h.__vccOpts||h)[e];return d&&Sr(d,t,n,o,a,r)()}))}}return s}function Dv(i){const e=ti(Hp),t=ti(Gp),n=xt(()=>{const l=Ve(i.to);return e.resolve(l)}),r=xt(()=>{const{matched:l}=n.value,{length:c}=l,u=l[c-1],h=t.matched;if(!u||!h.length)return-1;const f=h.findIndex(Io.bind(null,u));if(f>-1)return f;const d=Nv(l[c-2]);return c>1&&Nv(u)===d&&h[h.length-1].path!==d?h.findIndex(Io.bind(null,l[c-2])):f}),s=xt(()=>r.value>-1&&WL(t.params,n.value.params)),o=xt(()=>r.value>-1&&r.value===t.matched.length-1&&Oy(t.params,n.value.params));function a(l={}){if(GL(l)){const c=e[Ve(i.replace)?"replace":"push"](Ve(i.to)).catch(Ia);return i.viewTransition&&typeof document<"u"&&"startViewTransition"in document&&document.startViewTransition(()=>c),c}return Promise.resolve()}return{route:n,href:xt(()=>n.value.href),isActive:s,isExactActive:o,navigate:a}}function kL(i){return i.length===1?i[0]:i}const VL=Ui({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"},viewTransition:Boolean},useLink:Dv,setup(i,{slots:e}){const t=Za(Dv(i)),{options:n}=ti(Hp),r=xt(()=>({[Uv(i.activeClass,n.linkActiveClass,"router-link-active")]:t.isActive,[Uv(i.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:t.isExactActive}));return()=>{const s=e.default&&kL(e.default(t));return i.custom?s:Uc("a",{"aria-current":t.isExactActive?i.ariaCurrentValue:null,href:t.href,onClick:t.navigate,class:r.value},s)}}}),HL=VL;function GL(i){if(!(i.metaKey||i.altKey||i.ctrlKey||i.shiftKey)&&!i.defaultPrevented&&!(i.button!==void 0&&i.button!==0)){if(i.currentTarget&&i.currentTarget.getAttribute){const e=i.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return i.preventDefault&&i.preventDefault(),!0}}function WL(i,e){for(const t in e){const n=e[t],r=i[t];if(typeof n=="string"){if(n!==r)return!1}else if(!yi(r)||r.length!==n.length||n.some((s,o)=>s!==r[o]))return!1}return!0}function Nv(i){return i?i.aliasOf?i.aliasOf.path:i.path:""}const Uv=(i,e,t)=>i??e??t,XL=Ui({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(i,{attrs:e,slots:t}){const n=ti(Sd),r=xt(()=>i.route||n.value),s=ti(Lv,0),o=xt(()=>{let c=Ve(s);const{matched:u}=r.value;let h;for(;(h=u[c])&&!h.components;)c++;return c}),a=xt(()=>r.value.matched[o.value]);Ir(Lv,xt(()=>o.value+1)),Ir(zL,a),Ir(Sd,r);const l=Pt();return Vt(()=>[l.value,a.value,i.name],([c,u,h],[f,d,p])=>{u&&(u.instances[h]=c,d&&d!==u&&c&&c===f&&(u.leaveGuards.size||(u.leaveGuards=d.leaveGuards),u.updateGuards.size||(u.updateGuards=d.updateGuards))),c&&u&&(!d||!Io(u,d)||!f)&&(u.enterCallbacks[h]||[]).forEach(v=>v(c))},{flush:"post"}),()=>{const c=r.value,u=i.name,h=a.value,f=h&&h.components[u];if(!f)return Ov(t.default,{Component:f,route:c});const d=h.props[u],p=d?d===!0?c.params:typeof d=="function"?d(c):d:null,m=Uc(f,vt({},p,e,{onVnodeUnmounted:g=>{g.component.isUnmounted&&(h.instances[u]=null)},ref:l}));return Ov(t.default,{Component:m,route:c})||m}}});function Ov(i,e){if(!i)return null;const t=i(e);return t.length===1?t[0]:t}const Hy=XL;function jL(i){const e=LL(i.routes,i),t=i.parseQuery||FL,n=i.stringifyQuery||Pv,r=i.history,s=ia(),o=ia(),a=ia(),l=ft(_r);let c=_r;co&&i.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const u=Rf.bind(null,Z=>""+Z),h=Rf.bind(null,rL),f=Rf.bind(null,$a);function d(Z,K){let I,U;return By(Z)?(I=e.getRecordMatcher(Z),U=K):U=Z,e.addRoute(U,I)}function p(Z){const K=e.getRecordMatcher(Z);K&&e.removeRoute(K)}function v(){return e.getRoutes().map(Z=>Z.record)}function m(Z){return!!e.getRecordMatcher(Z)}function g(Z,K){if(K=vt({},K||l.value),typeof Z=="string"){const T=Cf(t,Z,K.path),H=e.resolve({path:T.path},K),W=r.createHref(T.fullPath);return vt(T,H,{params:f(H.params),hash:$a(T.hash),redirectedFrom:void 0,href:W})}let I;if(Z.path!=null)I=vt({},Z,{path:Cf(t,Z.path,K.path).path});else{const T=vt({},Z.params);for(const H in T)T[H]==null&&delete T[H];I=vt({},Z,{params:h(T)}),K.params=h(K.params)}const U=e.resolve(I,K),G=Z.hash||"";U.params=u(f(U.params));const D=aL(n,vt({},Z,{hash:tL(G),path:U.path})),L=r.createHref(D);return vt({fullPath:D,hash:G,query:n===Pv?BL(Z.query):Z.query||{}},U,{redirectedFrom:void 0,href:L})}function M(Z){return typeof Z=="string"?Cf(t,Z,l.value.path):vt({},Z)}function b(Z,K){if(c!==Z)return Po(8,{from:K,to:Z})}function y(Z){return E(Z)}function C(Z){return y(vt(M(Z),{replace:!0}))}function w(Z){const K=Z.matched[Z.matched.length-1];if(K&&K.redirect){const{redirect:I}=K;let U=typeof I=="function"?I(Z):I;return typeof U=="string"&&(U=U.includes("?")||U.includes("#")?U=M(U):{path:U},U.params={}),vt({query:Z.query,hash:Z.hash,params:U.path!=null?{}:Z.params},U)}}function E(Z,K){const I=c=g(Z),U=l.value,G=Z.state,D=Z.force,L=Z.replace===!0,T=w(I);if(T)return E(vt(M(T),{state:typeof T=="object"?vt({},G,T.state):G,force:D,replace:L}),K||I);const H=I;H.redirectedFrom=K;let W;return!D&&lL(n,U,I)&&(W=Po(16,{to:H,from:U}),oe(U,U,!0,!1)),(W?Promise.resolve(W):_(H,U)).catch(j=>qi(j)?qi(j,2)?j:de(j):J(j,H,U)).then(j=>{if(j){if(qi(j,2))return E(vt({replace:L},M(j.to),{state:typeof j.to=="object"?vt({},G,j.to.state):G,force:D}),K||H)}else j=N(H,U,!0,L,G);return A(H,U,j),j})}function S(Z,K){const I=b(Z,K);return I?Promise.reject(I):Promise.resolve()}function x(Z){const K=le.values().next().value;return K&&typeof K.runWithContext=="function"?K.runWithContext(Z):Z()}function _(Z,K){let I;const[U,G,D]=YL(Z,K);I=If(U.reverse(),"beforeRouteLeave",Z,K);for(const T of U)T.leaveGuards.forEach(H=>{I.push(Sr(H,Z,K))});const L=S.bind(null,Z,K);return I.push(L),be(I).then(()=>{I=[];for(const T of s.list())I.push(Sr(T,Z,K));return I.push(L),be(I)}).then(()=>{I=If(G,"beforeRouteUpdate",Z,K);for(const T of G)T.updateGuards.forEach(H=>{I.push(Sr(H,Z,K))});return I.push(L),be(I)}).then(()=>{I=[];for(const T of D)if(T.beforeEnter)if(yi(T.beforeEnter))for(const H of T.beforeEnter)I.push(Sr(H,Z,K));else I.push(Sr(T.beforeEnter,Z,K));return I.push(L),be(I)}).then(()=>(Z.matched.forEach(T=>T.enterCallbacks={}),I=If(D,"beforeRouteEnter",Z,K,x),I.push(L),be(I))).then(()=>{I=[];for(const T of o.list())I.push(Sr(T,Z,K));return I.push(L),be(I)}).catch(T=>qi(T,8)?T:Promise.reject(T))}function A(Z,K,I){a.list().forEach(U=>x(()=>U(Z,K,I)))}function N(Z,K,I,U,G){const D=b(Z,K);if(D)return D;const L=K===_r,T=co?history.state:{};I&&(U||L?r.replace(Z.fullPath,vt({scroll:L&&T&&T.scroll},G)):r.push(Z.fullPath,G)),l.value=Z,oe(Z,K,I,L),de()}let B;function V(){B||(B=r.listen((Z,K,I)=>{if(!ge.listening)return;const U=g(Z),G=w(U);if(G){E(vt(G,{replace:!0,force:!0}),U).catch(Ia);return}c=U;const D=l.value;co&&gL(Mv(D.fullPath,I.delta),bh()),_(U,D).catch(L=>qi(L,12)?L:qi(L,2)?(E(vt(M(L.to),{force:!0}),U).then(T=>{qi(T,20)&&!I.delta&&I.type===Ka.pop&&r.go(-1,!1)}).catch(Ia),Promise.reject()):(I.delta&&r.go(-I.delta,!1),J(L,U,D))).then(L=>{L=L||N(U,D,!1),L&&(I.delta&&!qi(L,8)?r.go(-I.delta,!1):I.type===Ka.pop&&qi(L,20)&&r.go(-1,!1)),A(U,D,L)}).catch(Ia)}))}let X=ia(),z=ia(),te;function J(Z,K,I){de(Z);const U=z.list();return U.length?U.forEach(G=>G(Z,K,I)):console.error(Z),Promise.reject(Z)}function ue(){return te&&l.value!==_r?Promise.resolve():new Promise((Z,K)=>{X.add([Z,K])})}function de(Z){return te||(te=!Z,V(),X.list().forEach(([K,I])=>Z?I(Z):K()),X.reset()),Z}function oe(Z,K,I,U){const{scrollBehavior:G}=i;if(!co||!G)return Promise.resolve();const D=!I&&vL(Mv(Z.fullPath,0))||(U||!I)&&history.state&&history.state.scroll||null;return Gd().then(()=>G(Z,K,D)).then(L=>L&&mL(L)).catch(L=>J(L,Z,K))}const ye=Z=>r.go(Z);let Ce;const le=new Set,ge={currentRoute:l,listening:!0,addRoute:d,removeRoute:p,clearRoutes:e.clearRoutes,hasRoute:m,getRoutes:v,resolve:g,options:i,push:y,replace:C,go:ye,back:()=>ye(-1),forward:()=>ye(1),beforeEach:s.add,beforeResolve:o.add,afterEach:a.add,onError:z.add,isReady:ue,install(Z){const K=this;Z.component("RouterLink",HL),Z.component("RouterView",Hy),Z.config.globalProperties.$router=K,Object.defineProperty(Z.config.globalProperties,"$route",{enumerable:!0,get:()=>Ve(l)}),co&&!Ce&&l.value===_r&&(Ce=!0,y(r.location).catch(G=>{}));const I={};for(const G in _r)Object.defineProperty(I,G,{get:()=>l.value[G],enumerable:!0});Z.provide(Hp,K),Z.provide(Gp,I_(I)),Z.provide(Sd,l);const U=Z.unmount;le.add(Z),Z.unmount=function(){le.delete(Z),le.size<1&&(c=_r,B&&B(),B=null,l.value=_r,Ce=!1,te=!1),U()}}};function be(Z){return Z.reduce((K,I)=>K.then(()=>x(I)),Promise.resolve())}return ge}function YL(i,e){const t=[],n=[],r=[],s=Math.max(e.matched.length,i.matched.length);for(let o=0;o<s;o++){const a=e.matched[o];a&&(i.matched.find(c=>Io(c,a))?n.push(a):t.push(a));const l=i.matched[o];l&&(e.matched.find(c=>Io(c,l))||r.push(l))}return[t,n,r]}function qL(i){return ti(Gp)}const Wp=(i,e)=>{const t=i.__vccOpts||i;for(const[n,r]of e)t[n]=r;return t},$L={__name:"App",setup(i){return(e,t)=>(dn(),ui(Tn,null,[t[0]||(t[0]=Wn("header",{class:"app-header"},[Wn("nav",{class:"nav-bar"},[Wn("a",{href:"/",class:"nav-link"},"Home"),Wn("a",{href:"/#/about",class:"nav-link"},"About")])],-1)),zt(Ve(Hy),{class:"page-area"})],64))}},KL=Wp($L,[["__scopeId","data-v-24eaaeb4"]]);function Fv(i,e){if(e===K0)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),i;if(e===_u||e===op){let t=i.getIndex();if(t===null){const o=[],a=i.getAttribute("position");if(a!==void 0){for(let l=0;l<a.count;l++)o.push(l);i.setIndex(o),t=i.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),i}const n=t.count-2,r=[];if(e===_u)for(let o=1;o<=n;o++)r.push(t.getX(0)),r.push(t.getX(o)),r.push(t.getX(o+1));else for(let o=0;o<n;o++)o%2===0?(r.push(t.getX(o)),r.push(t.getX(o+1)),r.push(t.getX(o+2))):(r.push(t.getX(o+2)),r.push(t.getX(o+1)),r.push(t.getX(o)));r.length/3!==n&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const s=i.clone();return s.setIndex(r),s.clearGroups(),s}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),i}class ZL extends Pn{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new n3(t)}),this.register(function(t){return new i3(t)}),this.register(function(t){return new f3(t)}),this.register(function(t){return new d3(t)}),this.register(function(t){return new p3(t)}),this.register(function(t){return new s3(t)}),this.register(function(t){return new o3(t)}),this.register(function(t){return new a3(t)}),this.register(function(t){return new l3(t)}),this.register(function(t){return new t3(t)}),this.register(function(t){return new c3(t)}),this.register(function(t){return new r3(t)}),this.register(function(t){return new h3(t)}),this.register(function(t){return new u3(t)}),this.register(function(t){return new QL(t)}),this.register(function(t){return new m3(t)}),this.register(function(t){return new g3(t)})}load(e,t,n,r){const s=this;let o;if(this.resourcePath!=="")o=this.resourcePath;else if(this.path!==""){const c=Pr.extractUrlBase(e);o=Pr.resolveURL(c,this.path)}else o=Pr.extractUrlBase(e);this.manager.itemStart(e);const a=function(c){r?r(c):console.error(c),s.manager.itemError(e),s.manager.itemEnd(e)},l=new xi(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{s.parse(c,o,function(u){t(u),s.manager.itemEnd(e)},a)}catch(u){a(u)}},n,a)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,r){let s;const o={},a={},l=new TextDecoder;if(typeof e=="string")s=JSON.parse(e);else if(e instanceof ArrayBuffer)if(l.decode(new Uint8Array(e,0,4))===Gy){try{o[st.KHR_BINARY_GLTF]=new v3(e)}catch(h){r&&r(h);return}s=JSON.parse(o[st.KHR_BINARY_GLTF].content)}else s=JSON.parse(l.decode(e));else s=e;if(s.asset===void 0||s.asset.version[0]<2){r&&r(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const c=new I3(s,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});c.fileLoader.setRequestHeader(this.requestHeader);for(let u=0;u<this.pluginCallbacks.length;u++){const h=this.pluginCallbacks[u](c);h.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),a[h.name]=h,o[h.name]=!0}if(s.extensionsUsed)for(let u=0;u<s.extensionsUsed.length;++u){const h=s.extensionsUsed[u],f=s.extensionsRequired||[];switch(h){case st.KHR_MATERIALS_UNLIT:o[h]=new e3;break;case st.KHR_DRACO_MESH_COMPRESSION:o[h]=new _3(s,this.dracoLoader);break;case st.KHR_TEXTURE_TRANSFORM:o[h]=new x3;break;case st.KHR_MESH_QUANTIZATION:o[h]=new y3;break;default:f.indexOf(h)>=0&&a[h]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+h+'".')}}c.setExtensions(o),c.setPlugins(a),c.parse(n,r)}parseAsync(e,t){const n=this;return new Promise(function(r,s){n.parse(e,t,r,s)})}}function JL(){let i={};return{get:function(e){return i[e]},add:function(e,t){i[e]=t},remove:function(e){delete i[e]},removeAll:function(){i={}}}}const st={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class QL{constructor(e){this.parser=e,this.name=st.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let n=0,r=t.length;n<r;n++){const s=t[n];s.extensions&&s.extensions[this.name]&&s.extensions[this.name].light!==void 0&&e._addNodeRef(this.cache,s.extensions[this.name].light)}}_loadLight(e){const t=this.parser,n="light:"+e;let r=t.cache.get(n);if(r)return r;const s=t.json,l=((s.extensions&&s.extensions[this.name]||{}).lights||[])[e];let c;const u=new we(16777215);l.color!==void 0&&u.setRGB(l.color[0],l.color[1],l.color[2],an);const h=l.range!==void 0?l.range:0;switch(l.type){case"directional":c=new Lp(u),c.target.position.set(0,0,-1),c.add(c.target);break;case"point":c=new Pp(u),c.distance=h;break;case"spot":c=new Ip(u),c.distance=h,l.spot=l.spot||{},l.spot.innerConeAngle=l.spot.innerConeAngle!==void 0?l.spot.innerConeAngle:0,l.spot.outerConeAngle=l.spot.outerConeAngle!==void 0?l.spot.outerConeAngle:Math.PI/4,c.angle=l.spot.outerConeAngle,c.penumbra=1-l.spot.innerConeAngle/l.spot.outerConeAngle,c.target.position.set(0,0,-1),c.add(c.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+l.type)}return c.position.set(0,0,0),Ki(c,l),l.intensity!==void 0&&(c.intensity=l.intensity),c.name=t.createUniqueName(l.name||"light_"+e),r=Promise.resolve(c),t.cache.add(n,r),r}getDependency(e,t){if(e==="light")return this._loadLight(t)}createNodeAttachment(e){const t=this,n=this.parser,s=n.json.nodes[e],a=(s.extensions&&s.extensions[this.name]||{}).light;return a===void 0?null:this._loadLight(a).then(function(l){return n._getNodeRef(t.cache,a,l)})}}class e3{constructor(){this.name=st.KHR_MATERIALS_UNLIT}getMaterialType(){return Cn}extendParams(e,t,n){const r=[];e.color=new we(1,1,1),e.opacity=1;const s=t.pbrMetallicRoughness;if(s){if(Array.isArray(s.baseColorFactor)){const o=s.baseColorFactor;e.color.setRGB(o[0],o[1],o[2],an),e.opacity=o[3]}s.baseColorTexture!==void 0&&r.push(n.assignTexture(e,"map",s.baseColorTexture,Bt))}return Promise.all(r)}}class t3{constructor(e){this.parser=e,this.name=st.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const r=this.parser.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=r.extensions[this.name].emissiveStrength;return s!==void 0&&(t.emissiveIntensity=s),Promise.resolve()}}class n3{constructor(e){this.parser=e,this.name=st.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:qn}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];if(o.clearcoatFactor!==void 0&&(t.clearcoat=o.clearcoatFactor),o.clearcoatTexture!==void 0&&s.push(n.assignTexture(t,"clearcoatMap",o.clearcoatTexture)),o.clearcoatRoughnessFactor!==void 0&&(t.clearcoatRoughness=o.clearcoatRoughnessFactor),o.clearcoatRoughnessTexture!==void 0&&s.push(n.assignTexture(t,"clearcoatRoughnessMap",o.clearcoatRoughnessTexture)),o.clearcoatNormalTexture!==void 0&&(s.push(n.assignTexture(t,"clearcoatNormalMap",o.clearcoatNormalTexture)),o.clearcoatNormalTexture.scale!==void 0)){const a=o.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new pe(a,a)}return Promise.all(s)}}class i3{constructor(e){this.parser=e,this.name=st.KHR_MATERIALS_DISPERSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:qn}extendMaterialParams(e,t){const r=this.parser.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=r.extensions[this.name];return t.dispersion=s.dispersion!==void 0?s.dispersion:0,Promise.resolve()}}class r3{constructor(e){this.parser=e,this.name=st.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:qn}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];return o.iridescenceFactor!==void 0&&(t.iridescence=o.iridescenceFactor),o.iridescenceTexture!==void 0&&s.push(n.assignTexture(t,"iridescenceMap",o.iridescenceTexture)),o.iridescenceIor!==void 0&&(t.iridescenceIOR=o.iridescenceIor),t.iridescenceThicknessRange===void 0&&(t.iridescenceThicknessRange=[100,400]),o.iridescenceThicknessMinimum!==void 0&&(t.iridescenceThicknessRange[0]=o.iridescenceThicknessMinimum),o.iridescenceThicknessMaximum!==void 0&&(t.iridescenceThicknessRange[1]=o.iridescenceThicknessMaximum),o.iridescenceThicknessTexture!==void 0&&s.push(n.assignTexture(t,"iridescenceThicknessMap",o.iridescenceThicknessTexture)),Promise.all(s)}}class s3{constructor(e){this.parser=e,this.name=st.KHR_MATERIALS_SHEEN}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:qn}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[];t.sheenColor=new we(0,0,0),t.sheenRoughness=0,t.sheen=1;const o=r.extensions[this.name];if(o.sheenColorFactor!==void 0){const a=o.sheenColorFactor;t.sheenColor.setRGB(a[0],a[1],a[2],an)}return o.sheenRoughnessFactor!==void 0&&(t.sheenRoughness=o.sheenRoughnessFactor),o.sheenColorTexture!==void 0&&s.push(n.assignTexture(t,"sheenColorMap",o.sheenColorTexture,Bt)),o.sheenRoughnessTexture!==void 0&&s.push(n.assignTexture(t,"sheenRoughnessMap",o.sheenRoughnessTexture)),Promise.all(s)}}class o3{constructor(e){this.parser=e,this.name=st.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:qn}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];return o.transmissionFactor!==void 0&&(t.transmission=o.transmissionFactor),o.transmissionTexture!==void 0&&s.push(n.assignTexture(t,"transmissionMap",o.transmissionTexture)),Promise.all(s)}}class a3{constructor(e){this.parser=e,this.name=st.KHR_MATERIALS_VOLUME}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:qn}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];t.thickness=o.thicknessFactor!==void 0?o.thicknessFactor:0,o.thicknessTexture!==void 0&&s.push(n.assignTexture(t,"thicknessMap",o.thicknessTexture)),t.attenuationDistance=o.attenuationDistance||1/0;const a=o.attenuationColor||[1,1,1];return t.attenuationColor=new we().setRGB(a[0],a[1],a[2],an),Promise.all(s)}}class l3{constructor(e){this.parser=e,this.name=st.KHR_MATERIALS_IOR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:qn}extendMaterialParams(e,t){const r=this.parser.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=r.extensions[this.name];return t.ior=s.ior!==void 0?s.ior:1.5,Promise.resolve()}}class c3{constructor(e){this.parser=e,this.name=st.KHR_MATERIALS_SPECULAR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:qn}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];t.specularIntensity=o.specularFactor!==void 0?o.specularFactor:1,o.specularTexture!==void 0&&s.push(n.assignTexture(t,"specularIntensityMap",o.specularTexture));const a=o.specularColorFactor||[1,1,1];return t.specularColor=new we().setRGB(a[0],a[1],a[2],an),o.specularColorTexture!==void 0&&s.push(n.assignTexture(t,"specularColorMap",o.specularColorTexture,Bt)),Promise.all(s)}}class u3{constructor(e){this.parser=e,this.name=st.EXT_MATERIALS_BUMP}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:qn}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];return t.bumpScale=o.bumpFactor!==void 0?o.bumpFactor:1,o.bumpTexture!==void 0&&s.push(n.assignTexture(t,"bumpMap",o.bumpTexture)),Promise.all(s)}}class h3{constructor(e){this.parser=e,this.name=st.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:qn}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];return o.anisotropyStrength!==void 0&&(t.anisotropy=o.anisotropyStrength),o.anisotropyRotation!==void 0&&(t.anisotropyRotation=o.anisotropyRotation),o.anisotropyTexture!==void 0&&s.push(n.assignTexture(t,"anisotropyMap",o.anisotropyTexture)),Promise.all(s)}}class f3{constructor(e){this.parser=e,this.name=st.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,n=t.json,r=n.textures[e];if(!r.extensions||!r.extensions[this.name])return null;const s=r.extensions[this.name],o=t.options.ktx2Loader;if(!o){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,s.source,o)}}class d3{constructor(e){this.parser=e,this.name=st.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,n=this.parser,r=n.json,s=r.textures[e];if(!s.extensions||!s.extensions[t])return null;const o=s.extensions[t],a=r.images[o.source];let l=n.textureLoader;if(a.uri){const c=n.options.manager.getHandler(a.uri);c!==null&&(l=c)}return n.loadTextureImage(e,o.source,l)}}class p3{constructor(e){this.parser=e,this.name=st.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,n=this.parser,r=n.json,s=r.textures[e];if(!s.extensions||!s.extensions[t])return null;const o=s.extensions[t],a=r.images[o.source];let l=n.textureLoader;if(a.uri){const c=n.options.manager.getHandler(a.uri);c!==null&&(l=c)}return n.loadTextureImage(e,o.source,l)}}class m3{constructor(e){this.name=st.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,n=t.bufferViews[e];if(n.extensions&&n.extensions[this.name]){const r=n.extensions[this.name],s=this.parser.getDependency("buffer",r.buffer),o=this.parser.options.meshoptDecoder;if(!o||!o.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return s.then(function(a){const l=r.byteOffset||0,c=r.byteLength||0,u=r.count,h=r.byteStride,f=new Uint8Array(a,l,c);return o.decodeGltfBufferAsync?o.decodeGltfBufferAsync(u,h,f,r.mode,r.filter).then(function(d){return d.buffer}):o.ready.then(function(){const d=new ArrayBuffer(u*h);return o.decodeGltfBuffer(new Uint8Array(d),u,h,f,r.mode,r.filter),d})})}else return null}}class g3{constructor(e){this.name=st.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,n=t.nodes[e];if(!n.extensions||!n.extensions[this.name]||n.mesh===void 0)return null;const r=t.meshes[n.mesh];for(const c of r.primitives)if(c.mode!==Jn.TRIANGLES&&c.mode!==Jn.TRIANGLE_STRIP&&c.mode!==Jn.TRIANGLE_FAN&&c.mode!==void 0)return null;const o=n.extensions[this.name].attributes,a=[],l={};for(const c in o)a.push(this.parser.getDependency("accessor",o[c]).then(u=>(l[c]=u,l[c])));return a.length<1?null:(a.push(this.parser.createNodeMesh(e)),Promise.all(a).then(c=>{const u=c.pop(),h=u.isGroup?u.children:[u],f=c[0].count,d=[];for(const p of h){const v=new ke,m=new F,g=new en,M=new F(1,1,1),b=new dp(p.geometry,p.material,f);for(let y=0;y<f;y++)l.TRANSLATION&&m.fromBufferAttribute(l.TRANSLATION,y),l.ROTATION&&g.fromBufferAttribute(l.ROTATION,y),l.SCALE&&M.fromBufferAttribute(l.SCALE,y),b.setMatrixAt(y,v.compose(m,g,M));for(const y in l)if(y==="_COLOR_0"){const C=l[y];b.instanceColor=new Cs(C.array,C.itemSize,C.normalized)}else y!=="TRANSLATION"&&y!=="ROTATION"&&y!=="SCALE"&&p.geometry.setAttribute(y,l[y]);ct.prototype.copy.call(b,p),this.parser.assignFinalMaterial(b),d.push(b)}return u.isGroup?(u.clear(),u.add(...d),u):d[0]}))}}const Gy="glTF",ra=12,Bv={JSON:1313821514,BIN:5130562};class v3{constructor(e){this.name=st.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,ra),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==Gy)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const r=this.header.length-ra,s=new DataView(e,ra);let o=0;for(;o<r;){const a=s.getUint32(o,!0);o+=4;const l=s.getUint32(o,!0);if(o+=4,l===Bv.JSON){const c=new Uint8Array(e,ra+o,a);this.content=n.decode(c)}else if(l===Bv.BIN){const c=ra+o;this.body=e.slice(c,c+a)}o+=a}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class _3{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=st.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const n=this.json,r=this.dracoLoader,s=e.extensions[this.name].bufferView,o=e.extensions[this.name].attributes,a={},l={},c={};for(const u in o){const h=wd[u]||u.toLowerCase();a[h]=o[u]}for(const u in e.attributes){const h=wd[u]||u.toLowerCase();if(o[u]!==void 0){const f=n.accessors[e.attributes[u]],d=vo[f.componentType];c[h]=d.name,l[h]=f.normalized===!0}}return t.getDependency("bufferView",s).then(function(u){return new Promise(function(h,f){r.decodeDracoFile(u,function(d){for(const p in d.attributes){const v=d.attributes[p],m=l[p];m!==void 0&&(v.normalized=m)}h(d)},a,c,an,f)})})}}class x3{constructor(){this.name=st.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(t.texCoord===void 0||t.texCoord===e.channel)&&t.offset===void 0&&t.rotation===void 0&&t.scale===void 0||(e=e.clone(),t.texCoord!==void 0&&(e.channel=t.texCoord),t.offset!==void 0&&e.offset.fromArray(t.offset),t.rotation!==void 0&&(e.rotation=t.rotation),t.scale!==void 0&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class y3{constructor(){this.name=st.KHR_MESH_QUANTIZATION}}class Wy extends Fo{constructor(e,t,n,r){super(e,t,n,r)}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=e*r*3+r;for(let o=0;o!==r;o++)t[o]=n[s+o];return t}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=a*2,c=a*3,u=r-t,h=(n-t)/u,f=h*h,d=f*h,p=e*c,v=p-c,m=-2*d+3*f,g=d-f,M=1-m,b=g-f+h;for(let y=0;y!==a;y++){const C=o[v+y+a],w=o[v+y+l]*u,E=o[p+y+a],S=o[p+y]*u;s[y]=M*C+b*w+m*E+g*S}return s}}const b3=new en;class M3 extends Wy{interpolate_(e,t,n,r){const s=super.interpolate_(e,t,n,r);return b3.fromArray(s).normalize().toArray(s),s}}const Jn={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},vo={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},zv={9728:Lt,9729:Ct,9984:nl,9985:_s,9986:Er,9987:Xn},kv={33071:Jt,33648:Ts,10497:sr},Pf={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},wd={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},xr={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},S3={CUBICSPLINE:void 0,LINEAR:As,STEP:Es},Lf={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function w3(i){return i.DefaultMaterial===void 0&&(i.DefaultMaterial=new dl({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:Fi})),i.DefaultMaterial}function ss(i,e,t){for(const n in t.extensions)i[n]===void 0&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[n]=t.extensions[n])}function Ki(i,e){e.extras!==void 0&&(typeof e.extras=="object"?Object.assign(i.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function T3(i,e,t){let n=!1,r=!1,s=!1;for(let c=0,u=e.length;c<u;c++){const h=e[c];if(h.POSITION!==void 0&&(n=!0),h.NORMAL!==void 0&&(r=!0),h.COLOR_0!==void 0&&(s=!0),n&&r&&s)break}if(!n&&!r&&!s)return Promise.resolve(i);const o=[],a=[],l=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];if(n){const f=h.POSITION!==void 0?t.getDependency("accessor",h.POSITION):i.attributes.position;o.push(f)}if(r){const f=h.NORMAL!==void 0?t.getDependency("accessor",h.NORMAL):i.attributes.normal;a.push(f)}if(s){const f=h.COLOR_0!==void 0?t.getDependency("accessor",h.COLOR_0):i.attributes.color;l.push(f)}}return Promise.all([Promise.all(o),Promise.all(a),Promise.all(l)]).then(function(c){const u=c[0],h=c[1],f=c[2];return n&&(i.morphAttributes.position=u),r&&(i.morphAttributes.normal=h),s&&(i.morphAttributes.color=f),i.morphTargetsRelative=!0,i})}function E3(i,e){if(i.updateMorphTargets(),e.weights!==void 0)for(let t=0,n=e.weights.length;t<n;t++)i.morphTargetInfluences[t]=e.weights[t];if(e.extras&&Array.isArray(e.extras.targetNames)){const t=e.extras.targetNames;if(i.morphTargetInfluences.length===t.length){i.morphTargetDictionary={};for(let n=0,r=t.length;n<r;n++)i.morphTargetDictionary[t[n]]=n}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function A3(i){let e;const t=i.extensions&&i.extensions[st.KHR_DRACO_MESH_COMPRESSION];if(t?e="draco:"+t.bufferView+":"+t.indices+":"+Df(t.attributes):e=i.indices+":"+Df(i.attributes)+":"+i.mode,i.targets!==void 0)for(let n=0,r=i.targets.length;n<r;n++)e+=":"+Df(i.targets[n]);return e}function Df(i){let e="";const t=Object.keys(i).sort();for(let n=0,r=t.length;n<r;n++)e+=t[n]+":"+i[t[n]]+";";return e}function Td(i){switch(i){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function R3(i){return i.search(/\.jpe?g($|\?)/i)>0||i.search(/^data\:image\/jpeg/)===0?"image/jpeg":i.search(/\.webp($|\?)/i)>0||i.search(/^data\:image\/webp/)===0?"image/webp":i.search(/\.ktx2($|\?)/i)>0||i.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const C3=new ke;class I3{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new JL,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,r=-1,s=!1,o=-1;if(typeof navigator<"u"){const a=navigator.userAgent;n=/^((?!chrome|android).)*safari/i.test(a)===!0;const l=a.match(/Version\/(\d+)/);r=n&&l?parseInt(l[1],10):-1,s=a.indexOf("Firefox")>-1,o=s?a.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||n&&r<17||s&&o<98?this.textureLoader=new Rp(this.options.manager):this.textureLoader=new Zx(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new xi(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const n=this,r=this.json,s=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(o){return o._markDefs&&o._markDefs()}),Promise.all(this._invokeAll(function(o){return o.beforeRoot&&o.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(o){const a={scene:o[0][r.scene||0],scenes:o[0],animations:o[1],cameras:o[2],asset:r.asset,parser:n,userData:{}};return ss(s,a,r),Ki(a,r),Promise.all(n._invokeAll(function(l){return l.afterRoot&&l.afterRoot(a)})).then(function(){for(const l of a.scenes)l.updateMatrixWorld();e(a)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[];for(let r=0,s=t.length;r<s;r++){const o=t[r].joints;for(let a=0,l=o.length;a<l;a++)e[o[a]].isBone=!0}for(let r=0,s=e.length;r<s;r++){const o=e[r];o.mesh!==void 0&&(this._addNodeRef(this.meshCache,o.mesh),o.skin!==void 0&&(n[o.mesh].isSkinnedMesh=!0)),o.camera!==void 0&&this._addNodeRef(this.cameraCache,o.camera)}}_addNodeRef(e,t){t!==void 0&&(e.refs[t]===void 0&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,n){if(e.refs[t]<=1)return n;const r=n.clone(),s=(o,a)=>{const l=this.associations.get(o);l!=null&&this.associations.set(a,l);for(const[c,u]of o.children.entries())s(u,a.children[c])};return s(n,r),r.name+="_instance_"+e.uses[t]++,r}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let n=0;n<t.length;n++){const r=e(t[n]);if(r)return r}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const n=[];for(let r=0;r<t.length;r++){const s=e(t[r]);s&&n.push(s)}return n}getDependency(e,t){const n=e+":"+t;let r=this.cache.get(n);if(!r){switch(e){case"scene":r=this.loadScene(t);break;case"node":r=this._invokeOne(function(s){return s.loadNode&&s.loadNode(t)});break;case"mesh":r=this._invokeOne(function(s){return s.loadMesh&&s.loadMesh(t)});break;case"accessor":r=this.loadAccessor(t);break;case"bufferView":r=this._invokeOne(function(s){return s.loadBufferView&&s.loadBufferView(t)});break;case"buffer":r=this.loadBuffer(t);break;case"material":r=this._invokeOne(function(s){return s.loadMaterial&&s.loadMaterial(t)});break;case"texture":r=this._invokeOne(function(s){return s.loadTexture&&s.loadTexture(t)});break;case"skin":r=this.loadSkin(t);break;case"animation":r=this._invokeOne(function(s){return s.loadAnimation&&s.loadAnimation(t)});break;case"camera":r=this.loadCamera(t);break;default:if(r=this._invokeOne(function(s){return s!=this&&s.getDependency&&s.getDependency(e,t)}),!r)throw new Error("Unknown type: "+e);break}this.cache.add(n,r)}return r}getDependencies(e){let t=this.cache.get(e);if(!t){const n=this,r=this.json[e+(e==="mesh"?"es":"s")]||[];t=Promise.all(r.map(function(s,o){return n.getDependency(e,o)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],n=this.fileLoader;if(t.type&&t.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(t.uri===void 0&&e===0)return Promise.resolve(this.extensions[st.KHR_BINARY_GLTF].body);const r=this.options;return new Promise(function(s,o){n.load(Pr.resolveURL(t.uri,r.path),s,void 0,function(){o(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(n){const r=t.byteLength||0,s=t.byteOffset||0;return n.slice(s,s+r)})}loadAccessor(e){const t=this,n=this.json,r=this.json.accessors[e];if(r.bufferView===void 0&&r.sparse===void 0){const o=Pf[r.type],a=vo[r.componentType],l=r.normalized===!0,c=new a(r.count*o);return Promise.resolve(new lt(c,o,l))}const s=[];return r.bufferView!==void 0?s.push(this.getDependency("bufferView",r.bufferView)):s.push(null),r.sparse!==void 0&&(s.push(this.getDependency("bufferView",r.sparse.indices.bufferView)),s.push(this.getDependency("bufferView",r.sparse.values.bufferView))),Promise.all(s).then(function(o){const a=o[0],l=Pf[r.type],c=vo[r.componentType],u=c.BYTES_PER_ELEMENT,h=u*l,f=r.byteOffset||0,d=r.bufferView!==void 0?n.bufferViews[r.bufferView].byteStride:void 0,p=r.normalized===!0;let v,m;if(d&&d!==h){const g=Math.floor(f/d),M="InterleavedBuffer:"+r.bufferView+":"+r.componentType+":"+g+":"+r.count;let b=t.cache.get(M);b||(v=new c(a,g*d,r.count*d/u),b=new Uo(v,d/u),t.cache.add(M,b)),m=new zi(b,l,f%d/u,p)}else a===null?v=new c(r.count*l):v=new c(a,f,r.count*l),m=new lt(v,l,p);if(r.sparse!==void 0){const g=Pf.SCALAR,M=vo[r.sparse.indices.componentType],b=r.sparse.indices.byteOffset||0,y=r.sparse.values.byteOffset||0,C=new M(o[1],b,r.sparse.count*g),w=new c(o[2],y,r.sparse.count*l);a!==null&&(m=new lt(m.array.slice(),m.itemSize,m.normalized)),m.normalized=!1;for(let E=0,S=C.length;E<S;E++){const x=C[E];if(m.setX(x,w[E*l]),l>=2&&m.setY(x,w[E*l+1]),l>=3&&m.setZ(x,w[E*l+2]),l>=4&&m.setW(x,w[E*l+3]),l>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}m.normalized=p}return m})}loadTexture(e){const t=this.json,n=this.options,s=t.textures[e].source,o=t.images[s];let a=this.textureLoader;if(o.uri){const l=n.manager.getHandler(o.uri);l!==null&&(a=l)}return this.loadTextureImage(e,s,a)}loadTextureImage(e,t,n){const r=this,s=this.json,o=s.textures[e],a=s.images[t],l=(a.uri||a.bufferView)+":"+o.sampler;if(this.textureCache[l])return this.textureCache[l];const c=this.loadImageSource(t,n).then(function(u){u.flipY=!1,u.name=o.name||a.name||"",u.name===""&&typeof a.uri=="string"&&a.uri.startsWith("data:image/")===!1&&(u.name=a.uri);const f=(s.samplers||{})[o.sampler]||{};return u.magFilter=zv[f.magFilter]||Ct,u.minFilter=zv[f.minFilter]||Xn,u.wrapS=kv[f.wrapS]||sr,u.wrapT=kv[f.wrapT]||sr,u.generateMipmaps=!u.isCompressedTexture&&u.minFilter!==Lt&&u.minFilter!==Ct,r.associations.set(u,{textures:e}),u}).catch(function(){return null});return this.textureCache[l]=c,c}loadImageSource(e,t){const n=this,r=this.json,s=this.options;if(this.sourceCache[e]!==void 0)return this.sourceCache[e].then(h=>h.clone());const o=r.images[e],a=self.URL||self.webkitURL;let l=o.uri||"",c=!1;if(o.bufferView!==void 0)l=n.getDependency("bufferView",o.bufferView).then(function(h){c=!0;const f=new Blob([h],{type:o.mimeType});return l=a.createObjectURL(f),l});else if(o.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const u=Promise.resolve(l).then(function(h){return new Promise(function(f,d){let p=f;t.isImageBitmapLoader===!0&&(p=function(v){const m=new At(v);m.needsUpdate=!0,f(m)}),t.load(Pr.resolveURL(h,s.path),p,void 0,d)})}).then(function(h){return c===!0&&a.revokeObjectURL(l),Ki(h,o),h.userData.mimeType=o.mimeType||R3(o.uri),h}).catch(function(h){throw console.error("THREE.GLTFLoader: Couldn't load texture",l),h});return this.sourceCache[e]=u,u}assignTexture(e,t,n,r){const s=this;return this.getDependency("texture",n.index).then(function(o){if(!o)return null;if(n.texCoord!==void 0&&n.texCoord>0&&(o=o.clone(),o.channel=n.texCoord),s.extensions[st.KHR_TEXTURE_TRANSFORM]){const a=n.extensions!==void 0?n.extensions[st.KHR_TEXTURE_TRANSFORM]:void 0;if(a){const l=s.associations.get(o);o=s.extensions[st.KHR_TEXTURE_TRANSFORM].extendTexture(o,a),s.associations.set(o,l)}}return r!==void 0&&(o.colorSpace=r),e[t]=o,o})}assignFinalMaterial(e){const t=e.geometry;let n=e.material;const r=t.attributes.tangent===void 0,s=t.attributes.color!==void 0,o=t.attributes.normal===void 0;if(e.isPoints){const a="PointsMaterial:"+n.uuid;let l=this.cache.get(a);l||(l=new th,Yt.prototype.copy.call(l,n),l.color.copy(n.color),l.map=n.map,l.sizeAttenuation=!1,this.cache.add(a,l)),n=l}else if(e.isLine){const a="LineBasicMaterial:"+n.uuid;let l=this.cache.get(a);l||(l=new vn,Yt.prototype.copy.call(l,n),l.color.copy(n.color),l.map=n.map,this.cache.add(a,l)),n=l}if(r||s||o){let a="ClonedMaterial:"+n.uuid+":";r&&(a+="derivative-tangents:"),s&&(a+="vertex-colors:"),o&&(a+="flat-shading:");let l=this.cache.get(a);l||(l=n.clone(),s&&(l.vertexColors=!0),o&&(l.flatShading=!0),r&&(l.normalScale&&(l.normalScale.y*=-1),l.clearcoatNormalScale&&(l.clearcoatNormalScale.y*=-1)),this.cache.add(a,l),this.associations.set(l,this.associations.get(n))),n=l}e.material=n}getMaterialType(){return dl}loadMaterial(e){const t=this,n=this.json,r=this.extensions,s=n.materials[e];let o;const a={},l=s.extensions||{},c=[];if(l[st.KHR_MATERIALS_UNLIT]){const h=r[st.KHR_MATERIALS_UNLIT];o=h.getMaterialType(),c.push(h.extendParams(a,s,t))}else{const h=s.pbrMetallicRoughness||{};if(a.color=new we(1,1,1),a.opacity=1,Array.isArray(h.baseColorFactor)){const f=h.baseColorFactor;a.color.setRGB(f[0],f[1],f[2],an),a.opacity=f[3]}h.baseColorTexture!==void 0&&c.push(t.assignTexture(a,"map",h.baseColorTexture,Bt)),a.metalness=h.metallicFactor!==void 0?h.metallicFactor:1,a.roughness=h.roughnessFactor!==void 0?h.roughnessFactor:1,h.metallicRoughnessTexture!==void 0&&(c.push(t.assignTexture(a,"metalnessMap",h.metallicRoughnessTexture)),c.push(t.assignTexture(a,"roughnessMap",h.metallicRoughnessTexture))),o=this._invokeOne(function(f){return f.getMaterialType&&f.getMaterialType(e)}),c.push(Promise.all(this._invokeAll(function(f){return f.extendMaterialParams&&f.extendMaterialParams(e,a)})))}s.doubleSided===!0&&(a.side=En);const u=s.alphaMode||Lf.OPAQUE;if(u===Lf.BLEND?(a.transparent=!0,a.depthWrite=!1):(a.transparent=!1,u===Lf.MASK&&(a.alphaTest=s.alphaCutoff!==void 0?s.alphaCutoff:.5)),s.normalTexture!==void 0&&o!==Cn&&(c.push(t.assignTexture(a,"normalMap",s.normalTexture)),a.normalScale=new pe(1,1),s.normalTexture.scale!==void 0)){const h=s.normalTexture.scale;a.normalScale.set(h,h)}if(s.occlusionTexture!==void 0&&o!==Cn&&(c.push(t.assignTexture(a,"aoMap",s.occlusionTexture)),s.occlusionTexture.strength!==void 0&&(a.aoMapIntensity=s.occlusionTexture.strength)),s.emissiveFactor!==void 0&&o!==Cn){const h=s.emissiveFactor;a.emissive=new we().setRGB(h[0],h[1],h[2],an)}return s.emissiveTexture!==void 0&&o!==Cn&&c.push(t.assignTexture(a,"emissiveMap",s.emissiveTexture,Bt)),Promise.all(c).then(function(){const h=new o(a);return s.name&&(h.name=s.name),Ki(h,s),t.associations.set(h,{materials:e}),s.extensions&&ss(r,h,s),h})}createUniqueName(e){const t=rt.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,n=this.extensions,r=this.primitiveCache;function s(a){return n[st.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(a,t).then(function(l){return Vv(l,a,t)})}const o=[];for(let a=0,l=e.length;a<l;a++){const c=e[a],u=A3(c),h=r[u];if(h)o.push(h.promise);else{let f;c.extensions&&c.extensions[st.KHR_DRACO_MESH_COMPRESSION]?f=s(c):f=Vv(new Ze,c,t),r[u]={primitive:c,promise:f},o.push(f)}}return Promise.all(o)}loadMesh(e){const t=this,n=this.json,r=this.extensions,s=n.meshes[e],o=s.primitives,a=[];for(let l=0,c=o.length;l<c;l++){const u=o[l].material===void 0?w3(this.cache):this.getDependency("material",o[l].material);a.push(u)}return a.push(t.loadGeometries(o)),Promise.all(a).then(function(l){const c=l.slice(0,l.length-1),u=l[l.length-1],h=[];for(let d=0,p=u.length;d<p;d++){const v=u[d],m=o[d];let g;const M=c[d];if(m.mode===Jn.TRIANGLES||m.mode===Jn.TRIANGLE_STRIP||m.mode===Jn.TRIANGLE_FAN||m.mode===void 0)g=s.isSkinnedMesh===!0?new fp(v,M):new wt(v,M),g.isSkinnedMesh===!0&&g.normalizeSkinWeights(),m.mode===Jn.TRIANGLE_STRIP?g.geometry=Fv(g.geometry,op):m.mode===Jn.TRIANGLE_FAN&&(g.geometry=Fv(g.geometry,_u));else if(m.mode===Jn.LINES)g=new Mi(v,M);else if(m.mode===Jn.LINE_STRIP)g=new ar(v,M);else if(m.mode===Jn.LINE_LOOP)g=new pp(v,M);else if(m.mode===Jn.POINTS)g=new mp(v,M);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+m.mode);Object.keys(g.geometry.morphAttributes).length>0&&E3(g,s),g.name=t.createUniqueName(s.name||"mesh_"+e),Ki(g,s),m.extensions&&ss(r,g,m),t.assignFinalMaterial(g),h.push(g)}for(let d=0,p=h.length;d<p;d++)t.associations.set(h[d],{meshes:e,primitives:d});if(h.length===1)return s.extensions&&ss(r,h[0],s),h[0];const f=new er;s.extensions&&ss(r,f,s),t.associations.set(f,{meshes:e});for(let d=0,p=h.length;d<p;d++)f.add(h[d]);return f})}loadCamera(e){let t;const n=this.json.cameras[e],r=n[n.type];if(!r){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return n.type==="perspective"?t=new St(Bi.radToDeg(r.yfov),r.aspectRatio||1,r.znear||1,r.zfar||2e6):n.type==="orthographic"&&(t=new Di(-r.xmag,r.xmag,r.ymag,-r.ymag,r.znear,r.zfar)),n.name&&(t.name=this.createUniqueName(n.name)),Ki(t,n),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],n=[];for(let r=0,s=t.joints.length;r<s;r++)n.push(this._loadNodeShallow(t.joints[r]));return t.inverseBindMatrices!==void 0?n.push(this.getDependency("accessor",t.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(r){const s=r.pop(),o=r,a=[],l=[];for(let c=0,u=o.length;c<u;c++){const h=o[c];if(h){a.push(h);const f=new ke;s!==null&&f.fromArray(s.array,c*16),l.push(f)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[c])}return new ll(a,l)})}loadAnimation(e){const t=this.json,n=this,r=t.animations[e],s=r.name?r.name:"animation_"+e,o=[],a=[],l=[],c=[],u=[];for(let h=0,f=r.channels.length;h<f;h++){const d=r.channels[h],p=r.samplers[d.sampler],v=d.target,m=v.node,g=r.parameters!==void 0?r.parameters[p.input]:p.input,M=r.parameters!==void 0?r.parameters[p.output]:p.output;v.node!==void 0&&(o.push(this.getDependency("node",m)),a.push(this.getDependency("accessor",g)),l.push(this.getDependency("accessor",M)),c.push(p),u.push(v))}return Promise.all([Promise.all(o),Promise.all(a),Promise.all(l),Promise.all(c),Promise.all(u)]).then(function(h){const f=h[0],d=h[1],p=h[2],v=h[3],m=h[4],g=[];for(let M=0,b=f.length;M<b;M++){const y=f[M],C=d[M],w=p[M],E=v[M],S=m[M];if(y===void 0)continue;y.updateMatrix&&y.updateMatrix();const x=n._createAnimationTracks(y,C,w,E,S);if(x)for(let _=0;_<x.length;_++)g.push(x[_])}return new Ro(s,void 0,g)})}createNodeMesh(e){const t=this.json,n=this,r=t.nodes[e];return r.mesh===void 0?null:n.getDependency("mesh",r.mesh).then(function(s){const o=n._getNodeRef(n.meshCache,r.mesh,s);return r.weights!==void 0&&o.traverse(function(a){if(a.isMesh)for(let l=0,c=r.weights.length;l<c;l++)a.morphTargetInfluences[l]=r.weights[l]}),o})}loadNode(e){const t=this.json,n=this,r=t.nodes[e],s=n._loadNodeShallow(e),o=[],a=r.children||[];for(let c=0,u=a.length;c<u;c++)o.push(n.getDependency("node",a[c]));const l=r.skin===void 0?Promise.resolve(null):n.getDependency("skin",r.skin);return Promise.all([s,Promise.all(o),l]).then(function(c){const u=c[0],h=c[1],f=c[2];f!==null&&u.traverse(function(d){d.isSkinnedMesh&&d.bind(f,C3)});for(let d=0,p=h.length;d<p;d++)u.add(h[d]);return u})}_loadNodeShallow(e){const t=this.json,n=this.extensions,r=this;if(this.nodeCache[e]!==void 0)return this.nodeCache[e];const s=t.nodes[e],o=s.name?r.createUniqueName(s.name):"",a=[],l=r._invokeOne(function(c){return c.createNodeMesh&&c.createNodeMesh(e)});return l&&a.push(l),s.camera!==void 0&&a.push(r.getDependency("camera",s.camera).then(function(c){return r._getNodeRef(r.cameraCache,s.camera,c)})),r._invokeAll(function(c){return c.createNodeAttachment&&c.createNodeAttachment(e)}).forEach(function(c){a.push(c)}),this.nodeCache[e]=Promise.all(a).then(function(c){let u;if(s.isBone===!0?u=new Qu:c.length>1?u=new er:c.length===1?u=c[0]:u=new ct,u!==c[0])for(let h=0,f=c.length;h<f;h++)u.add(c[h]);if(s.name&&(u.userData.name=s.name,u.name=o),Ki(u,s),s.extensions&&ss(n,u,s),s.matrix!==void 0){const h=new ke;h.fromArray(s.matrix),u.applyMatrix4(h)}else s.translation!==void 0&&u.position.fromArray(s.translation),s.rotation!==void 0&&u.quaternion.fromArray(s.rotation),s.scale!==void 0&&u.scale.fromArray(s.scale);return r.associations.has(u)||r.associations.set(u,{}),r.associations.get(u).nodes=e,u}),this.nodeCache[e]}loadScene(e){const t=this.extensions,n=this.json.scenes[e],r=this,s=new er;n.name&&(s.name=r.createUniqueName(n.name)),Ki(s,n),n.extensions&&ss(t,s,n);const o=n.nodes||[],a=[];for(let l=0,c=o.length;l<c;l++)a.push(r.getDependency("node",o[l]));return Promise.all(a).then(function(l){for(let u=0,h=l.length;u<h;u++)s.add(l[u]);const c=u=>{const h=new Map;for(const[f,d]of r.associations)(f instanceof Yt||f instanceof At)&&h.set(f,d);return u.traverse(f=>{const d=r.associations.get(f);d!=null&&h.set(f,d)}),h};return r.associations=c(s),s})}_createAnimationTracks(e,t,n,r,s){const o=[],a=e.name?e.name:e.uuid,l=[];xr[s.path]===xr.weights?e.traverse(function(f){f.morphTargetInfluences&&l.push(f.name?f.name:f.uuid)}):l.push(a);let c;switch(xr[s.path]){case xr.weights:c=Ps;break;case xr.rotation:c=Ls;break;case xr.translation:case xr.scale:c=Ds;break;default:switch(n.itemSize){case 1:c=Ps;break;case 2:case 3:default:c=Ds;break}break}const u=r.interpolation!==void 0?S3[r.interpolation]:As,h=this._getArrayFromAccessor(n);for(let f=0,d=l.length;f<d;f++){const p=new c(l[f]+"."+xr[s.path],t.array,h,u);r.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(p),o.push(p)}return o}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const n=Td(t.constructor),r=new Float32Array(t.length);for(let s=0,o=t.length;s<o;s++)r[s]=t[s]*n;t=r}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(n){const r=this instanceof Ls?M3:Wy;return new r(this.times,this.values,this.getValueSize()/3,n)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function P3(i,e,t){const n=e.attributes,r=new Xt;if(n.POSITION!==void 0){const a=t.json.accessors[n.POSITION],l=a.min,c=a.max;if(l!==void 0&&c!==void 0){if(r.set(new F(l[0],l[1],l[2]),new F(c[0],c[1],c[2])),a.normalized){const u=Td(vo[a.componentType]);r.min.multiplyScalar(u),r.max.multiplyScalar(u)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const s=e.targets;if(s!==void 0){const a=new F,l=new F;for(let c=0,u=s.length;c<u;c++){const h=s[c];if(h.POSITION!==void 0){const f=t.json.accessors[h.POSITION],d=f.min,p=f.max;if(d!==void 0&&p!==void 0){if(l.setX(Math.max(Math.abs(d[0]),Math.abs(p[0]))),l.setY(Math.max(Math.abs(d[1]),Math.abs(p[1]))),l.setZ(Math.max(Math.abs(d[2]),Math.abs(p[2]))),f.normalized){const v=Td(vo[f.componentType]);l.multiplyScalar(v)}a.max(l)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}r.expandByVector(a)}i.boundingBox=r;const o=new jt;r.getCenter(o.center),o.radius=r.min.distanceTo(r.max)/2,i.boundingSphere=o}function Vv(i,e,t){const n=e.attributes,r=[];function s(o,a){return t.getDependency("accessor",o).then(function(l){i.setAttribute(a,l)})}for(const o in n){const a=wd[o]||o.toLowerCase();a in i.attributes||r.push(s(n[o],a))}if(e.indices!==void 0&&!i.index){const o=t.getDependency("accessor",e.indices).then(function(a){i.setIndex(a)});r.push(o)}return at.workingColorSpace!==an&&"COLOR_0"in n&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${at.workingColorSpace}" not supported.`),Ki(i,e),P3(i,e,t),Promise.all(r).then(function(){return e.targets!==void 0?T3(i,e.targets,t):i})}class L3 extends Gx{constructor(e){super(e),this.type=hi}parse(e){const o=function(S,x){switch(S){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(x||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(x||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(x||""));default:case 4:throw new Error("THREE.RGBELoader: Memory Error: "+(x||""))}},u=`
`,h=function(S,x,_){x=x||1024;let N=S.pos,B=-1,V=0,X="",z=String.fromCharCode.apply(null,new Uint16Array(S.subarray(N,N+128)));for(;0>(B=z.indexOf(u))&&V<x&&N<S.byteLength;)X+=z,V+=z.length,N+=128,z+=String.fromCharCode.apply(null,new Uint16Array(S.subarray(N,N+128)));return-1<B?(S.pos+=V+B+1,X+z.slice(0,B)):!1},f=function(S){const x=/^#\?(\S+)/,_=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,A=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,N=/^\s*FORMAT=(\S+)\s*$/,B=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,V={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let X,z;for((S.pos>=S.byteLength||!(X=h(S)))&&o(1,"no header found"),(z=X.match(x))||o(3,"bad initial token"),V.valid|=1,V.programtype=z[1],V.string+=X+`
`;X=h(S),X!==!1;){if(V.string+=X+`
`,X.charAt(0)==="#"){V.comments+=X+`
`;continue}if((z=X.match(_))&&(V.gamma=parseFloat(z[1])),(z=X.match(A))&&(V.exposure=parseFloat(z[1])),(z=X.match(N))&&(V.valid|=2,V.format=z[1]),(z=X.match(B))&&(V.valid|=4,V.height=parseInt(z[1],10),V.width=parseInt(z[2],10)),V.valid&2&&V.valid&4)break}return V.valid&2||o(3,"missing format specifier"),V.valid&4||o(3,"missing image size specifier"),V},d=function(S,x,_){const A=x;if(A<8||A>32767||S[0]!==2||S[1]!==2||S[2]&128)return new Uint8Array(S);A!==(S[2]<<8|S[3])&&o(3,"wrong scanline width");const N=new Uint8Array(4*x*_);N.length||o(4,"unable to allocate buffer space");let B=0,V=0;const X=4*A,z=new Uint8Array(4),te=new Uint8Array(X);let J=_;for(;J>0&&V<S.byteLength;){V+4>S.byteLength&&o(1),z[0]=S[V++],z[1]=S[V++],z[2]=S[V++],z[3]=S[V++],(z[0]!=2||z[1]!=2||(z[2]<<8|z[3])!=A)&&o(3,"bad rgbe scanline format");let ue=0,de;for(;ue<X&&V<S.byteLength;){de=S[V++];const ye=de>128;if(ye&&(de-=128),(de===0||ue+de>X)&&o(3,"bad scanline data"),ye){const Ce=S[V++];for(let le=0;le<de;le++)te[ue++]=Ce}else te.set(S.subarray(V,V+de),ue),ue+=de,V+=de}const oe=A;for(let ye=0;ye<oe;ye++){let Ce=0;N[B]=te[ye+Ce],Ce+=A,N[B+1]=te[ye+Ce],Ce+=A,N[B+2]=te[ye+Ce],Ce+=A,N[B+3]=te[ye+Ce],B+=4}J--}return N},p=function(S,x,_,A){const N=S[x+3],B=Math.pow(2,N-128)/255;_[A+0]=S[x+0]*B,_[A+1]=S[x+1]*B,_[A+2]=S[x+2]*B,_[A+3]=1},v=function(S,x,_,A){const N=S[x+3],B=Math.pow(2,N-128)/255;_[A+0]=aa.toHalfFloat(Math.min(S[x+0]*B,65504)),_[A+1]=aa.toHalfFloat(Math.min(S[x+1]*B,65504)),_[A+2]=aa.toHalfFloat(Math.min(S[x+2]*B,65504)),_[A+3]=aa.toHalfFloat(1)},m=new Uint8Array(e);m.pos=0;const g=f(m),M=g.width,b=g.height,y=d(m.subarray(m.pos),M,b);let C,w,E;switch(this.type){case on:E=y.length/4;const S=new Float32Array(E*4);for(let _=0;_<E;_++)p(y,_*4,S,_*4);C=S,w=on;break;case hi:E=y.length/4;const x=new Uint16Array(E*4);for(let _=0;_<E;_++)v(y,_*4,x,_*4);C=x,w=hi;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:M,height:b,data:C,header:g.string,gamma:g.gamma,exposure:g.exposure,type:w}}setDataType(e){return this.type=e,this}load(e,t,n,r){function s(o,a){switch(o.type){case on:case hi:o.colorSpace=an,o.minFilter=Ct,o.magFilter=Ct,o.generateMipmaps=!1,o.flipY=!0;break}t&&t(o,a)}return super.load(e,s,n,r)}}const D3="/jim-green-project/assets/boot3-Ob3rnrWA.glb",N3="/jim-green-project/assets/color-DuVdW1Sz.jpg",U3="/jim-green-project/assets/rough-D9tqiGFn.jpg",O3="/jim-green-project/assets/hdr-BEYfxsJP.hdr",F3=Ui({__name:"BootScene",setup(i){const{scene:e,renderer:t}=zo();return Qa(async()=>{const n=await new L3().loadAsync(O3);n.mapping=yo;const r=new Su(t.value),s=r.fromEquirectangular(n).texture;r.dispose(),n.dispose(),e.value.environment=s;const o=new Rp,[a,l]=await Promise.all([o.loadAsync(N3),o.loadAsync(U3)]);[a,l].forEach(h=>{h.flipY=!1,h.anisotropy=8}),a.colorSpace=Bt,l.colorSpace=Pi;const c=new qn({map:a,roughnessMap:l,roughness:.99,envMap:s,envMapIntensity:1});c.needsUpdate=!0;const{scene:u}=await new ZL().loadAsync(D3);new Xt().setFromObject(u),u.traverse(h=>{h.isMesh&&(h.geometry.getAttribute("color")&&h.geometry.deleteAttribute("color"),h.geometry.computeVertexNormals(),h.material=c,h.castShadow=!0,h.receiveShadow=!0)}),e.value.add(Hd(u))}),(n,r)=>null}});var B3=Object.defineProperty,z3=(i,e,t)=>e in i?B3(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,k3=(i,e,t)=>z3(i,e+"",t);function V3(i){return Nd()?(m_(i),!0):!1}function Xy(i){return typeof i=="function"?i():Ve(i)}const H3=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const G3=Object.prototype.toString,W3=i=>G3.call(i)==="[object Object]",X3=()=>{},j3=H3?window:void 0;function Y3(i){var e;const t=Xy(i);return(e=t==null?void 0:t.$el)!=null?e:t}function Nf(...i){let e,t,n,r;if(typeof i[0]=="string"||Array.isArray(i[0])?([t,n,r]=i,e=j3):[e,t,n,r]=i,!e)return X3;Array.isArray(t)||(t=[t]),Array.isArray(n)||(n=[n]);const s=[],o=()=>{s.forEach(u=>u()),s.length=0},a=(u,h,f,d)=>(u.addEventListener(h,f,d),()=>u.removeEventListener(h,f,d)),l=Vt(()=>[Y3(e),Xy(r)],([u,h])=>{if(o(),!u)return;const f=W3(h)?{...h}:h;s.push(...t.flatMap(d=>n.map(p=>a(u,d,p,f))))},{immediate:!0,flush:"post"}),c=()=>{l(),o()};return V3(c),c}function jy(i,e,t,n){const r=class extends gn{constructor(s={}){const o=Object.entries(i);super({uniforms:o.reduce((a,[l,c])=>{const u=sl.clone({[l]:{value:c}});return{...a,...u}},{}),vertexShader:e,fragmentShader:t}),k3(this,"key",""),o.forEach(([a])=>Object.defineProperty(this,a,{get:()=>this.uniforms[a].value,set:l=>this.uniforms[a].value=l})),Object.assign(this,s)}};return r.key=Bi.generateUUID(),r}jy({color:new we("white"),scale:new pe(1,1),imageBounds:new pe(1,1),resolution:1024,map:null,zoom:1,radius:0,grayscale:0,opacity:1},`
    varying vec2 vUv;
    varying vec2 vPos;
    void main() {
      gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);
      vUv = uv;
      vPos = position.xy;
    }
  `,`
    // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44
    varying vec2 vUv;
    varying vec2 vPos;
    uniform vec2 scale;
    uniform vec2 imageBounds;
    uniform float resolution;
    uniform vec3 color;
    uniform sampler2D map;
    uniform float radius;
    uniform float zoom;
    uniform float grayscale;
    uniform float opacity;
    const vec3 luma = vec3(.299, 0.587, 0.114);
    vec4 toGrayscale(vec4 color, float intensity) {
      return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);
    }
    vec2 aspect(vec2 size) {
      return size / min(size.x, size.y);
    }
    
    const float PI = 3.14159265;
      
    // from https://iquilezles.org/articles/distfunctions
    float udRoundBox( vec2 p, vec2 b, float r ) {
      return length(max(abs(p)-b+r,0.0))-r;
    }
  
    void main() {
      vec2 s = aspect(scale);
      vec2 i = aspect(imageBounds);
      float rs = s.x / s.y;
      float ri = i.x / i.y;
      vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);
      vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;
      vec2 uv = vUv * s / new + offset;
      vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);
  
      vec2 res = vec2(scale * resolution);
      vec2 halfRes = 0.5 * res;
      float b = udRoundBox(vUv.xy * res - halfRes, halfRes, resolution * radius);    
        vec3 a = mix(vec3(1.0,0.0,0.0), vec3(0.0,0.0,0.0), smoothstep(0.0, 1.0, b));
      gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity * a), grayscale);
      
      #include <tonemapping_fragment>
      #include <colorspace_fragment>
    }
  `);const Xp=parseInt(Do.replace(/\D+/g,""));var q3=Object.defineProperty,$3=(i,e,t)=>e in i?q3(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,K3=(i,e,t)=>($3(i,e+"",t),t);async function Hv(i){const e=await i.arrayBuffer(),t=btoa(String.fromCharCode(...new Uint8Array(e)));return`data:${i.type||""};base64,${t}`}let mc,Uf,oo,gc;function Of(i,e=1/0,t=null){Uf||(Uf=new kr(2,2,1,1)),oo||(oo=new gn({uniforms:{blitTexture:new _h(i)},vertexShader:`
        varying vec2 vUv;
        void main(){
            vUv = uv;
            gl_Position = vec4(position.xy * 1.0,0.,.999999);
        }
      `,fragmentShader:`
          uniform sampler2D blitTexture; 
          varying vec2 vUv;

          void main(){ 
              gl_FragColor = vec4(vUv.xy, 0, 1);
              
              #ifdef IS_SRGB
              gl_FragColor = LinearTosRGB( texture2D( blitTexture, vUv) );
              #else
              gl_FragColor = texture2D( blitTexture, vUv);
              #endif
          }
      `})),oo.uniforms.blitTexture.value=i,oo.defines.IS_SRGB="colorSpace"in i?i.colorSpace==="srgb":i.encoding===3001,oo.needsUpdate=!0,gc||(gc=new wt(Uf,oo),gc.frustrumCulled=!1);const n=new St,r=new Rs;r.add(gc),t||(t=mc=new Aa({antialias:!1})),t.setSize(Math.min(i.image.width,e),Math.min(i.image.height,e)),t.clear(),t.render(r,n);const s=new At(t.domElement);return s.minFilter=i.minFilter,s.magFilter=i.magFilter,s.wrapS=i.wrapS,s.wrapT=i.wrapT,s.name=i.name,mc&&(mc.dispose(),mc=null),s}const Gv={POSITION:["byte","byte normalized","unsigned byte","unsigned byte normalized","short","short normalized","unsigned short","unsigned short normalized"],NORMAL:["byte normalized","short normalized"],TANGENT:["byte normalized","short normalized"],TEXCOORD:["byte","byte normalized","unsigned byte","short","short normalized","unsigned short"]};class Yy{constructor(){this.pluginCallbacks=[],this.register(function(e){return new oD(e)}),this.register(function(e){return new aD(e)}),this.register(function(e){return new uD(e)}),this.register(function(e){return new hD(e)}),this.register(function(e){return new fD(e)}),this.register(function(e){return new dD(e)}),this.register(function(e){return new lD(e)}),this.register(function(e){return new cD(e)}),this.register(function(e){return new pD(e)}),this.register(function(e){return new mD(e)}),this.register(function(e){return new gD(e)})}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,r){const s=new sD,o=[];for(let a=0,l=this.pluginCallbacks.length;a<l;a++)o.push(this.pluginCallbacks[a](s));s.setPlugins(o),s.write(e,t,r).catch(n)}parseAsync(e,t){const n=this;return new Promise(function(r,s){n.parse(e,r,s,t)})}}K3(Yy,"Utils",{insertKeyframe:function(i,e){const t=i.getValueSize(),n=new i.TimeBufferType(i.times.length+1),r=new i.ValueBufferType(i.values.length+t),s=i.createInterpolant(new i.ValueBufferType(t));let o;if(i.times.length===0){n[0]=e;for(let a=0;a<t;a++)r[a]=0;o=0}else if(e<i.times[0]){if(Math.abs(i.times[0]-e)<.001)return 0;n[0]=e,n.set(i.times,1),r.set(s.evaluate(e),0),r.set(i.values,t),o=0}else if(e>i.times[i.times.length-1]){if(Math.abs(i.times[i.times.length-1]-e)<.001)return i.times.length-1;n[n.length-1]=e,n.set(i.times,0),r.set(i.values,0),r.set(s.evaluate(e),i.values.length),o=n.length-1}else for(let a=0;a<i.times.length;a++){if(Math.abs(i.times[a]-e)<.001)return a;if(i.times[a]<e&&i.times[a+1]>e){n.set(i.times.slice(0,a+1),0),n[a+1]=e,n.set(i.times.slice(a+1),a+2),r.set(i.values.slice(0,(a+1)*t),0),r.set(s.evaluate(e),(a+1)*t),r.set(i.values.slice((a+1)*t),(a+2)*t),o=a+1;break}}return i.times=n,i.values=r,o},mergeMorphTargetTracks:function(i,e){const t=[],n={},r=i.tracks;for(let s=0;s<r.length;++s){let o=r[s];const a=rt.parseTrackName(o.name),l=rt.findNode(e,a.nodeName);if(a.propertyName!=="morphTargetInfluences"||a.propertyIndex===void 0){t.push(o);continue}if(o.createInterpolant!==o.InterpolantFactoryMethodDiscrete&&o.createInterpolant!==o.InterpolantFactoryMethodLinear){if(o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),o=o.clone(),o.setInterpolation(As)}const c=l.morphTargetInfluences.length,u=l.morphTargetDictionary[a.propertyIndex];if(u===void 0)throw new Error("THREE.GLTFExporter: Morph target name not found: "+a.propertyIndex);let h;if(n[l.uuid]===void 0){h=o.clone();const d=new h.ValueBufferType(c*h.times.length);for(let p=0;p<h.times.length;p++)d[p*c+u]=h.values[p];h.name=(a.nodeName||"")+".morphTargetInfluences",h.values=d,n[l.uuid]=h,t.push(h);continue}const f=o.createInterpolant(new o.ValueBufferType(1));h=n[l.uuid];for(let d=0;d<h.times.length;d++)h.values[d*c+u]=f.evaluate(h.times[d]);for(let d=0;d<o.times.length;d++){const p=this.insertKeyframe(h,o.times[d]);h.values[p*c+u]=o.values[d]}}return i.tracks=t,i}});const ot={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497},Ff="KHR_mesh_quantization",jn={};jn[Lt]=ot.NEAREST;jn[nl]=ot.NEAREST_MIPMAP_NEAREST;jn[Er]=ot.NEAREST_MIPMAP_LINEAR;jn[Ct]=ot.LINEAR;jn[_s]=ot.LINEAR_MIPMAP_NEAREST;jn[Xn]=ot.LINEAR_MIPMAP_LINEAR;jn[Jt]=ot.CLAMP_TO_EDGE;jn[sr]=ot.REPEAT;jn[Ts]=ot.MIRRORED_REPEAT;const Wv={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"},Z3=new we,Xv=12,J3=1179937895,Q3=2,jv=8,eD=1313821514,tD=5130562;function ua(i,e){return i.length===e.length&&i.every(function(t,n){return t===e[n]})}function nD(i){return new TextEncoder().encode(i).buffer}function iD(i){return ua(i.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function rD(i,e,t){const n={min:new Array(i.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(i.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let r=e;r<e+t;r++)for(let s=0;s<i.itemSize;s++){let o;i.itemSize>4?o=i.array[r*i.itemSize+s]:(s===0?o=i.getX(r):s===1?o=i.getY(r):s===2?o=i.getZ(r):s===3&&(o=i.getW(r)),i.normalized===!0&&(o=Bi.normalize(o,i.array))),n.min[s]=Math.min(n.min[s],o),n.max[s]=Math.max(n.max[s],o)}return n}function qy(i){return Math.ceil(i/4)*4}function Bf(i,e=0){const t=qy(i.byteLength);if(t!==i.byteLength){const n=new Uint8Array(t);if(n.set(new Uint8Array(i)),e!==0)for(let r=i.byteLength;r<t;r++)n[r]=e;return n.buffer}return i}function Yv(){return typeof document>"u"&&typeof OffscreenCanvas<"u"?new OffscreenCanvas(1,1):document.createElement("canvas")}function qv(i,e){if(i.toBlob!==void 0)return new Promise(n=>i.toBlob(n,e));let t;return e==="image/jpeg"?t=.92:e==="image/webp"&&(t=.8),i.convertToBlob({type:e,quality:t})}class sD{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.extensionsRequired={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter"}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map}}setPlugins(e){this.plugins=e}async write(e,t,n={}){this.options=Object.assign({binary:!1,trs:!1,onlyVisible:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},n),this.options.animations.length>0&&(this.options.trs=!0),this.processInput(e),await Promise.all(this.pending);const r=this,s=r.buffers,o=r.json;n=r.options;const a=r.extensionsUsed,l=r.extensionsRequired,c=new Blob(s,{type:"application/octet-stream"}),u=Object.keys(a),h=Object.keys(l);u.length>0&&(o.extensionsUsed=u),h.length>0&&(o.extensionsRequired=h),o.buffers&&o.buffers.length>0&&(o.buffers[0].byteLength=c.size),n.binary===!0?c.arrayBuffer().then(f=>{const d=Bf(f),p=new DataView(new ArrayBuffer(jv));p.setUint32(0,d.byteLength,!0),p.setUint32(4,tD,!0);const v=Bf(nD(JSON.stringify(o)),32),m=new DataView(new ArrayBuffer(jv));m.setUint32(0,v.byteLength,!0),m.setUint32(4,eD,!0);const g=new ArrayBuffer(Xv),M=new DataView(g);M.setUint32(0,J3,!0),M.setUint32(4,Q3,!0);const b=Xv+m.byteLength+v.byteLength+p.byteLength+d.byteLength;M.setUint32(8,b,!0),new Blob([g,m,v,p,d],{type:"application/octet-stream"}).arrayBuffer().then(t)}):o.buffers&&o.buffers.length>0?Hv(c).then(f=>{o.buffers[0].uri=f,t(o)}):t(o)}serializeUserData(e,t){if(Object.keys(e.userData).length===0)return;const n=this.options,r=this.extensionsUsed;try{const s=JSON.parse(JSON.stringify(e.userData));if(n.includeCustomExtensions&&s.gltfExtensions){t.extensions===void 0&&(t.extensions={});for(const o in s.gltfExtensions)t.extensions[o]=s.gltfExtensions[o],r[o]=!0;delete s.gltfExtensions}Object.keys(s).length>0&&(t.extras=s)}catch(s){console.warn("THREE.GLTFExporter: userData of '"+e.name+"' won't be serialized because of JSON.stringify error - "+s.message)}}getUID(e,t=!1){if(this.uids.has(e)===!1){const n=new Map;n.set(!0,this.uid++),n.set(!1,this.uid++),this.uids.set(e,n)}return this.uids.get(e).get(t)}isNormalizedNormalAttribute(e){if(this.cache.attributesNormalized.has(e))return!1;const t=new F;for(let n=0,r=e.count;n<r;n++)if(Math.abs(t.fromBufferAttribute(e,n).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(e){const t=this.cache;if(t.attributesNormalized.has(e))return t.attributesNormalized.get(e);const n=e.clone(),r=new F;for(let s=0,o=n.count;s<o;s++)r.fromBufferAttribute(n,s),r.x===0&&r.y===0&&r.z===0?r.setX(1):r.normalize(),n.setXYZ(s,r.x,r.y,r.z);return t.attributesNormalized.set(e,n),n}applyTextureTransform(e,t){let n=!1;const r={};(t.offset.x!==0||t.offset.y!==0)&&(r.offset=t.offset.toArray(),n=!0),t.rotation!==0&&(r.rotation=t.rotation,n=!0),(t.repeat.x!==1||t.repeat.y!==1)&&(r.scale=t.repeat.toArray(),n=!0),n&&(e.extensions=e.extensions||{},e.extensions.KHR_texture_transform=r,this.extensionsUsed.KHR_texture_transform=!0)}buildMetalRoughTexture(e,t){if(e===t)return e;function n(f){return("colorSpace"in f?f.colorSpace==="srgb":f.encoding===3001)?function(d){return d<.04045?d*.0773993808:Math.pow(d*.9478672986+.0521327014,2.4)}:function(d){return d}}console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures."),e instanceof ys&&(e=Of(e)),t instanceof ys&&(t=Of(t));const r=e?e.image:null,s=t?t.image:null,o=Math.max(r?r.width:0,s?s.width:0),a=Math.max(r?r.height:0,s?s.height:0),l=Yv();l.width=o,l.height=a;const c=l.getContext("2d");c.fillStyle="#00ffff",c.fillRect(0,0,o,a);const u=c.getImageData(0,0,o,a);if(r){c.drawImage(r,0,0,o,a);const f=n(e),d=c.getImageData(0,0,o,a).data;for(let p=2;p<d.length;p+=4)u.data[p]=f(d[p]/256)*256}if(s){c.drawImage(s,0,0,o,a);const f=n(t),d=c.getImageData(0,0,o,a).data;for(let p=1;p<d.length;p+=4)u.data[p]=f(d[p]/256)*256}c.putImageData(u,0,0);const h=(e||t).clone();return h.source=new At(l).source,"colorSpace"in h?h.colorSpace="":h.encoding=3e3,h.channel=(e||t).channel,e&&t&&e.channel!==t.channel&&console.warn("THREE.GLTFExporter: UV channels for metalnessMap and roughnessMap textures must match."),h}processBuffer(e){const t=this.json,n=this.buffers;return t.buffers||(t.buffers=[{byteLength:0}]),n.push(e),0}processBufferView(e,t,n,r,s){const o=this.json;o.bufferViews||(o.bufferViews=[]);let a;switch(t){case ot.BYTE:case ot.UNSIGNED_BYTE:a=1;break;case ot.SHORT:case ot.UNSIGNED_SHORT:a=2;break;default:a=4}const l=qy(r*e.itemSize*a),c=new DataView(new ArrayBuffer(l));let u=0;for(let f=n;f<n+r;f++)for(let d=0;d<e.itemSize;d++){let p;e.itemSize>4?p=e.array[f*e.itemSize+d]:(d===0?p=e.getX(f):d===1?p=e.getY(f):d===2?p=e.getZ(f):d===3&&(p=e.getW(f)),e.normalized===!0&&(p=Bi.normalize(p,e.array))),t===ot.FLOAT?c.setFloat32(u,p,!0):t===ot.INT?c.setInt32(u,p,!0):t===ot.UNSIGNED_INT?c.setUint32(u,p,!0):t===ot.SHORT?c.setInt16(u,p,!0):t===ot.UNSIGNED_SHORT?c.setUint16(u,p,!0):t===ot.BYTE?c.setInt8(u,p):t===ot.UNSIGNED_BYTE&&c.setUint8(u,p),u+=a}const h={buffer:this.processBuffer(c.buffer),byteOffset:this.byteOffset,byteLength:l};return s!==void 0&&(h.target=s),s===ot.ARRAY_BUFFER&&(h.byteStride=e.itemSize*a),this.byteOffset+=l,o.bufferViews.push(h),{id:o.bufferViews.length-1,byteLength:0}}processBufferViewImage(e){const t=this,n=t.json;return n.bufferViews||(n.bufferViews=[]),e.arrayBuffer().then(r=>{const s=Bf(r),o={buffer:t.processBuffer(s),byteOffset:t.byteOffset,byteLength:s.byteLength};return t.byteOffset+=s.byteLength,n.bufferViews.push(o)-1})}processAccessor(e,t,n,r){const s=this.json,o={1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",9:"MAT3",16:"MAT4"};let a;if(e.array.constructor===Float32Array)a=ot.FLOAT;else if(e.array.constructor===Int32Array)a=ot.INT;else if(e.array.constructor===Uint32Array)a=ot.UNSIGNED_INT;else if(e.array.constructor===Int16Array)a=ot.SHORT;else if(e.array.constructor===Uint16Array)a=ot.UNSIGNED_SHORT;else if(e.array.constructor===Int8Array)a=ot.BYTE;else if(e.array.constructor===Uint8Array)a=ot.UNSIGNED_BYTE;else throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type: "+e.array.constructor.name);if(n===void 0&&(n=0),r===void 0&&(r=e.count),r===0)return null;const l=rD(e,n,r);let c;t!==void 0&&(c=e===t.index?ot.ELEMENT_ARRAY_BUFFER:ot.ARRAY_BUFFER);const u=this.processBufferView(e,a,n,r,c),h={bufferView:u.id,byteOffset:u.byteOffset,componentType:a,count:r,max:l.max,min:l.min,type:o[e.itemSize]};return e.normalized===!0&&(h.normalized=!0),s.accessors||(s.accessors=[]),s.accessors.push(h)-1}processImage(e,t,n,r="image/png"){if(e!==null){const s=this,o=s.cache,a=s.json,l=s.options,c=s.pending;o.images.has(e)||o.images.set(e,{});const u=o.images.get(e),h=r+":flipY/"+n.toString();if(u[h]!==void 0)return u[h];a.images||(a.images=[]);const f={mimeType:r},d=Yv();d.width=Math.min(e.width,l.maxTextureSize),d.height=Math.min(e.height,l.maxTextureSize);const p=d.getContext("2d");if(n===!0&&(p.translate(0,d.height),p.scale(1,-1)),e.data!==void 0){t!==Qt&&console.error("GLTFExporter: Only RGBAFormat is supported.",t),(e.width>l.maxTextureSize||e.height>l.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",e);const m=new Uint8ClampedArray(e.height*e.width*4);for(let g=0;g<m.length;g+=4)m[g+0]=e.data[g+0],m[g+1]=e.data[g+1],m[g+2]=e.data[g+2],m[g+3]=e.data[g+3];p.putImageData(new ImageData(m,e.width,e.height),0,0)}else p.drawImage(e,0,0,d.width,d.height);l.binary===!0?c.push(qv(d,r).then(m=>s.processBufferViewImage(m)).then(m=>{f.bufferView=m})):d.toDataURL!==void 0?f.uri=d.toDataURL(r):c.push(qv(d,r).then(Hv).then(m=>{f.uri=m}));const v=a.images.push(f)-1;return u[h]=v,v}else throw new Error("THREE.GLTFExporter: No valid image data found. Unable to process texture.")}processSampler(e){const t=this.json;t.samplers||(t.samplers=[]);const n={magFilter:jn[e.magFilter],minFilter:jn[e.minFilter],wrapS:jn[e.wrapS],wrapT:jn[e.wrapT]};return t.samplers.push(n)-1}processTexture(e){const t=this.options,n=this.cache,r=this.json;if(n.textures.has(e))return n.textures.get(e);r.textures||(r.textures=[]),e instanceof ys&&(e=Of(e,t.maxTextureSize));let s=e.userData.mimeType;s==="image/webp"&&(s="image/png");const o={sampler:this.processSampler(e),source:this.processImage(e.image,e.format,e.flipY,s)};e.name&&(o.name=e.name),this._invokeAll(function(l){l.writeTexture&&l.writeTexture(e,o)});const a=r.textures.push(o)-1;return n.textures.set(e,a),a}processMaterial(e){const t=this.cache,n=this.json;if(t.materials.has(e))return t.materials.get(e);if(e.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;n.materials||(n.materials=[]);const r={pbrMetallicRoughness:{}};e.isMeshStandardMaterial!==!0&&e.isMeshBasicMaterial!==!0&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");const s=e.color.toArray().concat([e.opacity]);if(ua(s,[1,1,1,1])||(r.pbrMetallicRoughness.baseColorFactor=s),e.isMeshStandardMaterial?(r.pbrMetallicRoughness.metallicFactor=e.metalness,r.pbrMetallicRoughness.roughnessFactor=e.roughness):(r.pbrMetallicRoughness.metallicFactor=.5,r.pbrMetallicRoughness.roughnessFactor=.5),e.metalnessMap||e.roughnessMap){const a=this.buildMetalRoughTexture(e.metalnessMap,e.roughnessMap),l={index:this.processTexture(a),channel:a.channel};this.applyTextureTransform(l,a),r.pbrMetallicRoughness.metallicRoughnessTexture=l}if(e.map){const a={index:this.processTexture(e.map),texCoord:e.map.channel};this.applyTextureTransform(a,e.map),r.pbrMetallicRoughness.baseColorTexture=a}if(e.emissive){const a=e.emissive;if(Math.max(a.r,a.g,a.b)>0&&(r.emissiveFactor=e.emissive.toArray()),e.emissiveMap){const l={index:this.processTexture(e.emissiveMap),texCoord:e.emissiveMap.channel};this.applyTextureTransform(l,e.emissiveMap),r.emissiveTexture=l}}if(e.normalMap){const a={index:this.processTexture(e.normalMap),texCoord:e.normalMap.channel};e.normalScale&&e.normalScale.x!==1&&(a.scale=e.normalScale.x),this.applyTextureTransform(a,e.normalMap),r.normalTexture=a}if(e.aoMap){const a={index:this.processTexture(e.aoMap),texCoord:e.aoMap.channel};e.aoMapIntensity!==1&&(a.strength=e.aoMapIntensity),this.applyTextureTransform(a,e.aoMap),r.occlusionTexture=a}e.transparent?r.alphaMode="BLEND":e.alphaTest>0&&(r.alphaMode="MASK",r.alphaCutoff=e.alphaTest),e.side===En&&(r.doubleSided=!0),e.name!==""&&(r.name=e.name),this.serializeUserData(e,r),this._invokeAll(function(a){a.writeMaterial&&a.writeMaterial(e,r)});const o=n.materials.push(r)-1;return t.materials.set(e,o),o}processMesh(e){const t=this.cache,n=this.json,r=[e.geometry.uuid];if(Array.isArray(e.material))for(let b=0,y=e.material.length;b<y;b++)r.push(e.material[b].uuid);else r.push(e.material.uuid);const s=r.join(":");if(t.meshes.has(s))return t.meshes.get(s);const o=e.geometry;let a;e.isLineSegments?a=ot.LINES:e.isLineLoop?a=ot.LINE_LOOP:e.isLine?a=ot.LINE_STRIP:e.isPoints?a=ot.POINTS:a=e.material.wireframe?ot.LINES:ot.TRIANGLES;const l={},c={},u=[],h=[],f={...Xp>=152?{uv:"TEXCOORD_0",uv1:"TEXCOORD_1",uv2:"TEXCOORD_2",uv3:"TEXCOORD_3"}:{uv:"TEXCOORD_0",uv2:"TEXCOORD_1"},color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},d=o.getAttribute("normal");d!==void 0&&!this.isNormalizedNormalAttribute(d)&&(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),o.setAttribute("normal",this.createNormalizedNormalAttribute(d)));let p=null;for(let b in o.attributes){if(b.slice(0,5)==="morph")continue;const y=o.attributes[b];if(b=f[b]||b.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(b)||(b="_"+b),t.attributes.has(this.getUID(y))){c[b]=t.attributes.get(this.getUID(y));continue}p=null;const C=y.array;b==="JOINTS_0"&&!(C instanceof Uint16Array)&&!(C instanceof Uint8Array)&&(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),p=new lt(new Uint16Array(C),y.itemSize,y.normalized));const w=this.processAccessor(p||y,o);w!==null&&(b.startsWith("_")||this.detectMeshQuantization(b,y),c[b]=w,t.attributes.set(this.getUID(y),w))}if(d!==void 0&&o.setAttribute("normal",d),Object.keys(c).length===0)return null;if(e.morphTargetInfluences!==void 0&&e.morphTargetInfluences.length>0){const b=[],y=[],C={};if(e.morphTargetDictionary!==void 0)for(const w in e.morphTargetDictionary)C[e.morphTargetDictionary[w]]=w;for(let w=0;w<e.morphTargetInfluences.length;++w){const E={};let S=!1;for(const x in o.morphAttributes){if(x!=="position"&&x!=="normal"){S||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),S=!0);continue}const _=o.morphAttributes[x][w],A=x.toUpperCase(),N=o.attributes[x];if(t.attributes.has(this.getUID(_,!0))){E[A]=t.attributes.get(this.getUID(_,!0));continue}const B=_.clone();if(!o.morphTargetsRelative)for(let V=0,X=_.count;V<X;V++)for(let z=0;z<_.itemSize;z++)z===0&&B.setX(V,_.getX(V)-N.getX(V)),z===1&&B.setY(V,_.getY(V)-N.getY(V)),z===2&&B.setZ(V,_.getZ(V)-N.getZ(V)),z===3&&B.setW(V,_.getW(V)-N.getW(V));E[A]=this.processAccessor(B,o),t.attributes.set(this.getUID(N,!0),E[A])}h.push(E),b.push(e.morphTargetInfluences[w]),e.morphTargetDictionary!==void 0&&y.push(C[w])}l.weights=b,y.length>0&&(l.extras={},l.extras.targetNames=y)}const v=Array.isArray(e.material);if(v&&o.groups.length===0)return null;const m=v?e.material:[e.material],g=v?o.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let b=0,y=g.length;b<y;b++){const C={mode:a,attributes:c};if(this.serializeUserData(o,C),h.length>0&&(C.targets=h),o.index!==null){let E=this.getUID(o.index);(g[b].start!==void 0||g[b].count!==void 0)&&(E+=":"+g[b].start+":"+g[b].count),t.attributes.has(E)?C.indices=t.attributes.get(E):(C.indices=this.processAccessor(o.index,o,g[b].start,g[b].count),t.attributes.set(E,C.indices)),C.indices===null&&delete C.indices}const w=this.processMaterial(m[g[b].materialIndex]);w!==null&&(C.material=w),u.push(C)}l.primitives=u,n.meshes||(n.meshes=[]),this._invokeAll(function(b){b.writeMesh&&b.writeMesh(e,l)});const M=n.meshes.push(l)-1;return t.meshes.set(s,M),M}detectMeshQuantization(e,t){if(this.extensionsUsed[Ff])return;let n;switch(t.array.constructor){case Int8Array:n="byte";break;case Uint8Array:n="unsigned byte";break;case Int16Array:n="short";break;case Uint16Array:n="unsigned short";break;default:return}t.normalized&&(n+=" normalized");const r=e.split("_",1)[0];Gv[r]&&Gv[r].includes(n)&&(this.extensionsUsed[Ff]=!0,this.extensionsRequired[Ff]=!0)}processCamera(e){const t=this.json;t.cameras||(t.cameras=[]);const n=e.isOrthographicCamera,r={type:n?"orthographic":"perspective"};return n?r.orthographic={xmag:e.right*2,ymag:e.top*2,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}:r.perspective={aspectRatio:e.aspect,yfov:Bi.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near},e.name!==""&&(r.name=e.type),t.cameras.push(r)-1}processAnimation(e,t){const n=this.json,r=this.nodeMap;n.animations||(n.animations=[]),e=Yy.Utils.mergeMorphTargetTracks(e.clone(),t);const s=e.tracks,o=[],a=[];for(let l=0;l<s.length;++l){const c=s[l],u=rt.parseTrackName(c.name);let h=rt.findNode(t,u.nodeName);const f=Wv[u.propertyName];if(u.objectName==="bones"&&(h.isSkinnedMesh===!0?h=h.skeleton.getBoneByName(u.objectIndex):h=void 0),!h||!f)return console.warn('THREE.GLTFExporter: Could not export animation track "%s".',c.name),null;const d=1;let p=c.values.length/c.times.length;f===Wv.morphTargetInfluences&&(p/=h.morphTargetInfluences.length);let v;c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline===!0?(v="CUBICSPLINE",p/=3):c.getInterpolation()===Es?v="STEP":v="LINEAR",a.push({input:this.processAccessor(new lt(c.times,d)),output:this.processAccessor(new lt(c.values,p)),interpolation:v}),o.push({sampler:a.length-1,target:{node:r.get(h),path:f}})}return n.animations.push({name:e.name||"clip_"+n.animations.length,samplers:a,channels:o}),n.animations.length-1}processSkin(e){const t=this.json,n=this.nodeMap,r=t.nodes[n.get(e)],s=e.skeleton;if(s===void 0)return null;const o=e.skeleton.bones[0];if(o===void 0)return null;const a=[],l=new Float32Array(s.bones.length*16),c=new ke;for(let u=0;u<s.bones.length;++u)a.push(n.get(s.bones[u])),c.copy(s.boneInverses[u]),c.multiply(e.bindMatrix).toArray(l,u*16);return t.skins===void 0&&(t.skins=[]),t.skins.push({inverseBindMatrices:this.processAccessor(new lt(l,16)),joints:a,skeleton:n.get(o)}),r.skin=t.skins.length-1}processNode(e){const t=this.json,n=this.options,r=this.nodeMap;t.nodes||(t.nodes=[]);const s={};if(n.trs){const a=e.quaternion.toArray(),l=e.position.toArray(),c=e.scale.toArray();ua(a,[0,0,0,1])||(s.rotation=a),ua(l,[0,0,0])||(s.translation=l),ua(c,[1,1,1])||(s.scale=c)}else e.matrixAutoUpdate&&e.updateMatrix(),iD(e.matrix)===!1&&(s.matrix=e.matrix.elements);if(e.name!==""&&(s.name=String(e.name)),this.serializeUserData(e,s),e.isMesh||e.isLine||e.isPoints){const a=this.processMesh(e);a!==null&&(s.mesh=a)}else e.isCamera&&(s.camera=this.processCamera(e));if(e.isSkinnedMesh&&this.skins.push(e),e.children.length>0){const a=[];for(let l=0,c=e.children.length;l<c;l++){const u=e.children[l];if(u.visible||n.onlyVisible===!1){const h=this.processNode(u);h!==null&&a.push(h)}}a.length>0&&(s.children=a)}this._invokeAll(function(a){a.writeNode&&a.writeNode(e,s)});const o=t.nodes.push(s)-1;return r.set(e,o),o}processScene(e){const t=this.json,n=this.options;t.scenes||(t.scenes=[],t.scene=0);const r={};e.name!==""&&(r.name=e.name),t.scenes.push(r);const s=[];for(let o=0,a=e.children.length;o<a;o++){const l=e.children[o];if(l.visible||n.onlyVisible===!1){const c=this.processNode(l);c!==null&&s.push(c)}}s.length>0&&(r.nodes=s),this.serializeUserData(e,r)}processObjects(e){const t=new Rs;t.name="AuxScene";for(let n=0;n<e.length;n++)t.children.push(e[n]);this.processScene(t)}processInput(e){const t=this.options;e=e instanceof Array?e:[e],this._invokeAll(function(r){r.beforeParse&&r.beforeParse(e)});const n=[];for(let r=0;r<e.length;r++)e[r]instanceof Rs?this.processScene(e[r]):n.push(e[r]);n.length>0&&this.processObjects(n);for(let r=0;r<this.skins.length;++r)this.processSkin(this.skins[r]);for(let r=0;r<t.animations.length;++r)this.processAnimation(t.animations[r],e[0]);this._invokeAll(function(r){r.afterParse&&r.afterParse(e)})}_invokeAll(e){for(let t=0,n=this.plugins.length;t<n;t++)e(this.plugins[t])}}class oD{constructor(e){this.writer=e,this.name="KHR_lights_punctual"}writeNode(e,t){if(!e.isLight)return;if(!e.isDirectionalLight&&!e.isPointLight&&!e.isSpotLight){console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e);return}const n=this.writer,r=n.json,s=n.extensionsUsed,o={};e.name&&(o.name=e.name),o.color=e.color.toArray(),o.intensity=e.intensity,e.isDirectionalLight?o.type="directional":e.isPointLight?(o.type="point",e.distance>0&&(o.range=e.distance)):e.isSpotLight&&(o.type="spot",e.distance>0&&(o.range=e.distance),o.spot={},o.spot.innerConeAngle=(e.penumbra-1)*e.angle*-1,o.spot.outerConeAngle=e.angle),e.decay!==void 0&&e.decay!==2&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),e.target&&(e.target.parent!==e||e.target.position.x!==0||e.target.position.y!==0||e.target.position.z!==-1)&&console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),s[this.name]||(r.extensions=r.extensions||{},r.extensions[this.name]={lights:[]},s[this.name]=!0);const a=r.extensions[this.name].lights;a.push(o),t.extensions=t.extensions||{},t.extensions[this.name]={light:a.length-1}}}let aD=class{constructor(i){this.writer=i,this.name="KHR_materials_unlit"}writeMaterial(i,e){if(!i.isMeshBasicMaterial)return;const t=this.writer.extensionsUsed;e.extensions=e.extensions||{},e.extensions[this.name]={},t[this.name]=!0,e.pbrMetallicRoughness.metallicFactor=0,e.pbrMetallicRoughness.roughnessFactor=.9}},lD=class{constructor(i){this.writer=i,this.name="KHR_materials_clearcoat"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.clearcoat===0)return;const t=this.writer,n=t.extensionsUsed,r={};if(r.clearcoatFactor=i.clearcoat,i.clearcoatMap){const s={index:t.processTexture(i.clearcoatMap),texCoord:i.clearcoatMap.channel};t.applyTextureTransform(s,i.clearcoatMap),r.clearcoatTexture=s}if(r.clearcoatRoughnessFactor=i.clearcoatRoughness,i.clearcoatRoughnessMap){const s={index:t.processTexture(i.clearcoatRoughnessMap),texCoord:i.clearcoatRoughnessMap.channel};t.applyTextureTransform(s,i.clearcoatRoughnessMap),r.clearcoatRoughnessTexture=s}if(i.clearcoatNormalMap){const s={index:t.processTexture(i.clearcoatNormalMap),texCoord:i.clearcoatNormalMap.channel};t.applyTextureTransform(s,i.clearcoatNormalMap),r.clearcoatNormalTexture=s}e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},cD=class{constructor(i){this.writer=i,this.name="KHR_materials_iridescence"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.iridescence===0)return;const t=this.writer,n=t.extensionsUsed,r={};if(r.iridescenceFactor=i.iridescence,i.iridescenceMap){const s={index:t.processTexture(i.iridescenceMap),texCoord:i.iridescenceMap.channel};t.applyTextureTransform(s,i.iridescenceMap),r.iridescenceTexture=s}if(r.iridescenceIor=i.iridescenceIOR,r.iridescenceThicknessMinimum=i.iridescenceThicknessRange[0],r.iridescenceThicknessMaximum=i.iridescenceThicknessRange[1],i.iridescenceThicknessMap){const s={index:t.processTexture(i.iridescenceThicknessMap),texCoord:i.iridescenceThicknessMap.channel};t.applyTextureTransform(s,i.iridescenceThicknessMap),r.iridescenceThicknessTexture=s}e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},uD=class{constructor(i){this.writer=i,this.name="KHR_materials_transmission"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.transmission===0)return;const t=this.writer,n=t.extensionsUsed,r={};if(r.transmissionFactor=i.transmission,i.transmissionMap){const s={index:t.processTexture(i.transmissionMap),texCoord:i.transmissionMap.channel};t.applyTextureTransform(s,i.transmissionMap),r.transmissionTexture=s}e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},hD=class{constructor(i){this.writer=i,this.name="KHR_materials_volume"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.transmission===0)return;const t=this.writer,n=t.extensionsUsed,r={};if(r.thicknessFactor=i.thickness,i.thicknessMap){const s={index:t.processTexture(i.thicknessMap),texCoord:i.thicknessMap.channel};t.applyTextureTransform(s,i.thicknessMap),r.thicknessTexture=s}r.attenuationDistance=i.attenuationDistance,r.attenuationColor=i.attenuationColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},fD=class{constructor(i){this.writer=i,this.name="KHR_materials_ior"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.ior===1.5)return;const t=this.writer.extensionsUsed,n={};n.ior=i.ior,e.extensions=e.extensions||{},e.extensions[this.name]=n,t[this.name]=!0}},dD=class{constructor(i){this.writer=i,this.name="KHR_materials_specular"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.specularIntensity===1&&i.specularColor.equals(Z3)&&!i.specularIntensityMap&&!i.specularColorTexture)return;const t=this.writer,n=t.extensionsUsed,r={};if(i.specularIntensityMap){const s={index:t.processTexture(i.specularIntensityMap),texCoord:i.specularIntensityMap.channel};t.applyTextureTransform(s,i.specularIntensityMap),r.specularTexture=s}if(i.specularColorMap){const s={index:t.processTexture(i.specularColorMap),texCoord:i.specularColorMap.channel};t.applyTextureTransform(s,i.specularColorMap),r.specularColorTexture=s}r.specularFactor=i.specularIntensity,r.specularColorFactor=i.specularColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},pD=class{constructor(i){this.writer=i,this.name="KHR_materials_sheen"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.sheen==0)return;const t=this.writer,n=t.extensionsUsed,r={};if(i.sheenRoughnessMap){const s={index:t.processTexture(i.sheenRoughnessMap),texCoord:i.sheenRoughnessMap.channel};t.applyTextureTransform(s,i.sheenRoughnessMap),r.sheenRoughnessTexture=s}if(i.sheenColorMap){const s={index:t.processTexture(i.sheenColorMap),texCoord:i.sheenColorMap.channel};t.applyTextureTransform(s,i.sheenColorMap),r.sheenColorTexture=s}r.sheenRoughnessFactor=i.sheenRoughness,r.sheenColorFactor=i.sheenColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},mD=class{constructor(i){this.writer=i,this.name="KHR_materials_anisotropy"}writeMaterial(i,e){if(!i.isMeshPhysicalMaterial||i.anisotropy==0)return;const t=this.writer,n=t.extensionsUsed,r={};if(i.anisotropyMap){const s={index:t.processTexture(i.anisotropyMap)};t.applyTextureTransform(s,i.anisotropyMap),r.anisotropyTexture=s}r.anisotropyStrength=i.anisotropy,r.anisotropyRotation=i.anisotropyRotation,e.extensions=e.extensions||{},e.extensions[this.name]=r,n[this.name]=!0}},gD=class{constructor(i){this.writer=i,this.name="KHR_materials_emissive_strength"}writeMaterial(i,e){if(!i.isMeshStandardMaterial||i.emissiveIntensity===1)return;const t=this.writer.extensionsUsed,n={};n.emissiveStrength=i.emissiveIntensity,e.extensions=e.extensions||{},e.extensions[this.name]=n,t[this.name]=!0}};var pl=Uint8Array,$y=Uint16Array,vD=Uint32Array,_D=new pl([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),xD=new pl([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Ky=function(i,e){for(var t=new $y(31),n=0;n<31;++n)t[n]=e+=1<<i[n-1];for(var r=new vD(t[30]),n=1;n<30;++n)for(var s=t[n];s<t[n+1];++s)r[s]=s-t[n]<<5|n;return[t,r]},Zy=Ky(_D,2),yD=Zy[0],bD=Zy[1];yD[28]=258,bD[258]=28;Ky(xD,0);var MD=new $y(32768);for(var Rt=0;Rt<32768;++Rt){var yr=(Rt&43690)>>>1|(Rt&21845)<<1;yr=(yr&52428)>>>2|(yr&13107)<<2,yr=(yr&61680)>>>4|(yr&3855)<<4,MD[Rt]=((yr&65280)>>>8|(yr&255)<<8)>>>1}var Mh=new pl(288);for(var Rt=0;Rt<144;++Rt)Mh[Rt]=8;for(var Rt=144;Rt<256;++Rt)Mh[Rt]=9;for(var Rt=256;Rt<280;++Rt)Mh[Rt]=7;for(var Rt=280;Rt<288;++Rt)Mh[Rt]=8;var SD=new pl(32);for(var Rt=0;Rt<32;++Rt)SD[Rt]=5;var wD=new pl(0),TD=typeof TextDecoder<"u"&&new TextDecoder,ED=0;try{TD.decode(wD,{stream:!0}),ED=1}catch{}var AD=Object.defineProperty,RD=(i,e,t)=>e in i?AD(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,CD=(i,e,t)=>(RD(i,e+"",t),t);const Jy=class extends wt{constructor(i,e={}){super(i),this.isReflector=!0,this.type="Reflector",this.camera=new St;const t=this,n=e.color!==void 0?new we(e.color):new we(8355711),r=e.textureWidth||512,s=e.textureHeight||512,o=e.clipBias||0,a=e.shader||Jy.ReflectorShader,l=e.multisample!==void 0?e.multisample:4,c=new Ii,u=new F,h=new F,f=new F,d=new ke,p=new F(0,0,-1),v=new it,m=new F,g=new F,M=new it,b=new ke,y=this.camera,C=new _i(r,s,{samples:l,type:hi}),w=new gn({uniforms:sl.clone(a.uniforms),fragmentShader:a.fragmentShader,vertexShader:a.vertexShader});w.uniforms.tDiffuse.value=C.texture,w.uniforms.color.value=n,w.uniforms.textureMatrix.value=b,this.material=w,this.onBeforeRender=function(E,S,x){if(h.setFromMatrixPosition(t.matrixWorld),f.setFromMatrixPosition(x.matrixWorld),d.extractRotation(t.matrixWorld),u.set(0,0,1),u.applyMatrix4(d),m.subVectors(h,f),m.dot(u)>0)return;m.reflect(u).negate(),m.add(h),d.extractRotation(x.matrixWorld),p.set(0,0,-1),p.applyMatrix4(d),p.add(f),g.subVectors(h,p),g.reflect(u).negate(),g.add(h),y.position.copy(m),y.up.set(0,1,0),y.up.applyMatrix4(d),y.up.reflect(u),y.lookAt(g),y.far=x.far,y.updateMatrixWorld(),y.projectionMatrix.copy(x.projectionMatrix),b.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),b.multiply(y.projectionMatrix),b.multiply(y.matrixWorldInverse),b.multiply(t.matrixWorld),c.setFromNormalAndCoplanarPoint(u,h),c.applyMatrix4(y.matrixWorldInverse),v.set(c.normal.x,c.normal.y,c.normal.z,c.constant);const _=y.projectionMatrix;M.x=(Math.sign(v.x)+_.elements[8])/_.elements[0],M.y=(Math.sign(v.y)+_.elements[9])/_.elements[5],M.z=-1,M.w=(1+_.elements[10])/_.elements[14],v.multiplyScalar(2/v.dot(M)),_.elements[2]=v.x,_.elements[6]=v.y,_.elements[10]=v.z+1-o,_.elements[14]=v.w,t.visible=!1;const A=E.getRenderTarget(),N=E.xr.enabled,B=E.shadowMap.autoUpdate,V=E.toneMapping;let X=!1;"outputColorSpace"in E?X=E.outputColorSpace==="srgb":X=E.outputEncoding===3001,E.xr.enabled=!1,E.shadowMap.autoUpdate=!1,"outputColorSpace"in E?E.outputColorSpace="srgb-linear":E.outputEncoding=3e3,E.toneMapping=gi,E.setRenderTarget(C),E.state.buffers.depth.setMask(!0),E.autoClear===!1&&E.clear(),E.render(S,y),E.xr.enabled=N,E.shadowMap.autoUpdate=B,E.toneMapping=V,"outputColorSpace"in E?E.outputColorSpace=X?"srgb":"srgb-linear":E.outputEncoding=X?3001:3e3,E.setRenderTarget(A);const z=x.viewport;z!==void 0&&E.state.viewport(z),t.visible=!0},this.getRenderTarget=function(){return C},this.dispose=function(){C.dispose(),t.material.dispose()}}};let Ed=Jy;CD(Ed,"ReflectorShader",{uniforms:{color:{value:null},tDiffuse:{value:null},textureMatrix:{value:null}},vertexShader:`
		uniform mat4 textureMatrix;
		varying vec4 vUv;

		#include <common>
		#include <logdepthbuf_pars_vertex>

		void main() {

			vUv = textureMatrix * vec4( position, 1.0 );

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

			#include <logdepthbuf_vertex>

		}`,fragmentShader:`
		uniform vec3 color;
		uniform sampler2D tDiffuse;
		varying vec4 vUv;

		#include <logdepthbuf_pars_fragment>

		float blendOverlay( float base, float blend ) {

			return( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );

		}

		vec3 blendOverlay( vec3 base, vec3 blend ) {

			return vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );

		}

		void main() {

			#include <logdepthbuf_fragment>

			vec4 base = texture2DProj( tDiffuse, vUv );
			gl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );

			#include <tonemapping_fragment>
			#include <${Xp>=154?"colorspace_fragment":"encodings_fragment"}>

		}`});var ID=Object.defineProperty,PD=(i,e,t)=>e in i?ID(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,Qy=(i,e,t)=>(PD(i,typeof e!="symbol"?e+"":e,t),t);const Sh=new Ze,LD=new Float32Array([-1,-1,0,0,0,1,-1,0,1,0,1,1,0,1,1,-1,1,0,0,1]),eb=new Uo(LD,5);Sh.setIndex([0,1,2,0,2,3]);Sh.setAttribute("position",new zi(eb,3,0,!1));Sh.setAttribute("uv",new zi(eb,2,3,!1));const Ad=class extends wt{constructor(){super(Ad.Geometry,new Cn({opacity:0,transparent:!0})),this.isLensflare=!0,this.type="Lensflare",this.frustumCulled=!1,this.renderOrder=1/0;const i=new F,e=new F,t=new ni(new Uint8Array(16*16*3),16,16,Qt);t.minFilter=Lt,t.magFilter=Lt,t.wrapS=Jt,t.wrapT=Jt;const n=new ni(new Uint8Array(16*16*3),16,16,Qt);n.minFilter=Lt,n.magFilter=Lt,n.wrapS=Jt,n.wrapT=Jt;const r=Ad.Geometry,s=new Ea({uniforms:{scale:{value:null},screenPosition:{value:null}},vertexShader:`

				precision highp float;

				uniform vec3 screenPosition;
				uniform vec2 scale;

				attribute vec3 position;

				void main() {

					gl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );

				}`,fragmentShader:`

				precision highp float;

				void main() {

					gl_FragColor = vec4( 1.0, 0.0, 1.0, 1.0 );

				}`,depthTest:!0,depthWrite:!1,transparent:!1}),o=new Ea({uniforms:{map:{value:t},scale:{value:null},screenPosition:{value:null}},vertexShader:`

				precision highp float;

				uniform vec3 screenPosition;
				uniform vec2 scale;

				attribute vec3 position;
				attribute vec2 uv;

				varying vec2 vUV;

				void main() {

					vUV = uv;

					gl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );

				}`,fragmentShader:`

				precision highp float;

				uniform sampler2D map;

				varying vec2 vUV;

				void main() {

					gl_FragColor = texture2D( map, vUV );

				}`,depthTest:!1,depthWrite:!1,transparent:!1}),a=new wt(r,s),l=[],c=tb.Shader,u=new Ea({uniforms:{map:{value:null},occlusionMap:{value:n},color:{value:new we(16777215)},scale:{value:new pe},screenPosition:{value:new F}},vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,blending:Oc,transparent:!0,depthWrite:!1}),h=new wt(r,u);this.addElement=function(m){l.push(m)};const f=new pe,d=new pe,p=new iy,v=new it;this.onBeforeRender=function(m,g,M){m.getCurrentViewport(v);const b=v.w/v.z,y=v.z/2,C=v.w/2;let w=16/v.w;if(f.set(w*b,w),p.min.set(v.x,v.y),p.max.set(v.x+(v.z-16),v.y+(v.w-16)),e.setFromMatrixPosition(this.matrixWorld),e.applyMatrix4(M.matrixWorldInverse),!(e.z>0)&&(i.copy(e).applyMatrix4(M.projectionMatrix),d.x=v.x+i.x*y+y-8,d.y=v.y+i.y*C+C-8,p.containsPoint(d))){m.copyFramebufferToTexture(d,t);let E=s.uniforms;E.scale.value=f,E.screenPosition.value=i,m.renderBufferDirect(M,null,r,s,a,null),m.copyFramebufferToTexture(d,n),E=o.uniforms,E.scale.value=f,E.screenPosition.value=i,m.renderBufferDirect(M,null,r,o,a,null);const S=-i.x*2,x=-i.y*2;for(let _=0,A=l.length;_<A;_++){const N=l[_],B=u.uniforms;B.color.value.copy(N.color),B.map.value=N.texture,B.screenPosition.value.x=i.x+S*N.distance,B.screenPosition.value.y=i.y+x*N.distance,w=N.size/v.w;const V=v.w/v.z;B.scale.value.set(w*V,w),u.uniformsNeedUpdate=!0,m.renderBufferDirect(M,null,r,u,h,null)}}},this.dispose=function(){s.dispose(),o.dispose(),u.dispose(),t.dispose(),n.dispose();for(let m=0,g=l.length;m<g;m++)l[m].texture.dispose()}}};let DD=Ad;Qy(DD,"Geometry",Sh);class tb{constructor(e,t=1,n=0,r=new we(16777215)){this.texture=e,this.size=t,this.distance=n,this.color=r}}Qy(tb,"Shader",{uniforms:{map:{value:null},occlusionMap:{value:null},color:{value:null},scale:{value:null},screenPosition:{value:null}},vertexShader:`

		precision highp float;

		uniform vec3 screenPosition;
		uniform vec2 scale;

		uniform sampler2D occlusionMap;

		attribute vec3 position;
		attribute vec2 uv;

		varying vec2 vUV;
		varying float vVisibility;

		void main() {

			vUV = uv;

			vec2 pos = position.xy;

			vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );
			visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );
			visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );
			visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );
			visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );
			visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );
			visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );
			visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );
			visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );

			vVisibility =        visibility.r / 9.0;
			vVisibility *= 1.0 - visibility.g / 9.0;
			vVisibility *=       visibility.b / 9.0;

			gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );

		}`,fragmentShader:`

		precision highp float;

		uniform sampler2D map;
		uniform vec3 color;

		varying vec2 vUV;
		varying float vVisibility;

		void main() {

			vec4 texture = texture2D( map, vUV );
			texture.a *= vVisibility;
			gl_FragColor = texture;
			gl_FragColor.rgb *= color;

		}`});var ND=Object.defineProperty,UD=(i,e,t)=>e in i?ND(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,nb=(i,e,t)=>(UD(i,typeof e!="symbol"?e+"":e,t),t);const Ac={uniforms:{turbidity:{value:2},rayleigh:{value:1},mieCoefficient:{value:.005},mieDirectionalG:{value:.8},sunPosition:{value:new F},up:{value:new F(0,1,0)}},vertexShader:`
      uniform vec3 sunPosition;
      uniform float rayleigh;
      uniform float turbidity;
      uniform float mieCoefficient;
      uniform vec3 up;

      varying vec3 vWorldPosition;
      varying vec3 vSunDirection;
      varying float vSunfade;
      varying vec3 vBetaR;
      varying vec3 vBetaM;
      varying float vSunE;

      // constants for atmospheric scattering
      const float e = 2.71828182845904523536028747135266249775724709369995957;
      const float pi = 3.141592653589793238462643383279502884197169;

      // wavelength of used primaries, according to preetham
      const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );
      // this pre-calcuation replaces older TotalRayleigh(vec3 lambda) function:
      // (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))
      const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );

      // mie stuff
      // K coefficient for the primaries
      const float v = 4.0;
      const vec3 K = vec3( 0.686, 0.678, 0.666 );
      // MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K
      const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );

      // earth shadow hack
      // cutoffAngle = pi / 1.95;
      const float cutoffAngle = 1.6110731556870734;
      const float steepness = 1.5;
      const float EE = 1000.0;

      float sunIntensity( float zenithAngleCos ) {
        zenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );
        return EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );
      }

      vec3 totalMie( float T ) {
        float c = ( 0.2 * T ) * 10E-18;
        return 0.434 * c * MieConst;
      }

      void main() {

        vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
        vWorldPosition = worldPosition.xyz;

        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        gl_Position.z = gl_Position.w; // set z to camera.far

        vSunDirection = normalize( sunPosition );

        vSunE = sunIntensity( dot( vSunDirection, up ) );

        vSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );

        float rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );

      // extinction (absorbtion + out scattering)
      // rayleigh coefficients
        vBetaR = totalRayleigh * rayleighCoefficient;

      // mie coefficients
        vBetaM = totalMie( turbidity ) * mieCoefficient;

      }
    `,fragmentShader:`
      varying vec3 vWorldPosition;
      varying vec3 vSunDirection;
      varying float vSunfade;
      varying vec3 vBetaR;
      varying vec3 vBetaM;
      varying float vSunE;

      uniform float mieDirectionalG;
      uniform vec3 up;

      const vec3 cameraPos = vec3( 0.0, 0.0, 0.0 );

      // constants for atmospheric scattering
      const float pi = 3.141592653589793238462643383279502884197169;

      const float n = 1.0003; // refractive index of air
      const float N = 2.545E25; // number of molecules per unit volume for air at 288.15K and 1013mb (sea level -45 celsius)

      // optical length at zenith for molecules
      const float rayleighZenithLength = 8.4E3;
      const float mieZenithLength = 1.25E3;
      // 66 arc seconds -> degrees, and the cosine of that
      const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;

      // 3.0 / ( 16.0 * pi )
      const float THREE_OVER_SIXTEENPI = 0.05968310365946075;
      // 1.0 / ( 4.0 * pi )
      const float ONE_OVER_FOURPI = 0.07957747154594767;

      float rayleighPhase( float cosTheta ) {
        return THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );
      }

      float hgPhase( float cosTheta, float g ) {
        float g2 = pow( g, 2.0 );
        float inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );
        return ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );
      }

      void main() {

        vec3 direction = normalize( vWorldPosition - cameraPos );

      // optical length
      // cutoff angle at 90 to avoid singularity in next formula.
        float zenithAngle = acos( max( 0.0, dot( up, direction ) ) );
        float inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );
        float sR = rayleighZenithLength * inverse;
        float sM = mieZenithLength * inverse;

      // combined extinction factor
        vec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );

      // in scattering
        float cosTheta = dot( direction, vSunDirection );

        float rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );
        vec3 betaRTheta = vBetaR * rPhase;

        float mPhase = hgPhase( cosTheta, mieDirectionalG );
        vec3 betaMTheta = vBetaM * mPhase;

        vec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );
        Lin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );

      // nightsky
        float theta = acos( direction.y ); // elevation --> y-axis, [-pi/2, pi/2]
        float phi = atan( direction.z, direction.x ); // azimuth --> x-axis [-pi/2, pi/2]
        vec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );
        vec3 L0 = vec3( 0.1 ) * Fex;

      // composition + solar disc
        float sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );
        L0 += ( vSunE * 19000.0 * Fex ) * sundisk;

        vec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );

        vec3 retColor = pow( texColor, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );

        gl_FragColor = vec4( retColor, 1.0 );

      #include <tonemapping_fragment>
      #include <${Xp>=154?"colorspace_fragment":"encodings_fragment"}>

      }
    `},ib=new gn({name:"SkyShader",fragmentShader:Ac.fragmentShader,vertexShader:Ac.vertexShader,uniforms:sl.clone(Ac.uniforms),side:pn,depthWrite:!1});class rb extends wt{constructor(){super(new Br(1,1,1),ib)}}nb(rb,"SkyShader",Ac);nb(rb,"material",ib);new Rn;new F;new In(0,0,0,"YXZ");new F;var OD=Object.defineProperty,FD=(i,e,t)=>e in i?OD(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,Ge=(i,e,t)=>(FD(i,typeof e!="symbol"?e+"":e,t),t);const vc=new Fs,$v=new Ii,BD=Math.cos(70*(Math.PI/180)),Kv=(i,e)=>(i%e+e)%e;class zD extends bi{constructor(e,t){super(),Ge(this,"object"),Ge(this,"domElement"),Ge(this,"enabled",!0),Ge(this,"target",new F),Ge(this,"minDistance",0),Ge(this,"maxDistance",1/0),Ge(this,"minZoom",0),Ge(this,"maxZoom",1/0),Ge(this,"minPolarAngle",0),Ge(this,"maxPolarAngle",Math.PI),Ge(this,"minAzimuthAngle",-1/0),Ge(this,"maxAzimuthAngle",1/0),Ge(this,"enableDamping",!1),Ge(this,"dampingFactor",.05),Ge(this,"enableZoom",!0),Ge(this,"zoomSpeed",1),Ge(this,"enableRotate",!0),Ge(this,"rotateSpeed",1),Ge(this,"enablePan",!0),Ge(this,"panSpeed",1),Ge(this,"screenSpacePanning",!0),Ge(this,"keyPanSpeed",7),Ge(this,"zoomToCursor",!1),Ge(this,"autoRotate",!1),Ge(this,"autoRotateSpeed",2),Ge(this,"reverseOrbit",!1),Ge(this,"reverseHorizontalOrbit",!1),Ge(this,"reverseVerticalOrbit",!1),Ge(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),Ge(this,"mouseButtons",{LEFT:Hn.ROTATE,MIDDLE:Hn.DOLLY,RIGHT:Hn.PAN}),Ge(this,"touches",{ONE:Zi.ROTATE,TWO:Zi.DOLLY_PAN}),Ge(this,"target0"),Ge(this,"position0"),Ge(this,"zoom0"),Ge(this,"_domElementKeyEvents",null),Ge(this,"getPolarAngle"),Ge(this,"getAzimuthalAngle"),Ge(this,"setPolarAngle"),Ge(this,"setAzimuthalAngle"),Ge(this,"getDistance"),Ge(this,"getZoomScale"),Ge(this,"listenToKeyEvents"),Ge(this,"stopListenToKeyEvents"),Ge(this,"saveState"),Ge(this,"reset"),Ge(this,"update"),Ge(this,"connect"),Ge(this,"dispose"),Ge(this,"dollyIn"),Ge(this,"dollyOut"),Ge(this,"getScale"),Ge(this,"setScale"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>u.phi,this.getAzimuthalAngle=()=>u.theta,this.setPolarAngle=q=>{let me=Kv(q,2*Math.PI),Le=u.phi;Le<0&&(Le+=2*Math.PI),me<0&&(me+=2*Math.PI);let $=Math.abs(me-Le);2*Math.PI-$<$&&(me<Le?me+=2*Math.PI:Le+=2*Math.PI),h.phi=me-Le,n.update()},this.setAzimuthalAngle=q=>{let me=Kv(q,2*Math.PI),Le=u.theta;Le<0&&(Le+=2*Math.PI),me<0&&(me+=2*Math.PI);let $=Math.abs(me-Le);2*Math.PI-$<$&&(me<Le?me+=2*Math.PI:Le+=2*Math.PI),h.theta=me-Le,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=q=>{q.addEventListener("keydown",_e),this._domElementKeyEvents=q},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",_e),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(r),n.update(),l=a.NONE},this.update=(()=>{const q=new F,me=new F(0,1,0),Le=new en().setFromUnitVectors(e.up,me),$=Le.clone().invert(),Te=new F,fe=new en,ve=2*Math.PI;return function(){const De=n.object.position;Le.setFromUnitVectors(e.up,me),$.copy(Le).invert(),q.copy(De).sub(n.target),q.applyQuaternion(Le),u.setFromVector3(q),n.autoRotate&&l===a.NONE&&V(N()),n.enableDamping?(u.theta+=h.theta*n.dampingFactor,u.phi+=h.phi*n.dampingFactor):(u.theta+=h.theta,u.phi+=h.phi);let Ae=n.minAzimuthAngle,Xe=n.maxAzimuthAngle;isFinite(Ae)&&isFinite(Xe)&&(Ae<-Math.PI?Ae+=ve:Ae>Math.PI&&(Ae-=ve),Xe<-Math.PI?Xe+=ve:Xe>Math.PI&&(Xe-=ve),Ae<=Xe?u.theta=Math.max(Ae,Math.min(Xe,u.theta)):u.theta=u.theta>(Ae+Xe)/2?Math.max(Ae,u.theta):Math.min(Xe,u.theta)),u.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,u.phi)),u.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(d,n.dampingFactor):n.target.add(d),n.zoomToCursor&&x||n.object.isOrthographicCamera?u.radius=Ce(u.radius):u.radius=Ce(u.radius*f),q.setFromSpherical(u),q.applyQuaternion($),De.copy(n.target).add(q),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(h.theta*=1-n.dampingFactor,h.phi*=1-n.dampingFactor,d.multiplyScalar(1-n.dampingFactor)):(h.set(0,0,0),d.set(0,0,0));let bt=!1;if(n.zoomToCursor&&x){let Nt=null;if(n.object instanceof St&&n.object.isPerspectiveCamera){const ut=q.length();Nt=Ce(ut*f);const ln=ut-Nt;n.object.position.addScaledVector(E,ln),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const ut=new F(S.x,S.y,0);ut.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/f)),n.object.updateProjectionMatrix(),bt=!0;const ln=new F(S.x,S.y,0);ln.unproject(n.object),n.object.position.sub(ln).add(ut),n.object.updateMatrixWorld(),Nt=q.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Nt!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Nt).add(n.object.position):(vc.origin.copy(n.object.position),vc.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(vc.direction))<BD?e.lookAt(n.target):($v.setFromNormalAndCoplanarPoint(n.object.up,n.target),vc.intersectPlane($v,n.target))))}else n.object instanceof Di&&n.object.isOrthographicCamera&&(bt=f!==1,bt&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/f)),n.object.updateProjectionMatrix()));return f=1,x=!1,bt||Te.distanceToSquared(n.object.position)>c||8*(1-fe.dot(n.object.quaternion))>c?(n.dispatchEvent(r),Te.copy(n.object.position),fe.copy(n.object.quaternion),bt=!1,!0):!1}})(),this.connect=q=>{n.domElement=q,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",xe),n.domElement.addEventListener("pointerdown",R),n.domElement.addEventListener("pointercancel",ee),n.domElement.addEventListener("wheel",Me)},this.dispose=()=>{var q,me,Le,$,Te,fe;n.domElement&&(n.domElement.style.touchAction="auto"),(q=n.domElement)==null||q.removeEventListener("contextmenu",xe),(me=n.domElement)==null||me.removeEventListener("pointerdown",R),(Le=n.domElement)==null||Le.removeEventListener("pointercancel",ee),($=n.domElement)==null||$.removeEventListener("wheel",Me),(Te=n.domElement)==null||Te.ownerDocument.removeEventListener("pointermove",k),(fe=n.domElement)==null||fe.ownerDocument.removeEventListener("pointerup",ee),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",_e)};const n=this,r={type:"change"},s={type:"start"},o={type:"end"},a={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let l=a.NONE;const c=1e-6,u=new hd,h=new hd;let f=1;const d=new F,p=new pe,v=new pe,m=new pe,g=new pe,M=new pe,b=new pe,y=new pe,C=new pe,w=new pe,E=new F,S=new pe;let x=!1;const _=[],A={};function N(){return 2*Math.PI/60/60*n.autoRotateSpeed}function B(){return Math.pow(.95,n.zoomSpeed)}function V(q){n.reverseOrbit||n.reverseHorizontalOrbit?h.theta+=q:h.theta-=q}function X(q){n.reverseOrbit||n.reverseVerticalOrbit?h.phi+=q:h.phi-=q}const z=(()=>{const q=new F;return function(me,Le){q.setFromMatrixColumn(Le,0),q.multiplyScalar(-me),d.add(q)}})(),te=(()=>{const q=new F;return function(me,Le){n.screenSpacePanning===!0?q.setFromMatrixColumn(Le,1):(q.setFromMatrixColumn(Le,0),q.crossVectors(n.object.up,q)),q.multiplyScalar(me),d.add(q)}})(),J=(()=>{const q=new F;return function(me,Le){const $=n.domElement;if($&&n.object instanceof St&&n.object.isPerspectiveCamera){const Te=n.object.position;q.copy(Te).sub(n.target);let fe=q.length();fe*=Math.tan(n.object.fov/2*Math.PI/180),z(2*me*fe/$.clientHeight,n.object.matrix),te(2*Le*fe/$.clientHeight,n.object.matrix)}else $&&n.object instanceof Di&&n.object.isOrthographicCamera?(z(me*(n.object.right-n.object.left)/n.object.zoom/$.clientWidth,n.object.matrix),te(Le*(n.object.top-n.object.bottom)/n.object.zoom/$.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function ue(q){n.object instanceof St&&n.object.isPerspectiveCamera||n.object instanceof Di&&n.object.isOrthographicCamera?f=q:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function de(q){ue(f/q)}function oe(q){ue(f*q)}function ye(q){if(!n.zoomToCursor||!n.domElement)return;x=!0;const me=n.domElement.getBoundingClientRect(),Le=q.clientX-me.left,$=q.clientY-me.top,Te=me.width,fe=me.height;S.x=Le/Te*2-1,S.y=-($/fe)*2+1,E.set(S.x,S.y,1).unproject(n.object).sub(n.object.position).normalize()}function Ce(q){return Math.max(n.minDistance,Math.min(n.maxDistance,q))}function le(q){p.set(q.clientX,q.clientY)}function ge(q){ye(q),y.set(q.clientX,q.clientY)}function be(q){g.set(q.clientX,q.clientY)}function Z(q){v.set(q.clientX,q.clientY),m.subVectors(v,p).multiplyScalar(n.rotateSpeed);const me=n.domElement;me&&(V(2*Math.PI*m.x/me.clientHeight),X(2*Math.PI*m.y/me.clientHeight)),p.copy(v),n.update()}function K(q){C.set(q.clientX,q.clientY),w.subVectors(C,y),w.y>0?de(B()):w.y<0&&oe(B()),y.copy(C),n.update()}function I(q){M.set(q.clientX,q.clientY),b.subVectors(M,g).multiplyScalar(n.panSpeed),J(b.x,b.y),g.copy(M),n.update()}function U(q){ye(q),q.deltaY<0?oe(B()):q.deltaY>0&&de(B()),n.update()}function G(q){let me=!1;switch(q.code){case n.keys.UP:J(0,n.keyPanSpeed),me=!0;break;case n.keys.BOTTOM:J(0,-n.keyPanSpeed),me=!0;break;case n.keys.LEFT:J(n.keyPanSpeed,0),me=!0;break;case n.keys.RIGHT:J(-n.keyPanSpeed,0),me=!0;break}me&&(q.preventDefault(),n.update())}function D(){if(_.length==1)p.set(_[0].pageX,_[0].pageY);else{const q=.5*(_[0].pageX+_[1].pageX),me=.5*(_[0].pageY+_[1].pageY);p.set(q,me)}}function L(){if(_.length==1)g.set(_[0].pageX,_[0].pageY);else{const q=.5*(_[0].pageX+_[1].pageX),me=.5*(_[0].pageY+_[1].pageY);g.set(q,me)}}function T(){const q=_[0].pageX-_[1].pageX,me=_[0].pageY-_[1].pageY,Le=Math.sqrt(q*q+me*me);y.set(0,Le)}function H(){n.enableZoom&&T(),n.enablePan&&L()}function W(){n.enableZoom&&T(),n.enableRotate&&D()}function j(q){if(_.length==1)v.set(q.pageX,q.pageY);else{const Le=Ee(q),$=.5*(q.pageX+Le.x),Te=.5*(q.pageY+Le.y);v.set($,Te)}m.subVectors(v,p).multiplyScalar(n.rotateSpeed);const me=n.domElement;me&&(V(2*Math.PI*m.x/me.clientHeight),X(2*Math.PI*m.y/me.clientHeight)),p.copy(v)}function Y(q){if(_.length==1)M.set(q.pageX,q.pageY);else{const me=Ee(q),Le=.5*(q.pageX+me.x),$=.5*(q.pageY+me.y);M.set(Le,$)}b.subVectors(M,g).multiplyScalar(n.panSpeed),J(b.x,b.y),g.copy(M)}function re(q){const me=Ee(q),Le=q.pageX-me.x,$=q.pageY-me.y,Te=Math.sqrt(Le*Le+$*$);C.set(0,Te),w.set(0,Math.pow(C.y/y.y,n.zoomSpeed)),de(w.y),y.copy(C)}function Q(q){n.enableZoom&&re(q),n.enablePan&&Y(q)}function P(q){n.enableZoom&&re(q),n.enableRotate&&j(q)}function R(q){var me,Le;n.enabled!==!1&&(_.length===0&&((me=n.domElement)==null||me.ownerDocument.addEventListener("pointermove",k),(Le=n.domElement)==null||Le.ownerDocument.addEventListener("pointerup",ee)),Re(q),q.pointerType==="touch"?Ie(q):ae(q))}function k(q){n.enabled!==!1&&(q.pointerType==="touch"?Ue(q):se(q))}function ee(q){var me,Le,$;ze(q),_.length===0&&((me=n.domElement)==null||me.releasePointerCapture(q.pointerId),(Le=n.domElement)==null||Le.ownerDocument.removeEventListener("pointermove",k),($=n.domElement)==null||$.ownerDocument.removeEventListener("pointerup",ee)),n.dispatchEvent(o),l=a.NONE}function ae(q){let me;switch(q.button){case 0:me=n.mouseButtons.LEFT;break;case 1:me=n.mouseButtons.MIDDLE;break;case 2:me=n.mouseButtons.RIGHT;break;default:me=-1}switch(me){case Hn.DOLLY:if(n.enableZoom===!1)return;ge(q),l=a.DOLLY;break;case Hn.ROTATE:if(q.ctrlKey||q.metaKey||q.shiftKey){if(n.enablePan===!1)return;be(q),l=a.PAN}else{if(n.enableRotate===!1)return;le(q),l=a.ROTATE}break;case Hn.PAN:if(q.ctrlKey||q.metaKey||q.shiftKey){if(n.enableRotate===!1)return;le(q),l=a.ROTATE}else{if(n.enablePan===!1)return;be(q),l=a.PAN}break;default:l=a.NONE}l!==a.NONE&&n.dispatchEvent(s)}function se(q){if(n.enabled!==!1)switch(l){case a.ROTATE:if(n.enableRotate===!1)return;Z(q);break;case a.DOLLY:if(n.enableZoom===!1)return;K(q);break;case a.PAN:if(n.enablePan===!1)return;I(q);break}}function Me(q){n.enabled===!1||n.enableZoom===!1||l!==a.NONE&&l!==a.ROTATE||(q.preventDefault(),n.dispatchEvent(s),U(q),n.dispatchEvent(o))}function _e(q){n.enabled===!1||n.enablePan===!1||G(q)}function Ie(q){switch(We(q),_.length){case 1:switch(n.touches.ONE){case Zi.ROTATE:if(n.enableRotate===!1)return;D(),l=a.TOUCH_ROTATE;break;case Zi.PAN:if(n.enablePan===!1)return;L(),l=a.TOUCH_PAN;break;default:l=a.NONE}break;case 2:switch(n.touches.TWO){case Zi.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;H(),l=a.TOUCH_DOLLY_PAN;break;case Zi.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;W(),l=a.TOUCH_DOLLY_ROTATE;break;default:l=a.NONE}break;default:l=a.NONE}l!==a.NONE&&n.dispatchEvent(s)}function Ue(q){switch(We(q),l){case a.TOUCH_ROTATE:if(n.enableRotate===!1)return;j(q),n.update();break;case a.TOUCH_PAN:if(n.enablePan===!1)return;Y(q),n.update();break;case a.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Q(q),n.update();break;case a.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;P(q),n.update();break;default:l=a.NONE}}function xe(q){n.enabled!==!1&&q.preventDefault()}function Re(q){_.push(q)}function ze(q){delete A[q.pointerId];for(let me=0;me<_.length;me++)if(_[me].pointerId==q.pointerId){_.splice(me,1);return}}function We(q){let me=A[q.pointerId];me===void 0&&(me=new pe,A[q.pointerId]=me),me.set(q.pageX,q.pageY)}function Ee(q){const me=q.pointerId===_[0].pointerId?_[1]:_[0];return A[me.pointerId]}this.dollyIn=(q=B())=>{oe(q),n.update()},this.dollyOut=(q=B())=>{de(q),n.update()},this.getScale=()=>f,this.setScale=q=>{ue(q),n.update()},this.getZoomScale=()=>B(),t!==void 0&&this.connect(t),this.update()}}new ke;new F;new In;new F;var kD=Object.defineProperty,VD=(i,e,t)=>e in i?kD(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,jp=(i,e,t)=>(VD(i,typeof e!="symbol"?e+"":e,t),t);class sb{constructor(e){jp(this,"data"),this.data=e}generateShapes(e,t=100,n){const r=[],s={letterSpacing:0,lineHeight:1,...n},o=HD(e,t,this.data,s);for(let a=0,l=o.length;a<l;a++)Array.prototype.push.apply(r,o[a].toShapes(!1));return r}}jp(sb,"isFont");jp(sb,"type");function HD(i,e,t,n){const r=Array.from(i),s=e/t.resolution,o=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*s,a=[];let l=0,c=0;for(let u=0;u<r.length;u++){const h=r[u];if(h===`
`)l=0,c-=o*n.lineHeight;else{const f=GD(h,s,l,c,t);f&&(l+=f.offsetX+n.letterSpacing,a.push(f.path))}}return a}function GD(i,e,t,n,r){const s=r.glyphs[i]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+i+'" does not exists in font family '+r.familyName+".");return}const o=new oy;let a,l,c,u,h,f,d,p;if(s.o){const v=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let m=0,g=v.length;m<g;)switch(v[m++]){case"m":a=parseInt(v[m++])*e+t,l=parseInt(v[m++])*e+n,o.moveTo(a,l);break;case"l":a=parseInt(v[m++])*e+t,l=parseInt(v[m++])*e+n,o.lineTo(a,l);break;case"q":c=parseInt(v[m++])*e+t,u=parseInt(v[m++])*e+n,h=parseInt(v[m++])*e+t,f=parseInt(v[m++])*e+n,o.quadraticCurveTo(h,f,c,u);break;case"b":c=parseInt(v[m++])*e+t,u=parseInt(v[m++])*e+n,h=parseInt(v[m++])*e+t,f=parseInt(v[m++])*e+n,d=parseInt(v[m++])*e+t,p=parseInt(v[m++])*e+n,o.bezierCurveTo(h,f,d,p,c,u);break}}return{offsetX:s.ha*e,path:o}}new Xt;new F;new it;new F;new F;new it;new it;new it;new F;new ke;new ry;new F;new Xt;new jt;new it;Bi.clamp;Bi.lerp;jy({screenspace:!1,color:new we("black"),opacity:1,thickness:.05,size:new pe(1,1)},`#include <common>
   #include <morphtarget_pars_vertex>
   #include <skinning_pars_vertex>
   uniform float thickness;
   uniform bool screenspace;
   uniform vec2 size;
   void main() {
     #if defined (USE_SKINNING)
       #include <beginnormal_vertex>
       #include <morphnormal_vertex>
       #include <skinbase_vertex>
       #include <skinnormal_vertex>
       #include <defaultnormal_vertex>
     #endif
     #include <begin_vertex>
     #include <morphtarget_vertex>
     #include <skinning_vertex>
     #include <project_vertex>
     vec4 tNormal = vec4(normal, 0.0);
     vec4 tPosition = vec4(transformed, 1.0);
     #ifdef USE_INSTANCING
       tNormal = instanceMatrix * tNormal;
       tPosition = instanceMatrix * tPosition;
     #endif
     if (screenspace) {
       vec3 newPosition = tPosition.xyz + tNormal.xyz * thickness;
       gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0); 
     } else {
       vec4 clipPosition = projectionMatrix * modelViewMatrix * tPosition;
       vec4 clipNormal = projectionMatrix * modelViewMatrix * tNormal;
       vec2 offset = normalize(clipNormal.xy) * thickness / size * clipPosition.w * 2.0;
       clipPosition.xy += offset;
       gl_Position = clipPosition;
     }
   }`,`uniform vec3 color;
   uniform float opacity;
   void main(){
     gl_FragColor = vec4(color, opacity);
     #include <tonemapping_fragment>
     #include <colorspace_fragment>
   }`);const WD=["args","material-uniforms-color-value"];Ed.ReflectorShader;new F;new F;new F;var zf;/Mac/.test((zf=globalThis==null?void 0:globalThis.navigator)===null||zf===void 0?void 0:zf.platform);const XD=["target","auto-rotate","auto-rotate-speed","enable-damping","damping-factor","enable-pan","key-pan-speed","keys","max-azimuth-angle","min-azimuth-angle","max-polar-angle","min-polar-angle","min-distance","max-distance","min-zoom","max-zoom","touches","enable-zoom","zoom-speed","enable-rotate","rotate-speed","mouse-buttons","args"],jD=Ui({__name:"OrbitControls",props:{makeDefault:{type:Boolean,default:!1},camera:{},domElement:{},target:{default:()=>[0,0,0]},enableDamping:{type:Boolean,default:!0},dampingFactor:{default:.05},autoRotate:{type:Boolean,default:!1},autoRotateSpeed:{default:2},enablePan:{type:Boolean,default:!0},keyPanSpeed:{default:7},keys:{},maxAzimuthAngle:{default:Number.POSITIVE_INFINITY},minAzimuthAngle:{default:Number.NEGATIVE_INFINITY},maxPolarAngle:{default:Math.PI},minPolarAngle:{default:0},minDistance:{default:0},maxDistance:{default:Number.POSITIVE_INFINITY},minZoom:{default:0},maxZoom:{default:Number.POSITIVE_INFINITY},touches:{default:()=>({ONE:Zi.ROTATE,TWO:Zi.DOLLY_PAN})},enableZoom:{type:Boolean,default:!0},zoomSpeed:{default:1},enableRotate:{type:Boolean,default:!0},rotateSpeed:{default:1},mouseButtons:{default:()=>({LEFT:Hn.ROTATE,MIDDLE:Hn.DOLLY,RIGHT:Hn.PAN})}},emits:["change","start","end"],setup(i,{expose:e,emit:t}){const n=i,r=t,{makeDefault:s,autoRotate:o,autoRotateSpeed:a,enableDamping:l,dampingFactor:c,enablePan:u,keyPanSpeed:h,maxAzimuthAngle:f,minAzimuthAngle:d,maxPolarAngle:p,minPolarAngle:v,minDistance:m,maxDistance:g,minZoom:M,maxZoom:b,enableZoom:y,zoomSpeed:C,enableRotate:w,touches:E,rotateSpeed:S,target:x,mouseButtons:_}=Nu(n),{camera:A,renderer:N,extend:B,controls:V,invalidate:X}=zo(),z=ft(null);B({OrbitControls:zD}),Vt(z,ue=>{te(),ue&&s.value?V.value=ue:V.value=null});function te(){Nf(z.value,"change",()=>{r("change",z.value),X()}),Nf(z.value,"start",()=>r("start",z.value)),Nf(z.value,"end",()=>r("end",z.value))}const{onBeforeRender:J}=Ty();return J(({invalidate:ue})=>{z.value&&(l.value||o.value)&&(z.value.update(),o.value&&ue())}),Oi(()=>{z.value&&z.value.dispose()}),e({instance:z}),(ue,de)=>(ue.camera||Ve(A))&&(ue.domElement||Ve(N))?(dn(),ui("TresOrbitControls",{key:0,ref_key:"controlsRef",ref:z,target:Ve(x),"auto-rotate":Ve(o),"auto-rotate-speed":Ve(a),"enable-damping":Ve(l),"damping-factor":Ve(c),"enable-pan":Ve(u),"key-pan-speed":Ve(h),keys:ue.keys,"max-azimuth-angle":Ve(f),"min-azimuth-angle":Ve(d),"max-polar-angle":Ve(p),"min-polar-angle":Ve(v),"min-distance":Ve(m),"max-distance":Ve(g),"min-zoom":Ve(M),"max-zoom":Ve(b),touches:Ve(E),"enable-zoom":Ve(y),"zoom-speed":Ve(C),"enable-rotate":Ve(w),"rotate-speed":Ve(S),"mouse-buttons":Ve(_),args:[ue.camera||Ve(A),ue.domElement||Ve(N).domElement]},null,8,XD)):f0("",!0)}});function _c(i){throw new Error('Could not dynamically require "'+i+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Zv={exports:{}},Jv;function YD(){return Jv||(Jv=1,function(i,e){(function(t){i.exports=t()})(function(){return function t(n,r,s){function o(c,u){if(!r[c]){if(!n[c]){var h=typeof _c=="function"&&_c;if(!u&&h)return h(c,!0);if(a)return a(c,!0);throw new Error("Cannot find module '"+c+"'")}u=r[c]={exports:{}},n[c][0].call(u.exports,function(f){var d=n[c][1][f];return o(d||f)},u,u.exports,t,n,r,s)}return r[c].exports}for(var a=typeof _c=="function"&&_c,l=0;l<s.length;l++)o(s[l]);return o}({1:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){var p=t("crypto");function v(w,E){E=M(w,E);var S;return(S=E.algorithm!=="passthrough"?p.createHash(E.algorithm):new C).write===void 0&&(S.write=S.update,S.end=S.update),y(E,S).dispatch(w),S.update||S.end(""),S.digest?S.digest(E.encoding==="buffer"?void 0:E.encoding):(w=S.read(),E.encoding!=="buffer"?w.toString(E.encoding):w)}(r=n.exports=v).sha1=function(w){return v(w)},r.keys=function(w){return v(w,{excludeValues:!0,algorithm:"sha1",encoding:"hex"})},r.MD5=function(w){return v(w,{algorithm:"md5",encoding:"hex"})},r.keysMD5=function(w){return v(w,{algorithm:"md5",encoding:"hex",excludeValues:!0})};var m=p.getHashes?p.getHashes().slice():["sha1","md5"],g=(m.push("passthrough"),["buffer","hex","binary","base64"]);function M(w,E){var S={};if(S.algorithm=(E=E||{}).algorithm||"sha1",S.encoding=E.encoding||"hex",S.excludeValues=!!E.excludeValues,S.algorithm=S.algorithm.toLowerCase(),S.encoding=S.encoding.toLowerCase(),S.ignoreUnknown=E.ignoreUnknown===!0,S.respectType=E.respectType!==!1,S.respectFunctionNames=E.respectFunctionNames!==!1,S.respectFunctionProperties=E.respectFunctionProperties!==!1,S.unorderedArrays=E.unorderedArrays===!0,S.unorderedSets=E.unorderedSets!==!1,S.unorderedObjects=E.unorderedObjects!==!1,S.replacer=E.replacer||void 0,S.excludeKeys=E.excludeKeys||void 0,w===void 0)throw new Error("Object argument required.");for(var x=0;x<m.length;++x)m[x].toLowerCase()===S.algorithm.toLowerCase()&&(S.algorithm=m[x]);if(m.indexOf(S.algorithm)===-1)throw new Error('Algorithm "'+S.algorithm+'"  not supported. supported values: '+m.join(", "));if(g.indexOf(S.encoding)===-1&&S.algorithm!=="passthrough")throw new Error('Encoding "'+S.encoding+'"  not supported. supported values: '+g.join(", "));return S}function b(w){if(typeof w=="function")return/^function\s+\w*\s*\(\s*\)\s*{\s+\[native code\]\s+}$/i.exec(Function.prototype.toString.call(w))!=null}function y(w,E,S){S=S||[];function x(_){return E.update?E.update(_,"utf8"):E.write(_,"utf8")}return{dispatch:function(_){return this["_"+((_=w.replacer?w.replacer(_):_)===null?"null":typeof _)](_)},_object:function(_){var A,N=Object.prototype.toString.call(_),B=/\[object (.*)\]/i.exec(N);if(B=(B=B?B[1]:"unknown:["+N+"]").toLowerCase(),0<=(N=S.indexOf(_)))return this.dispatch("[CIRCULAR:"+N+"]");if(S.push(_),a!==void 0&&a.isBuffer&&a.isBuffer(_))return x("buffer:"),x(_);if(B==="object"||B==="function"||B==="asyncfunction")return N=Object.keys(_),w.unorderedObjects&&(N=N.sort()),w.respectType===!1||b(_)||N.splice(0,0,"prototype","__proto__","constructor"),w.excludeKeys&&(N=N.filter(function(V){return!w.excludeKeys(V)})),x("object:"+N.length+":"),A=this,N.forEach(function(V){A.dispatch(V),x(":"),w.excludeValues||A.dispatch(_[V]),x(",")});if(!this["_"+B]){if(w.ignoreUnknown)return x("["+B+"]");throw new Error('Unknown object type "'+B+'"')}this["_"+B](_)},_array:function(_,V){V=V!==void 0?V:w.unorderedArrays!==!1;var N=this;if(x("array:"+_.length+":"),!V||_.length<=1)return _.forEach(function(X){return N.dispatch(X)});var B=[],V=_.map(function(X){var z=new C,te=S.slice();return y(w,z,te).dispatch(X),B=B.concat(te.slice(S.length)),z.read().toString()});return S=S.concat(B),V.sort(),this._array(V,!1)},_date:function(_){return x("date:"+_.toJSON())},_symbol:function(_){return x("symbol:"+_.toString())},_error:function(_){return x("error:"+_.toString())},_boolean:function(_){return x("bool:"+_.toString())},_string:function(_){x("string:"+_.length+":"),x(_.toString())},_function:function(_){x("fn:"),b(_)?this.dispatch("[native]"):this.dispatch(_.toString()),w.respectFunctionNames!==!1&&this.dispatch("function-name:"+String(_.name)),w.respectFunctionProperties&&this._object(_)},_number:function(_){return x("number:"+_.toString())},_xml:function(_){return x("xml:"+_.toString())},_null:function(){return x("Null")},_undefined:function(){return x("Undefined")},_regexp:function(_){return x("regex:"+_.toString())},_uint8array:function(_){return x("uint8array:"),this.dispatch(Array.prototype.slice.call(_))},_uint8clampedarray:function(_){return x("uint8clampedarray:"),this.dispatch(Array.prototype.slice.call(_))},_int8array:function(_){return x("int8array:"),this.dispatch(Array.prototype.slice.call(_))},_uint16array:function(_){return x("uint16array:"),this.dispatch(Array.prototype.slice.call(_))},_int16array:function(_){return x("int16array:"),this.dispatch(Array.prototype.slice.call(_))},_uint32array:function(_){return x("uint32array:"),this.dispatch(Array.prototype.slice.call(_))},_int32array:function(_){return x("int32array:"),this.dispatch(Array.prototype.slice.call(_))},_float32array:function(_){return x("float32array:"),this.dispatch(Array.prototype.slice.call(_))},_float64array:function(_){return x("float64array:"),this.dispatch(Array.prototype.slice.call(_))},_arraybuffer:function(_){return x("arraybuffer:"),this.dispatch(new Uint8Array(_))},_url:function(_){return x("url:"+_.toString())},_map:function(_){return x("map:"),_=Array.from(_),this._array(_,w.unorderedSets!==!1)},_set:function(_){return x("set:"),_=Array.from(_),this._array(_,w.unorderedSets!==!1)},_file:function(_){return x("file:"),this.dispatch([_.name,_.size,_.type,_.lastModfied])},_blob:function(){if(w.ignoreUnknown)return x("[blob]");throw Error(`Hashing Blob objects is currently not supported
(see https://github.com/puleos/object-hash/issues/26)
Use "options.replacer" or "options.ignoreUnknown"
`)},_domwindow:function(){return x("domwindow")},_bigint:function(_){return x("bigint:"+_.toString())},_process:function(){return x("process")},_timer:function(){return x("timer")},_pipe:function(){return x("pipe")},_tcp:function(){return x("tcp")},_udp:function(){return x("udp")},_tty:function(){return x("tty")},_statwatcher:function(){return x("statwatcher")},_securecontext:function(){return x("securecontext")},_connection:function(){return x("connection")},_zlib:function(){return x("zlib")},_context:function(){return x("context")},_nodescript:function(){return x("nodescript")},_httpparser:function(){return x("httpparser")},_dataview:function(){return x("dataview")},_signal:function(){return x("signal")},_fsevent:function(){return x("fsevent")},_tlswrap:function(){return x("tlswrap")}}}function C(){return{buf:"",write:function(w){this.buf+=w},end:function(w){this.buf+=w},read:function(){return this.buf}}}r.writeToStream=function(w,E,S){return S===void 0&&(S=E,E={}),y(E=M(w,E),S).dispatch(w)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/fake_9a5aa49d.js","/")},{buffer:3,crypto:5,lYpoI2:11}],2:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){(function(p){var v=typeof Uint8Array<"u"?Uint8Array:Array,m=43,g=47,M=48,b=97,y=65,C=45,w=95;function E(S){return S=S.charCodeAt(0),S===m||S===C?62:S===g||S===w?63:S<M?-1:S<M+10?S-M+26+26:S<y+26?S-y:S<b+26?S-b+26:void 0}p.toByteArray=function(S){var x,_;if(0<S.length%4)throw new Error("Invalid string. Length must be a multiple of 4");var A=S.length,A=S.charAt(A-2)==="="?2:S.charAt(A-1)==="="?1:0,N=new v(3*S.length/4-A),B=0<A?S.length-4:S.length,V=0;function X(z){N[V++]=z}for(x=0;x<B;x+=4,0)X((16711680&(_=E(S.charAt(x))<<18|E(S.charAt(x+1))<<12|E(S.charAt(x+2))<<6|E(S.charAt(x+3))))>>16),X((65280&_)>>8),X(255&_);return A==2?X(255&(_=E(S.charAt(x))<<2|E(S.charAt(x+1))>>4)):A==1&&(X((_=E(S.charAt(x))<<10|E(S.charAt(x+1))<<4|E(S.charAt(x+2))>>2)>>8&255),X(255&_)),N},p.fromByteArray=function(S){var x,_,A,N,B=S.length%3,V="";function X(z){return"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(z)}for(x=0,A=S.length-B;x<A;x+=3)_=(S[x]<<16)+(S[x+1]<<8)+S[x+2],V+=X((N=_)>>18&63)+X(N>>12&63)+X(N>>6&63)+X(63&N);switch(B){case 1:V=(V+=X((_=S[S.length-1])>>2))+X(_<<4&63)+"==";break;case 2:V=(V=(V+=X((_=(S[S.length-2]<<8)+S[S.length-1])>>10))+X(_>>4&63))+X(_<<2&63)+"="}return V}})(r===void 0?this.base64js={}:r)}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js","/node_modules/gulp-browserify/node_modules/base64-js/lib")},{buffer:3,lYpoI2:11}],3:[function(t,n,r){(function(s,o,m,l,c,u,h,f,d){var p=t("base64-js"),v=t("ieee754");function m(I,U,G){if(!(this instanceof m))return new m(I,U,G);var D,L,T,H,W=typeof I;if(U==="base64"&&W=="string")for(I=(H=I).trim?H.trim():H.replace(/^\s+|\s+$/g,"");I.length%4!=0;)I+="=";if(W=="number")D=J(I);else if(W=="string")D=m.byteLength(I,U);else{if(W!="object")throw new Error("First argument needs to be a number, array or string.");D=J(I.length)}if(m._useTypedArrays?L=m._augment(new Uint8Array(D)):((L=this).length=D,L._isBuffer=!0),m._useTypedArrays&&typeof I.byteLength=="number")L._set(I);else if(ue(H=I)||m.isBuffer(H)||H&&typeof H=="object"&&typeof H.length=="number")for(T=0;T<D;T++)m.isBuffer(I)?L[T]=I.readUInt8(T):L[T]=I[T];else if(W=="string")L.write(I,0,U);else if(W=="number"&&!m._useTypedArrays&&!G)for(T=0;T<D;T++)L[T]=0;return L}function g(I,U,G,D){return m._charsWritten=Ce(function(L){for(var T=[],H=0;H<L.length;H++)T.push(255&L.charCodeAt(H));return T}(U),I,G,D)}function M(I,U,G,D){return m._charsWritten=Ce(function(L){for(var T,H,W=[],j=0;j<L.length;j++)H=L.charCodeAt(j),T=H>>8,H=H%256,W.push(H),W.push(T);return W}(U),I,G,D)}function b(I,U,G){var D="";G=Math.min(I.length,G);for(var L=U;L<G;L++)D+=String.fromCharCode(I[L]);return D}function y(I,U,G,T){T||(K(typeof G=="boolean","missing or invalid endian"),K(U!=null,"missing offset"),K(U+1<I.length,"Trying to read beyond buffer length"));var L,T=I.length;if(!(T<=U))return G?(L=I[U],U+1<T&&(L|=I[U+1]<<8)):(L=I[U]<<8,U+1<T&&(L|=I[U+1])),L}function C(I,U,G,T){T||(K(typeof G=="boolean","missing or invalid endian"),K(U!=null,"missing offset"),K(U+3<I.length,"Trying to read beyond buffer length"));var L,T=I.length;if(!(T<=U))return G?(U+2<T&&(L=I[U+2]<<16),U+1<T&&(L|=I[U+1]<<8),L|=I[U],U+3<T&&(L+=I[U+3]<<24>>>0)):(U+1<T&&(L=I[U+1]<<16),U+2<T&&(L|=I[U+2]<<8),U+3<T&&(L|=I[U+3]),L+=I[U]<<24>>>0),L}function w(I,U,G,D){if(D||(K(typeof G=="boolean","missing or invalid endian"),K(U!=null,"missing offset"),K(U+1<I.length,"Trying to read beyond buffer length")),!(I.length<=U))return D=y(I,U,G,!0),32768&D?-1*(65535-D+1):D}function E(I,U,G,D){if(D||(K(typeof G=="boolean","missing or invalid endian"),K(U!=null,"missing offset"),K(U+3<I.length,"Trying to read beyond buffer length")),!(I.length<=U))return D=C(I,U,G,!0),2147483648&D?-1*(4294967295-D+1):D}function S(I,U,G,D){return D||(K(typeof G=="boolean","missing or invalid endian"),K(U+3<I.length,"Trying to read beyond buffer length")),v.read(I,U,G,23,4)}function x(I,U,G,D){return D||(K(typeof G=="boolean","missing or invalid endian"),K(U+7<I.length,"Trying to read beyond buffer length")),v.read(I,U,G,52,8)}function _(I,U,G,D,L){if(L||(K(U!=null,"missing value"),K(typeof D=="boolean","missing or invalid endian"),K(G!=null,"missing offset"),K(G+1<I.length,"trying to write beyond buffer length"),ge(U,65535)),L=I.length,!(L<=G))for(var T=0,H=Math.min(L-G,2);T<H;T++)I[G+T]=(U&255<<8*(D?T:1-T))>>>8*(D?T:1-T)}function A(I,U,G,D,L){if(L||(K(U!=null,"missing value"),K(typeof D=="boolean","missing or invalid endian"),K(G!=null,"missing offset"),K(G+3<I.length,"trying to write beyond buffer length"),ge(U,4294967295)),L=I.length,!(L<=G))for(var T=0,H=Math.min(L-G,4);T<H;T++)I[G+T]=U>>>8*(D?T:3-T)&255}function N(I,U,G,D,L){L||(K(U!=null,"missing value"),K(typeof D=="boolean","missing or invalid endian"),K(G!=null,"missing offset"),K(G+1<I.length,"Trying to write beyond buffer length"),be(U,32767,-32768)),I.length<=G||_(I,0<=U?U:65535+U+1,G,D,L)}function B(I,U,G,D,L){L||(K(U!=null,"missing value"),K(typeof D=="boolean","missing or invalid endian"),K(G!=null,"missing offset"),K(G+3<I.length,"Trying to write beyond buffer length"),be(U,2147483647,-2147483648)),I.length<=G||A(I,0<=U?U:4294967295+U+1,G,D,L)}function V(I,U,G,D,L){L||(K(U!=null,"missing value"),K(typeof D=="boolean","missing or invalid endian"),K(G!=null,"missing offset"),K(G+3<I.length,"Trying to write beyond buffer length"),Z(U,34028234663852886e22,-34028234663852886e22)),I.length<=G||v.write(I,U,G,D,23,4)}function X(I,U,G,D,L){L||(K(U!=null,"missing value"),K(typeof D=="boolean","missing or invalid endian"),K(G!=null,"missing offset"),K(G+7<I.length,"Trying to write beyond buffer length"),Z(U,17976931348623157e292,-17976931348623157e292)),I.length<=G||v.write(I,U,G,D,52,8)}r.Buffer=m,r.SlowBuffer=m,r.INSPECT_MAX_BYTES=50,m.poolSize=8192,m._useTypedArrays=function(){try{var I=new ArrayBuffer(0),U=new Uint8Array(I);return U.foo=function(){return 42},U.foo()===42&&typeof U.subarray=="function"}catch{return!1}}(),m.isEncoding=function(I){switch(String(I).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},m.isBuffer=function(I){return!(I==null||!I._isBuffer)},m.byteLength=function(I,U){var G;switch(I+="",U||"utf8"){case"hex":G=I.length/2;break;case"utf8":case"utf-8":G=oe(I).length;break;case"ascii":case"binary":case"raw":G=I.length;break;case"base64":G=ye(I).length;break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":G=2*I.length;break;default:throw new Error("Unknown encoding")}return G},m.concat=function(I,U){if(K(ue(I),`Usage: Buffer.concat(list, [totalLength])
list should be an Array.`),I.length===0)return new m(0);if(I.length===1)return I[0];if(typeof U!="number")for(L=U=0;L<I.length;L++)U+=I[L].length;for(var G=new m(U),D=0,L=0;L<I.length;L++){var T=I[L];T.copy(G,D),D+=T.length}return G},m.prototype.write=function(I,U,G,D){isFinite(U)?isFinite(G)||(D=G,G=void 0):(j=D,D=U,U=G,G=j),U=Number(U)||0;var L,T,H,W,j=this.length-U;switch((!G||j<(G=Number(G)))&&(G=j),D=String(D||"utf8").toLowerCase()){case"hex":L=function(Y,re,Q,P){Q=Number(Q)||0;var R=Y.length-Q;(!P||R<(P=Number(P)))&&(P=R),K((R=re.length)%2==0,"Invalid hex string"),R/2<P&&(P=R/2);for(var k=0;k<P;k++){var ee=parseInt(re.substr(2*k,2),16);K(!isNaN(ee),"Invalid hex string"),Y[Q+k]=ee}return m._charsWritten=2*k,k}(this,I,U,G);break;case"utf8":case"utf-8":T=this,H=U,W=G,L=m._charsWritten=Ce(oe(I),T,H,W);break;case"ascii":case"binary":L=g(this,I,U,G);break;case"base64":T=this,H=U,W=G,L=m._charsWritten=Ce(ye(I),T,H,W);break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":L=M(this,I,U,G);break;default:throw new Error("Unknown encoding")}return L},m.prototype.toString=function(I,U,G){var D,L,T,H,W=this;if(I=String(I||"utf8").toLowerCase(),U=Number(U)||0,(G=G!==void 0?Number(G):W.length)===U)return"";switch(I){case"hex":D=function(j,Y,re){var Q=j.length;(!Y||Y<0)&&(Y=0),(!re||re<0||Q<re)&&(re=Q);for(var P="",R=Y;R<re;R++)P+=de(j[R]);return P}(W,U,G);break;case"utf8":case"utf-8":D=function(j,Y,re){var Q="",P="";re=Math.min(j.length,re);for(var R=Y;R<re;R++)j[R]<=127?(Q+=le(P)+String.fromCharCode(j[R]),P=""):P+="%"+j[R].toString(16);return Q+le(P)}(W,U,G);break;case"ascii":case"binary":D=b(W,U,G);break;case"base64":L=W,H=G,D=(T=U)===0&&H===L.length?p.fromByteArray(L):p.fromByteArray(L.slice(T,H));break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":D=function(j,Y,re){for(var Q=j.slice(Y,re),P="",R=0;R<Q.length;R+=2)P+=String.fromCharCode(Q[R]+256*Q[R+1]);return P}(W,U,G);break;default:throw new Error("Unknown encoding")}return D},m.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},m.prototype.copy=function(I,U,G,D){if(U=U||0,(D=D||D===0?D:this.length)!==(G=G||0)&&I.length!==0&&this.length!==0){K(G<=D,"sourceEnd < sourceStart"),K(0<=U&&U<I.length,"targetStart out of bounds"),K(0<=G&&G<this.length,"sourceStart out of bounds"),K(0<=D&&D<=this.length,"sourceEnd out of bounds"),D>this.length&&(D=this.length);var L=(D=I.length-U<D-G?I.length-U+G:D)-G;if(L<100||!m._useTypedArrays)for(var T=0;T<L;T++)I[T+U]=this[T+G];else I._set(this.subarray(G,G+L),U)}},m.prototype.slice=function(I,U){var G=this.length;if(I=te(I,G,0),U=te(U,G,G),m._useTypedArrays)return m._augment(this.subarray(I,U));for(var D=U-I,L=new m(D,void 0,!0),T=0;T<D;T++)L[T]=this[T+I];return L},m.prototype.get=function(I){return console.log(".get() is deprecated. Access using array indexes instead."),this.readUInt8(I)},m.prototype.set=function(I,U){return console.log(".set() is deprecated. Access using array indexes instead."),this.writeUInt8(I,U)},m.prototype.readUInt8=function(I,U){if(U||(K(I!=null,"missing offset"),K(I<this.length,"Trying to read beyond buffer length")),!(I>=this.length))return this[I]},m.prototype.readUInt16LE=function(I,U){return y(this,I,!0,U)},m.prototype.readUInt16BE=function(I,U){return y(this,I,!1,U)},m.prototype.readUInt32LE=function(I,U){return C(this,I,!0,U)},m.prototype.readUInt32BE=function(I,U){return C(this,I,!1,U)},m.prototype.readInt8=function(I,U){if(U||(K(I!=null,"missing offset"),K(I<this.length,"Trying to read beyond buffer length")),!(I>=this.length))return 128&this[I]?-1*(255-this[I]+1):this[I]},m.prototype.readInt16LE=function(I,U){return w(this,I,!0,U)},m.prototype.readInt16BE=function(I,U){return w(this,I,!1,U)},m.prototype.readInt32LE=function(I,U){return E(this,I,!0,U)},m.prototype.readInt32BE=function(I,U){return E(this,I,!1,U)},m.prototype.readFloatLE=function(I,U){return S(this,I,!0,U)},m.prototype.readFloatBE=function(I,U){return S(this,I,!1,U)},m.prototype.readDoubleLE=function(I,U){return x(this,I,!0,U)},m.prototype.readDoubleBE=function(I,U){return x(this,I,!1,U)},m.prototype.writeUInt8=function(I,U,G){G||(K(I!=null,"missing value"),K(U!=null,"missing offset"),K(U<this.length,"trying to write beyond buffer length"),ge(I,255)),U>=this.length||(this[U]=I)},m.prototype.writeUInt16LE=function(I,U,G){_(this,I,U,!0,G)},m.prototype.writeUInt16BE=function(I,U,G){_(this,I,U,!1,G)},m.prototype.writeUInt32LE=function(I,U,G){A(this,I,U,!0,G)},m.prototype.writeUInt32BE=function(I,U,G){A(this,I,U,!1,G)},m.prototype.writeInt8=function(I,U,G){G||(K(I!=null,"missing value"),K(U!=null,"missing offset"),K(U<this.length,"Trying to write beyond buffer length"),be(I,127,-128)),U>=this.length||(0<=I?this.writeUInt8(I,U,G):this.writeUInt8(255+I+1,U,G))},m.prototype.writeInt16LE=function(I,U,G){N(this,I,U,!0,G)},m.prototype.writeInt16BE=function(I,U,G){N(this,I,U,!1,G)},m.prototype.writeInt32LE=function(I,U,G){B(this,I,U,!0,G)},m.prototype.writeInt32BE=function(I,U,G){B(this,I,U,!1,G)},m.prototype.writeFloatLE=function(I,U,G){V(this,I,U,!0,G)},m.prototype.writeFloatBE=function(I,U,G){V(this,I,U,!1,G)},m.prototype.writeDoubleLE=function(I,U,G){X(this,I,U,!0,G)},m.prototype.writeDoubleBE=function(I,U,G){X(this,I,U,!1,G)},m.prototype.fill=function(I,U,G){if(U=U||0,G=G||this.length,K(typeof(I=typeof(I=I||0)=="string"?I.charCodeAt(0):I)=="number"&&!isNaN(I),"value is not a number"),K(U<=G,"end < start"),G!==U&&this.length!==0){K(0<=U&&U<this.length,"start out of bounds"),K(0<=G&&G<=this.length,"end out of bounds");for(var D=U;D<G;D++)this[D]=I}},m.prototype.inspect=function(){for(var I=[],U=this.length,G=0;G<U;G++)if(I[G]=de(this[G]),G===r.INSPECT_MAX_BYTES){I[G+1]="...";break}return"<Buffer "+I.join(" ")+">"},m.prototype.toArrayBuffer=function(){if(typeof Uint8Array>"u")throw new Error("Buffer.toArrayBuffer not supported in this browser");if(m._useTypedArrays)return new m(this).buffer;for(var I=new Uint8Array(this.length),U=0,G=I.length;U<G;U+=1)I[U]=this[U];return I.buffer};var z=m.prototype;function te(I,U,G){return typeof I!="number"?G:U<=(I=~~I)?U:0<=I||0<=(I+=U)?I:0}function J(I){return(I=~~Math.ceil(+I))<0?0:I}function ue(I){return(Array.isArray||function(U){return Object.prototype.toString.call(U)==="[object Array]"})(I)}function de(I){return I<16?"0"+I.toString(16):I.toString(16)}function oe(I){for(var U=[],G=0;G<I.length;G++){var D=I.charCodeAt(G);if(D<=127)U.push(I.charCodeAt(G));else for(var L=G,T=(55296<=D&&D<=57343&&G++,encodeURIComponent(I.slice(L,G+1)).substr(1).split("%")),H=0;H<T.length;H++)U.push(parseInt(T[H],16))}return U}function ye(I){return p.toByteArray(I)}function Ce(I,U,G,D){for(var L=0;L<D&&!(L+G>=U.length||L>=I.length);L++)U[L+G]=I[L];return L}function le(I){try{return decodeURIComponent(I)}catch{return"�"}}function ge(I,U){K(typeof I=="number","cannot write a non-number as a number"),K(0<=I,"specified a negative value for writing an unsigned value"),K(I<=U,"value is larger than maximum value for type"),K(Math.floor(I)===I,"value has a fractional component")}function be(I,U,G){K(typeof I=="number","cannot write a non-number as a number"),K(I<=U,"value larger than maximum allowed value"),K(G<=I,"value smaller than minimum allowed value"),K(Math.floor(I)===I,"value has a fractional component")}function Z(I,U,G){K(typeof I=="number","cannot write a non-number as a number"),K(I<=U,"value larger than maximum allowed value"),K(G<=I,"value smaller than minimum allowed value")}function K(I,U){if(!I)throw new Error(U||"Failed assertion")}m._augment=function(I){return I._isBuffer=!0,I._get=I.get,I._set=I.set,I.get=z.get,I.set=z.set,I.write=z.write,I.toString=z.toString,I.toLocaleString=z.toString,I.toJSON=z.toJSON,I.copy=z.copy,I.slice=z.slice,I.readUInt8=z.readUInt8,I.readUInt16LE=z.readUInt16LE,I.readUInt16BE=z.readUInt16BE,I.readUInt32LE=z.readUInt32LE,I.readUInt32BE=z.readUInt32BE,I.readInt8=z.readInt8,I.readInt16LE=z.readInt16LE,I.readInt16BE=z.readInt16BE,I.readInt32LE=z.readInt32LE,I.readInt32BE=z.readInt32BE,I.readFloatLE=z.readFloatLE,I.readFloatBE=z.readFloatBE,I.readDoubleLE=z.readDoubleLE,I.readDoubleBE=z.readDoubleBE,I.writeUInt8=z.writeUInt8,I.writeUInt16LE=z.writeUInt16LE,I.writeUInt16BE=z.writeUInt16BE,I.writeUInt32LE=z.writeUInt32LE,I.writeUInt32BE=z.writeUInt32BE,I.writeInt8=z.writeInt8,I.writeInt16LE=z.writeInt16LE,I.writeInt16BE=z.writeInt16BE,I.writeInt32LE=z.writeInt32LE,I.writeInt32BE=z.writeInt32BE,I.writeFloatLE=z.writeFloatLE,I.writeFloatBE=z.writeFloatBE,I.writeDoubleLE=z.writeDoubleLE,I.writeDoubleBE=z.writeDoubleBE,I.fill=z.fill,I.inspect=z.inspect,I.toArrayBuffer=z.toArrayBuffer,I}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/buffer/index.js","/node_modules/gulp-browserify/node_modules/buffer")},{"base64-js":2,buffer:3,ieee754:10,lYpoI2:11}],4:[function(t,n,r){(function(s,o,p,l,c,u,h,f,d){var p=t("buffer").Buffer,v=4,m=new p(v);m.fill(0),n.exports={hash:function(g,M,b,y){for(var C=M(function(_,A){_.length%v!=0&&(N=_.length+(v-_.length%v),_=p.concat([_,m],N));for(var N,B=[],V=A?_.readInt32BE:_.readInt32LE,X=0;X<_.length;X+=v)B.push(V.call(_,X));return B}(g=p.isBuffer(g)?g:new p(g),y),8*g.length),M=y,w=new p(b),E=M?w.writeInt32BE:w.writeInt32LE,S=0;S<C.length;S++)E.call(w,C[S],4*S,!0);return w}}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{buffer:3,lYpoI2:11}],5:[function(t,n,r){(function(s,o,p,l,c,u,h,f,d){var p=t("buffer").Buffer,v=t("./sha"),m=t("./sha256"),g=t("./rng"),M={sha1:v,sha256:m,md5:t("./md5")},b=64,y=new p(b);function C(_,A){var N=M[_=_||"sha1"],B=[];return N||w("algorithm:",_,"is not yet supported"),{update:function(V){return p.isBuffer(V)||(V=new p(V)),B.push(V),V.length,this},digest:function(V){var X=p.concat(B),X=A?function(z,te,J){p.isBuffer(te)||(te=new p(te)),p.isBuffer(J)||(J=new p(J)),te.length>b?te=z(te):te.length<b&&(te=p.concat([te,y],b));for(var ue=new p(b),de=new p(b),oe=0;oe<b;oe++)ue[oe]=54^te[oe],de[oe]=92^te[oe];return J=z(p.concat([ue,J])),z(p.concat([de,J]))}(N,A,X):N(X);return B=null,V?X.toString(V):X}}}function w(){var _=[].slice.call(arguments).join(" ");throw new Error([_,"we accept pull requests","http://github.com/dominictarr/crypto-browserify"].join(`
`))}y.fill(0),r.createHash=function(_){return C(_)},r.createHmac=C,r.randomBytes=function(_,A){if(!A||!A.call)return new p(g(_));try{A.call(this,void 0,new p(g(_)))}catch(N){A(N)}};var E,S=["createCredentials","createCipher","createCipheriv","createDecipher","createDecipheriv","createSign","createVerify","createDiffieHellman","pbkdf2"],x=function(_){r[_]=function(){w("sorry,",_,"is not implemented yet")}};for(E in S)x(S[E])}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./md5":6,"./rng":7,"./sha":8,"./sha256":9,buffer:3,lYpoI2:11}],6:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){var p=t("./helpers");function v(w,E){w[E>>5]|=128<<E%32,w[14+(E+64>>>9<<4)]=E;for(var S=1732584193,x=-271733879,_=-1732584194,A=271733878,N=0;N<w.length;N+=16){var B=S,V=x,X=_,z=A,S=g(S,x,_,A,w[N+0],7,-680876936),A=g(A,S,x,_,w[N+1],12,-389564586),_=g(_,A,S,x,w[N+2],17,606105819),x=g(x,_,A,S,w[N+3],22,-1044525330);S=g(S,x,_,A,w[N+4],7,-176418897),A=g(A,S,x,_,w[N+5],12,1200080426),_=g(_,A,S,x,w[N+6],17,-1473231341),x=g(x,_,A,S,w[N+7],22,-45705983),S=g(S,x,_,A,w[N+8],7,1770035416),A=g(A,S,x,_,w[N+9],12,-1958414417),_=g(_,A,S,x,w[N+10],17,-42063),x=g(x,_,A,S,w[N+11],22,-1990404162),S=g(S,x,_,A,w[N+12],7,1804603682),A=g(A,S,x,_,w[N+13],12,-40341101),_=g(_,A,S,x,w[N+14],17,-1502002290),S=M(S,x=g(x,_,A,S,w[N+15],22,1236535329),_,A,w[N+1],5,-165796510),A=M(A,S,x,_,w[N+6],9,-1069501632),_=M(_,A,S,x,w[N+11],14,643717713),x=M(x,_,A,S,w[N+0],20,-373897302),S=M(S,x,_,A,w[N+5],5,-701558691),A=M(A,S,x,_,w[N+10],9,38016083),_=M(_,A,S,x,w[N+15],14,-660478335),x=M(x,_,A,S,w[N+4],20,-405537848),S=M(S,x,_,A,w[N+9],5,568446438),A=M(A,S,x,_,w[N+14],9,-1019803690),_=M(_,A,S,x,w[N+3],14,-187363961),x=M(x,_,A,S,w[N+8],20,1163531501),S=M(S,x,_,A,w[N+13],5,-1444681467),A=M(A,S,x,_,w[N+2],9,-51403784),_=M(_,A,S,x,w[N+7],14,1735328473),S=b(S,x=M(x,_,A,S,w[N+12],20,-1926607734),_,A,w[N+5],4,-378558),A=b(A,S,x,_,w[N+8],11,-2022574463),_=b(_,A,S,x,w[N+11],16,1839030562),x=b(x,_,A,S,w[N+14],23,-35309556),S=b(S,x,_,A,w[N+1],4,-1530992060),A=b(A,S,x,_,w[N+4],11,1272893353),_=b(_,A,S,x,w[N+7],16,-155497632),x=b(x,_,A,S,w[N+10],23,-1094730640),S=b(S,x,_,A,w[N+13],4,681279174),A=b(A,S,x,_,w[N+0],11,-358537222),_=b(_,A,S,x,w[N+3],16,-722521979),x=b(x,_,A,S,w[N+6],23,76029189),S=b(S,x,_,A,w[N+9],4,-640364487),A=b(A,S,x,_,w[N+12],11,-421815835),_=b(_,A,S,x,w[N+15],16,530742520),S=y(S,x=b(x,_,A,S,w[N+2],23,-995338651),_,A,w[N+0],6,-198630844),A=y(A,S,x,_,w[N+7],10,1126891415),_=y(_,A,S,x,w[N+14],15,-1416354905),x=y(x,_,A,S,w[N+5],21,-57434055),S=y(S,x,_,A,w[N+12],6,1700485571),A=y(A,S,x,_,w[N+3],10,-1894986606),_=y(_,A,S,x,w[N+10],15,-1051523),x=y(x,_,A,S,w[N+1],21,-2054922799),S=y(S,x,_,A,w[N+8],6,1873313359),A=y(A,S,x,_,w[N+15],10,-30611744),_=y(_,A,S,x,w[N+6],15,-1560198380),x=y(x,_,A,S,w[N+13],21,1309151649),S=y(S,x,_,A,w[N+4],6,-145523070),A=y(A,S,x,_,w[N+11],10,-1120210379),_=y(_,A,S,x,w[N+2],15,718787259),x=y(x,_,A,S,w[N+9],21,-343485551),S=C(S,B),x=C(x,V),_=C(_,X),A=C(A,z)}return Array(S,x,_,A)}function m(w,E,S,x,_,A){return C((E=C(C(E,w),C(x,A)))<<_|E>>>32-_,S)}function g(w,E,S,x,_,A,N){return m(E&S|~E&x,w,E,_,A,N)}function M(w,E,S,x,_,A,N){return m(E&x|S&~x,w,E,_,A,N)}function b(w,E,S,x,_,A,N){return m(E^S^x,w,E,_,A,N)}function y(w,E,S,x,_,A,N){return m(S^(E|~x),w,E,_,A,N)}function C(w,E){var S=(65535&w)+(65535&E);return(w>>16)+(E>>16)+(S>>16)<<16|65535&S}n.exports=function(w){return p.hash(w,v,16)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],7:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){n.exports=function(p){for(var v,m=new Array(p),g=0;g<p;g++)!(3&g)&&(v=4294967296*Math.random()),m[g]=v>>>((3&g)<<3)&255;return m}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{buffer:3,lYpoI2:11}],8:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){var p=t("./helpers");function v(M,b){M[b>>5]|=128<<24-b%32,M[15+(b+64>>9<<4)]=b;for(var y,C,w,E=Array(80),S=1732584193,x=-271733879,_=-1732584194,A=271733878,N=-1009589776,B=0;B<M.length;B+=16){for(var V=S,X=x,z=_,te=A,J=N,ue=0;ue<80;ue++){E[ue]=ue<16?M[B+ue]:g(E[ue-3]^E[ue-8]^E[ue-14]^E[ue-16],1);var de=m(m(g(S,5),(de=x,C=_,w=A,(y=ue)<20?de&C|~de&w:!(y<40)&&y<60?de&C|de&w|C&w:de^C^w)),m(m(N,E[ue]),(y=ue)<20?1518500249:y<40?1859775393:y<60?-1894007588:-899497514)),N=A,A=_,_=g(x,30),x=S,S=de}S=m(S,V),x=m(x,X),_=m(_,z),A=m(A,te),N=m(N,J)}return Array(S,x,_,A,N)}function m(M,b){var y=(65535&M)+(65535&b);return(M>>16)+(b>>16)+(y>>16)<<16|65535&y}function g(M,b){return M<<b|M>>>32-b}n.exports=function(M){return p.hash(M,v,20,!0)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],9:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){function p(b,y){var C=(65535&b)+(65535&y);return(b>>16)+(y>>16)+(C>>16)<<16|65535&C}function v(b,y){var C,w=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),E=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),S=new Array(64);b[y>>5]|=128<<24-y%32,b[15+(y+64>>9<<4)]=y;for(var x,_,A=0;A<b.length;A+=16){for(var N=E[0],B=E[1],V=E[2],X=E[3],z=E[4],te=E[5],J=E[6],ue=E[7],de=0;de<64;de++)S[de]=de<16?b[de+A]:p(p(p((_=S[de-2],g(_,17)^g(_,19)^M(_,10)),S[de-7]),(_=S[de-15],g(_,7)^g(_,18)^M(_,3))),S[de-16]),C=p(p(p(p(ue,g(_=z,6)^g(_,11)^g(_,25)),z&te^~z&J),w[de]),S[de]),x=p(g(x=N,2)^g(x,13)^g(x,22),N&B^N&V^B&V),ue=J,J=te,te=z,z=p(X,C),X=V,V=B,B=N,N=p(C,x);E[0]=p(N,E[0]),E[1]=p(B,E[1]),E[2]=p(V,E[2]),E[3]=p(X,E[3]),E[4]=p(z,E[4]),E[5]=p(te,E[5]),E[6]=p(J,E[6]),E[7]=p(ue,E[7])}return E}var m=t("./helpers"),g=function(b,y){return b>>>y|b<<32-y},M=function(b,y){return b>>>y};n.exports=function(b){return m.hash(b,v,32,!0)}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],10:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){r.read=function(p,v,m,g,A){var b,y,C=8*A-g-1,w=(1<<C)-1,E=w>>1,S=-7,x=m?A-1:0,_=m?-1:1,A=p[v+x];for(x+=_,b=A&(1<<-S)-1,A>>=-S,S+=C;0<S;b=256*b+p[v+x],x+=_,S-=8);for(y=b&(1<<-S)-1,b>>=-S,S+=g;0<S;y=256*y+p[v+x],x+=_,S-=8);if(b===0)b=1-E;else{if(b===w)return y?NaN:1/0*(A?-1:1);y+=Math.pow(2,g),b-=E}return(A?-1:1)*y*Math.pow(2,b-g)},r.write=function(p,v,m,g,M,N){var y,C,w=8*N-M-1,E=(1<<w)-1,S=E>>1,x=M===23?Math.pow(2,-24)-Math.pow(2,-77):0,_=g?0:N-1,A=g?1:-1,N=v<0||v===0&&1/v<0?1:0;for(v=Math.abs(v),isNaN(v)||v===1/0?(C=isNaN(v)?1:0,y=E):(y=Math.floor(Math.log(v)/Math.LN2),v*(g=Math.pow(2,-y))<1&&(y--,g*=2),2<=(v+=1<=y+S?x/g:x*Math.pow(2,1-S))*g&&(y++,g/=2),E<=y+S?(C=0,y=E):1<=y+S?(C=(v*g-1)*Math.pow(2,M),y+=S):(C=v*Math.pow(2,S-1)*Math.pow(2,M),y=0));8<=M;p[m+_]=255&C,_+=A,C/=256,M-=8);for(y=y<<M|C,w+=M;0<w;p[m+_]=255&y,_+=A,y/=256,w-=8);p[m+_-A]|=128*N}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/ieee754/index.js","/node_modules/gulp-browserify/node_modules/ieee754")},{buffer:3,lYpoI2:11}],11:[function(t,n,r){(function(s,o,a,l,c,u,h,f,d){var p,v,m;function g(){}(s=n.exports={}).nextTick=(v=typeof window<"u"&&window.setImmediate,m=typeof window<"u"&&window.postMessage&&window.addEventListener,v?function(M){return window.setImmediate(M)}:m?(p=[],window.addEventListener("message",function(M){var b=M.source;b!==window&&b!==null||M.data!=="process-tick"||(M.stopPropagation(),0<p.length&&p.shift()())},!0),function(M){p.push(M),window.postMessage("process-tick","*")}):function(M){setTimeout(M,0)}),s.title="browser",s.browser=!0,s.env={},s.argv=[],s.on=g,s.addListener=g,s.once=g,s.off=g,s.removeListener=g,s.removeAllListeners=g,s.emit=g,s.binding=function(M){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(M){throw new Error("process.chdir is not supported")}}).call(this,t("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},t("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/process/browser.js","/node_modules/gulp-browserify/node_modules/process")},{buffer:3,lYpoI2:11}]},{},[1])(1)})}(Zv)),Zv.exports}YD();var Qv,e_;function ob(){return e_||(e_=1,Qv=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","uint","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"]),Qv}var t_,n_;function qD(){return n_||(n_=1,t_=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"]),t_}var i_,r_;function ab(){return r_||(r_=1,i_=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"]),i_}var kf,s_;function $D(){if(s_)return kf;s_=1;var i=ob();return kf=i.slice().concat(["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray"]),kf}var Vf,o_;function KD(){if(o_)return Vf;o_=1;var i=ab();return i=i.slice().filter(function(e){return!/^(gl\_|texture)/.test(e)}),Vf=i.concat(["gl_VertexID","gl_InstanceID","gl_Position","gl_PointSize","gl_FragCoord","gl_FrontFacing","gl_FragDepth","gl_PointCoord","gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexOutputVectors","gl_MaxFragmentInputVectors","gl_MaxVertexTextureImageUnits","gl_MaxCombinedTextureImageUnits","gl_MaxTextureImageUnits","gl_MaxFragmentUniformVectors","gl_MaxDrawBuffers","gl_MinProgramTexelOffset","gl_MaxProgramTexelOffset","gl_DepthRangeParameters","gl_DepthRange","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"]),Vf}var Hf,a_;function ZD(){if(a_)return Hf;a_=1,Hf=y;var i=ob(),e=qD(),t=ab(),n=$D(),r=KD(),s=999,o=9999,a=0,l=1,c=2,u=3,h=4,f=5,d=6,p=7,v=8,m=9,g=10,M=11,b=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function y(C){var w=0,E=0,S=s,x,_,A=[],N=[],B=1,V=0,X=0,z=!1,te=!1,J="",ue;C=C||{};var de=t,oe=i;C.version==="300 es"&&(de=r,oe=n);for(var ye={},Ce={},w=0;w<de.length;w++)ye[de[w]]=!0;for(var w=0;w<oe.length;w++)Ce[oe[w]]=!0;return function(Y){return N=[],Y!==null?ge(Y):be()};function le(Y){Y.length&&N.push({type:b[S],data:Y,position:X,line:B,column:V})}function ge(Y){w=0,Y.toString&&(Y=Y.toString()),J+=Y.replace(/\r\n/g,`
`),ue=J.length;for(var re;x=J[w],w<ue;){switch(re=w,S){case a:w=G();break;case l:w=U();break;case c:w=I();break;case u:w=D();break;case h:w=H();break;case M:w=T();break;case f:w=W();break;case o:w=j();break;case m:w=K();break;case s:w=Z();break}if(re!==w)switch(J[re]){case`
`:V=0,++B;break;default:++V;break}}return E+=w,J=J.slice(w),N}function be(Y){return A.length&&le(A.join("")),S=g,le("(eof)"),N}function Z(){return A=A.length?[]:A,_==="/"&&x==="*"?(X=E+w-1,S=a,_=x,w+1):_==="/"&&x==="/"?(X=E+w-1,S=l,_=x,w+1):x==="#"?(S=c,X=E+w,w):/\s/.test(x)?(S=m,X=E+w,w):(z=/\d/.test(x),te=/[^\w_]/.test(x),X=E+w,S=z?h:te?u:o,w)}function K(){return/[^\s]/g.test(x)?(le(A.join("")),S=s,w):(A.push(x),_=x,w+1)}function I(){return(x==="\r"||x===`
`)&&_!=="\\"?(le(A.join("")),S=s,w):(A.push(x),_=x,w+1)}function U(){return I()}function G(){return x==="/"&&_==="*"?(A.push(x),le(A.join("")),S=s,w+1):(A.push(x),_=x,w+1)}function D(){if(_==="."&&/\d/.test(x))return S=f,w;if(_==="/"&&x==="*")return S=a,w;if(_==="/"&&x==="/")return S=l,w;if(x==="."&&A.length){for(;L(A););return S=f,w}if(x===";"||x===")"||x==="("){if(A.length)for(;L(A););return le(x),S=s,w+1}var Y=A.length===2&&x!=="=";if(/[\w_\d\s]/.test(x)||Y){for(;L(A););return S=s,w}return A.push(x),_=x,w+1}function L(Y){var re=0,Q,P;do{if(Q=e.indexOf(Y.slice(0,Y.length+re).join("")),P=e[Q],Q===-1){if(re--+Y.length>0)continue;P=Y.slice(0,1).join("")}return le(P),X+=P.length,A=A.slice(P.length),A.length}while(!0)}function T(){return/[^a-fA-F0-9]/.test(x)?(le(A.join("")),S=s,w):(A.push(x),_=x,w+1)}function H(){return x==="."||/[eE]/.test(x)?(A.push(x),S=f,_=x,w+1):x==="x"&&A.length===1&&A[0]==="0"?(S=M,A.push(x),_=x,w+1):/[^\d]/.test(x)?(le(A.join("")),S=s,w):(A.push(x),_=x,w+1)}function W(){return x==="f"&&(A.push(x),_=x,w+=1),/[eE]/.test(x)||(x==="-"||x==="+")&&/[eE]/.test(_)?(A.push(x),_=x,w+1):/[^\d]/.test(x)?(le(A.join("")),S=s,w):(A.push(x),_=x,w+1)}function j(){if(/[^\d\w_]/.test(x)){var Y=A.join("");return Ce[Y]?S=v:ye[Y]?S=p:S=d,le(A.join("")),S=s,w}return A.push(x),_=x,w+1}}return Hf}var Gf,l_;function JD(){if(l_)return Gf;l_=1;var i=ZD();Gf=e;function e(t,n){var r=i(n),s=[];return s=s.concat(r(t)),s=s.concat(r(null)),s}return Gf}JD();function QD(i,e){if(typeof i!="object"||i===null)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e);if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(i)}function eN(i){var e=QD(i,"string");return typeof e=="symbol"?e:String(e)}function Mt(i,e,t){return e=eN(e),e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}var qe={position:"csm_Position",positionRaw:"csm_PositionRaw",pointSize:"csm_PointSize",fragColor:"csm_FragColor",diffuseColor:"csm_DiffuseColor",normal:"csm_Normal",roughness:"csm_Roughness",metalness:"csm_Metalness",emissive:"csm_Emissive",ao:"csm_AO",bump:"csm_Bump",depthAlpha:"csm_DepthAlpha"},Nn,ao;Nn={},Mt(Nn,"".concat(qe.normal),{"#include <beginnormal_vertex>":`
    vec3 objectNormal = `.concat(qe.normal,`;
    #ifdef USE_TANGENT
	    vec3 objectTangent = vec3( tangent.xyz );
    #endif
    `)}),Mt(Nn,"".concat(qe.position),{"#include <begin_vertex>":`
    vec3 transformed = `.concat(qe.position,`;
  `)}),Mt(Nn,"".concat(qe.positionRaw),{"#include <begin_vertex>":`
    vec4 csm_internal_positionUnprojected = `.concat(qe.positionRaw,`;
    mat4x4 csm_internal_unprojectMatrix = projectionMatrix * modelViewMatrix;
    #ifdef USE_INSTANCING
      csm_internal_unprojectMatrix = csm_internal_unprojectMatrix * instanceMatrix;
    #endif
    csm_internal_positionUnprojected = inverse(csm_internal_unprojectMatrix) * csm_internal_positionUnprojected;
    vec3 transformed = csm_internal_positionUnprojected.xyz;
  `)}),Mt(Nn,"".concat(qe.pointSize),{"gl_PointSize = size;":`
    gl_PointSize = `.concat(qe.pointSize,`;
    `)}),Mt(Nn,"".concat(qe.diffuseColor),{"#include <color_fragment>":`
    #include <color_fragment>
    diffuseColor = `.concat(qe.diffuseColor,`;
  `)}),Mt(Nn,"".concat(qe.fragColor),{"#include <dithering_fragment>":`
    #include <dithering_fragment>
    gl_FragColor  = `.concat(qe.fragColor,`;
  `)}),Mt(Nn,"".concat(qe.emissive),{"vec3 totalEmissiveRadiance = emissive;":`
    vec3 totalEmissiveRadiance = `.concat(qe.emissive,`;
    `)}),Mt(Nn,"".concat(qe.roughness),{"#include <roughnessmap_fragment>":`
    #include <roughnessmap_fragment>
    roughnessFactor = `.concat(qe.roughness,`;
    `)}),Mt(Nn,"".concat(qe.metalness),{"#include <metalnessmap_fragment>":`
    #include <metalnessmap_fragment>
    metalnessFactor = `.concat(qe.metalness,`;
    `)}),Mt(Nn,"".concat(qe.ao),{"#include <aomap_fragment>":`
    #include <aomap_fragment>
    reflectedLight.indirectDiffuse *= 1. - `.concat(qe.ao,`;
    `)}),Mt(Nn,"".concat(qe.bump),{"#include <normal_fragment_maps>":`
    #include <normal_fragment_maps>

    vec3 csm_internal_orthogonal = `.concat(qe.bump," - (dot(").concat(qe.bump,`, normal) * normal);
    vec3 csm_internal_projectedbump = mat3(csm_internal_vModelViewMatrix) * csm_internal_orthogonal;
    normal = normalize(normal - csm_internal_projectedbump);
    `)}),Mt(Nn,"".concat(qe.depthAlpha),{"gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );":`
      gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity * `.concat(qe.depthAlpha,` );
    `),"gl_FragColor = packDepthToRGBA( fragCoordZ );":`
      gl_FragColor = packDepthToRGBA( fragCoordZ );
      gl_FragColor.a *= `.concat(qe.depthAlpha,`;
    `)});ao={},Mt(ao,"".concat(qe.position),{"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );":`
    gl_Position = projectionMatrix * modelViewMatrix * vec4( `.concat(qe.position,`, 1.0 );
  `)}),Mt(ao,"".concat(qe.positionRaw),{"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );":`
    gl_Position = `.concat(qe.position,`;
  `)}),Mt(ao,"".concat(qe.diffuseColor),{"gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );":`
    gl_FragColor = `.concat(qe.diffuseColor,`;
  `)}),Mt(ao,"".concat(qe.fragColor),{"gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );":`
    gl_FragColor = `.concat(qe.fragColor,`;
  `)});var Un;Un={},Mt(Un,"".concat(qe.position),"*"),Mt(Un,"".concat(qe.positionRaw),"*"),Mt(Un,"".concat(qe.normal),"*"),Mt(Un,"".concat(qe.pointSize),["PointsMaterial"]),Mt(Un,"".concat(qe.diffuseColor),"*"),Mt(Un,"".concat(qe.fragColor),"*"),Mt(Un,"".concat(qe.emissive),["MeshStandardMaterial","MeshPhysicalMaterial"]),Mt(Un,"".concat(qe.roughness),["MeshStandardMaterial","MeshPhysicalMaterial"]),Mt(Un,"".concat(qe.metalness),["MeshStandardMaterial","MeshPhysicalMaterial"]),Mt(Un,"".concat(qe.ao),["MeshStandardMaterial","MeshPhysicalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial"]),Mt(Un,"".concat(qe.bump),["MeshLambertMaterial","MeshMatcapMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MeshToonMaterial","ShadowMaterial"]),Mt(Un,"".concat(qe.depthAlpha),"*");var tN=`void main() {
  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
}`,nN=`#include <common>

void main() {
  vec2 center = vec2(0., 1.);
  float rotation = 0.0;

  
  
  float size = 0.03;

  vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
  vec2 scale;
  scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
  scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );

  bool isPerspective = isPerspectiveMatrix( projectionMatrix );
  if ( isPerspective ) scale *= - mvPosition.z;

  vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;
  vec2 rotatedPosition;
  rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
  rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
  mvPosition.xy += rotatedPosition;

  gl_Position = projectionMatrix * mvPosition;
}`;const ml=new F(0,0,0),Yp=new F(0,0,0),iN=new F(0,0,0);function c_(i,e,t){const n=ml.setFromMatrixPosition(i.matrixWorld);n.project(e);const r=t.width/2,s=t.height/2;return[(Number.isNaN(n.x)?0:n.x)*r+r,-(n.y*s)+s,n.z]}function rN(i,e){const t=ml.setFromMatrixPosition(i.matrixWorld),n=Yp.setFromMatrixPosition(e.matrixWorld),r=t.sub(n),s=e.getWorldDirection(iN);return r.angleTo(s)>Math.PI/2}function sN(i,e,t,n){const r=ml.setFromMatrixPosition(i.matrixWorld),s=r.clone();s.project(e),t.setFromCamera(new pe(s.x,s.y),e);const o=t.intersectObjects(n,!0);if(o.length>0){const a=o[0].distance;return r.distanceTo(t.ray.origin)<a}return!0}function oN(i,e){if(e instanceof Di)return e.zoom;if(e instanceof St){const t=ml.setFromMatrixPosition(i.matrixWorld),n=Yp.setFromMatrixPosition(e.matrixWorld),r=e.fov*Math.PI/180,s=t.distanceTo(n);return 1/(2*Math.tan(r/2)*s)}else return 1}function aN(i,e,t){if(e instanceof St||e instanceof Di){const n=ml.setFromMatrixPosition(i.matrixWorld),r=Yp.setFromMatrixPosition(e.matrixWorld),s=n.distanceTo(r),o=(t[1]-t[0])/(e.far-e.near),a=t[1]-o*e.far;return Math.round(o*s+a)}}const Rd=i=>Math.abs(i)<1e-10?0:i;function lb(i,e,t=""){let n="matrix3d(";for(let r=0;r!==16;r++)n+=Rd(e[r]*i.elements[r])+(r!==15?",":")");return t+n}const lN=(i=>e=>lb(e,i))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),cN=(i=>(e,t)=>lb(e,i(t),"translate(-50%,-50%)"))(i=>[1/i,1/i,1/i,1,-1/i,-1/i,-1/i,-1,1/i,1/i,1/i,1,1,1,1,1]),uN=["geometry","material"];new kr;var Cd={exports:{}},hN=Cd.exports,u_;function fN(){return u_||(u_=1,function(i,e){(function(t,n){i.exports=n()})(hN,function(){var t=function(){function n(d){return o.appendChild(d.dom),d}function r(d){for(var p=0;p<o.children.length;p++)o.children[p].style.display=p===d?"block":"none";s=d}var s=0,o=document.createElement("div");o.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",o.addEventListener("click",function(d){d.preventDefault(),r(++s%o.children.length)},!1);var a=(performance||Date).now(),l=a,c=0,u=n(new t.Panel("FPS","#0ff","#002")),h=n(new t.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var f=n(new t.Panel("MB","#f08","#201"));return r(0),{REVISION:16,dom:o,addPanel:n,showPanel:r,begin:function(){a=(performance||Date).now()},end:function(){c++;var d=(performance||Date).now();if(h.update(d-a,200),d>l+1e3&&(u.update(1e3*c/(d-l),100),l=d,c=0,f)){var p=performance.memory;f.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return d},update:function(){a=this.end()},domElement:o,setMode:r}};return t.Panel=function(n,r,s){var o=1/0,a=0,l=Math.round,c=l(window.devicePixelRatio||1),u=80*c,h=48*c,f=3*c,d=2*c,p=3*c,v=15*c,m=74*c,g=30*c,M=document.createElement("canvas");M.width=u,M.height=h,M.style.cssText="width:80px;height:48px";var b=M.getContext("2d");return b.font="bold "+9*c+"px Helvetica,Arial,sans-serif",b.textBaseline="top",b.fillStyle=s,b.fillRect(0,0,u,h),b.fillStyle=r,b.fillText(n,f,d),b.fillRect(p,v,m,g),b.fillStyle=s,b.globalAlpha=.9,b.fillRect(p,v,m,g),{dom:M,update:function(y,C){o=Math.min(o,y),a=Math.max(a,y),b.fillStyle=s,b.globalAlpha=1,b.fillRect(0,0,u,v),b.fillStyle=r,b.fillText(l(y)+" "+n+" ("+l(o)+"-"+l(a)+")",f,d),b.drawImage(M,p+c,v,m-c,g,p,v,m-c,g),b.fillRect(p+m-c,v,c,g),b.fillStyle=s,b.globalAlpha=.9,b.fillRect(p+m-c,v,c,l((1-y/C)*g))}}},t})}(Cd)),Cd.exports}fN();const dN={key:0,args:[0,1,64]},pN={key:1,args:[.5,1,64]},mN={key:2},gN=["tone-mapped","map","side","color"];new we(16777215);const vN=Ui({__name:"HomeView",setup(i){const e=qL();return(t,n)=>{const r=SM("TresCanvas");return dn(),Oa(r,{key:Ve(e).fullPath,"window-size":"",preset:"realistic",shadows:"",class:"w-screen h-[calc(100vh-64px)]","tone-mapping-exposure":.9},{default:B_(()=>[n[0]||(n[0]=Wn("TresPerspectiveCamera",{makeDefault:"",position:[0,1,5]},null,-1)),zt(Ve(jD),{makeDefault:"",mouseButtons:{LEFT:Ve(Hn).ROTATE,MIDDLE:Ve(Hn).PAN,RIGHT:Ve(Hn).DOLLY}},null,8,["mouseButtons"]),n[1]||(n[1]=Wn("TresDirectionalLight",{position:[4,6,2],intensity:2,"cast-shadow":""},null,-1)),n[2]||(n[2]=Wn("TresAmbientLight",{intensity:.2},null,-1)),zt(F3)]),_:1})}}}),_N=Wp(vN,[["__scopeId","data-v-0caa1c07"]]),xN={};function yN(i,e){return dn(),ui(Tn,null,[e[0]||(e[0]=Wn("h1",{class:"text"}," I still have another Jim Green to scan, waiting for a higher quality setup :) ",-1)),e[1]||(e[1]=Wn("h1",null,null,-1))],64)}const bN=Wp(xN,[["render",yN],["__scopeId","data-v-335078e8"]]),MN=jL({history:ML("/jim-green-project/"),routes:[{path:"/",component:_N},{path:"/about",component:bN}]}),wh=FS(KL);wh.use(W2());wh.use(MN);wh.use(H2);wh.mount("#app");
